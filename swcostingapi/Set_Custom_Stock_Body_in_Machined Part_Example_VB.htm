<html>

<head>
<title>Set Custom Stock Body in Machined Part Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples">
<meta name=MS-HKWD content="VBA examples,machining Costing analysis">
<meta name=MS-HKWD content="VBA examples,custom stock body">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS Costing API 
 Help</span></h1>
<h1>Set Custom Stock Body in Machined Part Example (VBA)</h1>
<p>This example shows how to set a custom stock body in a machined part.</p>
<pre>'-----------------------------------------------
' Preconditions:
' 1. Verify that the specified
'    * part documents to open and reference exist.
'    * Costing template exists by clicking
'    <b>  Tools &gt; Options &gt; System Options &gt; File Locations</b> 
'      and selecting <b>Costing templates</b> in <b>Show folders for</b> 
'      in SOLIDWORKS. Click <b>Cancel</b> to close the dialog.
' 2. Add a reference to <b>sldcostingapi.tlb</b>.
' 3. Open the Immediate window.
' 4. Run the macro.
'
' Postconditions:
' 1. Opens the specified part document.
' 2. Creates common and machining Costing analyses, which can
'    take one or more minutes to complete.
' 3. Sets and gets custom stock body Costing information and 
'    updates the estimated total cost to manufacture the part, 
'    which can take one or more minutes to complete.
' 4. Examine the Immediate window
'
' <b>NOTE</b>: Because the part is used elsewhere, do not
' save any changes when closing it.
'------------------------------------------------
Option Explicit

    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swModelDocExt As SldWorks.ModelDocExtension
    Dim swCosting As SldCostingAPI.CostManager
    Dim swCostingPart As SldCostingAPI.CostPart
    Dim swCostingBody As SldCostingAPI.CostBody
    Dim swCostingModel As Object
    Dim swCostingAnalysis As SldCostingAPI.CostAnalysis
    Dim swCostingMachining As SldCostingAPI.CostAnalysisMachining
    Dim fileName As String
    Dim errors As Long
    Dim warnings As Long
    Dim nbrCostingBodies As Long
    Dim costingBodies As Variant
    Dim costingBodyName As String
    Dim i As Long
    Dim isBody As Boolean    </pre>
<pre>    Sub main()    </pre>
<blockquote>
	<pre>    Set swApp = Application.SldWorks</pre>
	<pre>    ' Open part specified document
    fileName = &quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\api\clamp1.sldprt&quot;
    Set swModel = swApp.<b>OpenDoc6</b>(fileName, swDocumentTypes_e.swDocPART, swOpenDocOptions_e.swOpenDocOptions_Silent, &quot;&quot;, errors, warnings)
    Set swModelDocExt = swModel.<b>Extension</b>   </pre>
	<pre>    ' Get CostingManager
    Set swCosting = swModelDocExt.<b>GetCostingManager</b>
    swCosting.<b>WaitForUIUpdate</b>   </pre>
	<pre>    ' Get Costing part
    Set swCostingModel = swCosting.<b>CostingModel</b>
    Set swCostingPart = swCostingModel    </pre>
	<pre>    ' Create common Costing analysis
    Set swCostingAnalysis = swCostingPart.<b>CreateCostAnalysis</b>(&quot;C:\Program Files\SolidWorks Corp\SolidWorks\lang\english\costing templates\multibodytemplate_default(englishstandard).sldctc&quot;)</pre>
	<pre>    ' Get common Costing analysis data
    Debug.Print (&quot;Common Costing analysis data:&quot;)
    Debug.Print (&quot;    Template name:  &quot; &amp; swCostingAnalysis.<b>costingTemplateName</b>)
    Debug.Print (&quot;    Currency code: &quot; &amp; swCostingAnalysis.<b>CurrencyCode</b>)
    Debug.Print (&quot;    Currency name: &quot; &amp; swCostingAnalysis.<b>CurrencyName</b>)
    Debug.Print (&quot;    Currency separator: &quot; &amp; swCostingAnalysis.<b>CurrencySeparator</b>)
    Debug.Print (&quot;    Total manufacturing cost: &quot; &amp; swCostingAnalysis.<b>GetManufacturingCost</b>)
    Debug.Print (&quot;    Material costs: &quot; &amp; swCostingAnalysis.<b>GetMaterialCost</b>)
    Debug.Print (&quot;    Setup cost: &quot; &amp; swCostingAnalysis.<b>GetSetupCost</b>)
    Debug.Print (&quot;    Total cost to charge: &quot; &amp; swCostingAnalysis.<b>GetTotalCostToCharge</b>)
    Debug.Print (&quot;    Total cost to manufacture: &quot; &amp; swCostingAnalysis.<b>GetTotalCostToManufacture</b>)
    Debug.Print (&quot;    Lot size: &quot; &amp; swCostingAnalysis.<b>LotSize</b>)
    Debug.Print (&quot;    Total quantity: &quot; &amp; swCostingAnalysis.<b>TotalQuantity</b>)
    Debug.Print &quot;&quot;    </pre>
	<pre>    ' Get Costing bodies
    nbrCostingBodies = swCostingPart.<b>GetBodyCount</b>
    isBody = False
    If (nbrCostingBodies &gt; 0) Then
        Debug.Print &quot;Costing bodies:&quot;
        Debug.Print (&quot;    Number of Costing bodies: &quot; &amp; nbrCostingBodies)
        costingBodies = swCostingPart.<b>GetBodies</b>
            For i = 0 To (nbrCostingBodies - 1)
                Set swCostingBody = costingBodies(i)
                costingBodyName = swCostingBody.<b>GetName</b>
                Debug.Print (&quot;    Name of Costing body: &quot; &amp; costingBodyName)
                ' Make sure body is machining body
                If (swCostingBody.GetBodyType = swcBodyType_e.swcBodyType_Machined) Then
                    isBody = True
                    ' Determine analysis status of Costing body
                    Select Case swCostingBody.<b>BodyStatus</b>
                        Case swcBodyStatus_e.swcBodyStatus_NotAnalysed
                            ' Create Costing analysis
                            Set swCostingAnalysis = swCostingBody.<b>CreateCostAnalysis</b>(&quot;C:\Program Files\SolidWorks Corp\SolidWorks\lang\english\costing templates\machiningtemplate_default(englishstandard).sldcts&quot;)
                            Debug.Print (&quot;    Creating machining Costing analysis for: &quot; &amp; swCostingBody.<b>GetName</b>)
                        Case swcBodyStatus_e.swcBodyStatus_Analysed
                            ' Get Costing analysis
                            Set swCostingAnalysis = swCostingBody.<b>GetCostAnalysis</b>
                            Debug.Print (&quot;    Getting machining Costing analysis for: &quot; &amp; swCostingBody.<b>GetName</b>)
                        Case swcBodyStatus_e.swcBodyStatus_Excluded
                            ' Body excluded from Costing analysis
                            Debug.Print (&quot;    Excluded from machining Costing analysis: &quot; &amp; swCostingBody.<b>GetName</b>)
                        Case swcBodyStatus_e.swcBodyStatus_AssignedCustomCost
                            ' Body has an assigned custom Cost
                            Debug.Print (&quot;    Custom cost assigned: &quot; &amp; swCostingBody.<b>GetName</b>)
                    End Select
                    Debug.Print &quot;&quot;
                End If
            Next i
    End If
    </pre>
	<pre>    If Not isBody Then
        Debug.Print (&quot;&quot;)
        Debug.Print (&quot;No bodies in part! Exiting macro.&quot;)
        Exit Sub
    End If
    </pre>
	<pre>    ' Get machining Costing analysis data
    Set swCostingMachining = swCostingAnalysis.<b>GetSpecificAnalysis</b>
    Debug.Print &quot;Machining Costing analysis: &quot;
    Debug.Print (&quot;    Current material: &quot; &amp; swCostingMachining.<b>CurrentMaterial</b>)
    Debug.Print (&quot;    Current material class: &quot; &amp; swCostingMachining.<b>CurrentMaterialClass</b>)
    Debug.Print (&quot;    Current plate thickness: &quot; &amp; swCostingMachining.<b>CurrentPlateThickness</b>)
    Debug.Print (&quot;&quot;)
        </pre>
	<pre>    ' Set and get custom stock body Costing information
    swCostingMachining.<b>CurrentStockType</b> = swcStockType_e.swcStockType_Custom
    Debug.Print &quot;Custom stock body Costing information:&quot;
    swCostingMachining.<b>CustomStockBodyName</b> = &quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\api\clamp2.sldprt&quot;
    Debug.Print &quot;    Body: &quot; &amp; swCostingMachining.<b>CustomStockBodyName</b>
    swCostingMachining.<b>CustomStockCostInfoType</b> = swcCustomStockCostInfoType_e.swcCustomStockCostType_CustomCost
    Debug.Print &quot;    Information type: &quot; &amp; swCostingMachining.<b>CustomStockCostInfoType</b>
    swCostingMachining.<b>CustomStockCustomCost</b> = 3.53
    Debug.Print &quot;    Cost: &quot; &amp; swCostingMachining.<b>CustomStockCustomCost</b>
    swCostingMachining.<b>CustomStockImportType</b> = swcCustomStockImportType_e.swcCustomStockImportType_ReferencePart
    Debug.Print &quot;    Import type: &quot; &amp; swCostingMachining.<b>CustomStockImportType</b></pre>
	<pre>    Debug.Print (&quot;&quot;)

    ' Updated estimated total cost to manufacture the part
    Debug.Print (&quot;Updated estimated total cost to manufacture: &quot; &amp; swCostingAnalysis.<b>GetTotalCostToManufacture</b>)<b>
</b>
    </pre>
</blockquote>
<pre>End Sub</pre>
<p>&nbsp;</p>

</body>

</html>
