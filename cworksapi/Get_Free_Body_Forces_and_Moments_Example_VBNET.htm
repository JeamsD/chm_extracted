<html>

<head>
<title>Get Free Body Forces and Moments Example (VB.NET)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VB.NET examples,free body forces">
<meta name=MS-HKWD content="VB.NET examples,forces">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS Simulation API 
 Help</span></h1>
<h1>Get Free Body Forces and Moments Example (VB.NET)</h1>
<p>This example shows how to get the free body forces and moments for selected 
entities.</p>
<p><span style="font-weight: bold;">NOTE:</span> To get persistent reference 
 identifiers (PIDs) for model selections, you can use
<a href="GettingStarted-swsimulationapi.html">pidcollector.exe</a> 
 or IModelDocExtension::GetPersistReference3.</p>
<div style="font-family:Monospace; font-size: 10pt; background-color: white;">
	<p class="APICODE"><span style="color:Green">
	'----------------------------------------------------------------------------&nbsp;&nbsp;<br>
	' Preconditions: <br>
	</span>
<span style="color:green;">'&nbsp;1.&nbsp;Add&nbsp;the&nbsp;SOLIDWORKS&nbsp;Simulation&nbsp;as&nbsp;an&nbsp;add-in</span>
<span style="color:green;">(in&nbsp;SOLIDWORKS,&nbsp;click&nbsp;<b><br>
</b>'<b>&nbsp;&nbsp;&nbsp; Tools&nbsp;&gt;&nbsp;Add-ins&nbsp;&gt;&nbsp;SOLIDWORKS&nbsp;Simulation &gt; OK</b>).</span><br>
<span style="color: #008000">'</span><span style="color:green;">&nbsp;2.&nbsp;Add&nbsp;the&nbsp;SOLIDWORKS&nbsp;Simulation&nbsp;primary&nbsp;interop&nbsp;assembly&nbsp;as&nbsp;a&nbsp;reference</span><br>
<span style="color: #008000">'</span><span style="color:green;">&nbsp;&nbsp;&nbsp;&nbsp;(in&nbsp;the&nbsp;IDE,&nbsp;click&nbsp;<b>Project&nbsp;&gt;&nbsp;Add&nbsp;Reference&nbsp;&gt;&nbsp;.NET&nbsp;&gt;&nbsp;<br>
</b>'<b>&nbsp;&nbsp;&nbsp; SolidWorks.Interop.cosworks&nbsp;&gt;&nbsp;OK</b>).</span><span style="color:Green"><br>
	' 3. Modify the path to the specified model.<br>
	' 4. Open the Immediate window.<br>
	'<br>
	' Postconditions: Inspect the Immediate window for the free body forces and 
	moments.<br>
	'<br>
	' NOTE: Because this model is used by<br>
	' SOLIDWORKS Simulation tutorial, do not save any<br>
	' changes when closing the document.<br>
	'-------------------------------------------------------------------------<br>
	<br>
	</span><span style="color:Blue">Imports</span><span style="color:Black"> 
	SolidWorks.Interop.sldworks<br>
	</span><span style="color:Blue">Imports</span><span style="color:Black"> 
	SolidWorks.Interop.swconst<br>
	</span><span style="color:Blue">Imports</span><span style="color:Black"> 
	SolidWorks.Interop.cosworks<br>
	</span><span style="color:Blue">Imports</span><span style="color:Black"> 
	System.Runtime.InteropServices<br>
	</span><span style="color:Blue">Imports</span><span style="color:Black"> 
	System<br>
	</span><span style="color:Blue">Imports</span><span style="color:Black"> 
	System.Diagnostics<br>
	<br>
	</span><span style="color:Blue">Partial</span><span style="color:Black">
	</span><span style="color:Blue">Class</span><span style="color:Black"> 
	SolidWorksMacro<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Function</span><span style="color:Black"> 
	VerifyLong(</span><span style="color:Blue">ByVal</span><span style="color:Black"> 
	SwApp </span><span style="color:Blue">As</span><span style="color:Black"> 
	SldWorks, </span><span style="color:Blue">ByVal</span><span style="color:Black"> 
	lExpected </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Long</span><span style="color:Black">,
	</span><span style="color:Blue">ByVal</span><span style="color:Black"> 
	lActual </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Long</span><span style="color:Black">,
	</span><span style="color:Blue">ByVal</span><span style="color:Black"> 
	sMessage </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">String</span><span style="color:Black">)
	</span><span style="color:Blue">As</span><span style="color:Black"> </span>
	<span style="color:Blue">Boolean<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'This 
	function will compare two long values for equivalence.<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'If 
	they are different, an error message is reported with {sMessage}<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'as 
	title, and the function returns false.<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'If 
	equivalent, the function returns true.<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VerifyLong = </span>
	<span style="color:Blue">True<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	lActual &lt;&gt; lExpected </span><span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ErrorMsg(SwApp, sMessage &amp;
	</span><span style="color:#a31515">&quot;: Expected = &quot;</span><span style="color:Black"> 
	&amp; </span><span style="color:Blue">CStr</span><span style="color:Black">(lExpected) 
	&amp; </span><span style="color:#a31515">&quot; , Actual = &quot;</span><span style="color:Black"> 
	&amp; </span><span style="color:Blue">CStr</span><span style="color:Black">(lActual))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VerifyLong = </span><span style="color:Blue">False<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">If<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">Function<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Function</span><span style="color:Black"> 
	VerifyTolerance(</span><span style="color:Blue">ByVal</span><span style="color:Black"> 
	SwApp </span><span style="color:Blue">As</span><span style="color:Black"> 
	SldWorks, </span><span style="color:Blue">ByVal</span><span style="color:Black"> 
	dExpected </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Double</span><span style="color:Black">,
	</span><span style="color:Blue">ByVal</span><span style="color:Black"> 
	dActual </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Double</span><span style="color:Black">,
	</span><span style="color:Blue">ByVal</span><span style="color:Black"> dTol
	</span><span style="color:Blue">As</span><span style="color:Black"> </span>
	<span style="color:Blue">Double</span><span style="color:Black">, </span>
	<span style="color:Blue">ByVal</span><span style="color:Black"> sMessage
	</span><span style="color:Blue">As</span><span style="color:Black"> </span>
	<span style="color:Blue">String</span><span style="color:Black">) </span>
	<span style="color:Blue">As</span><span style="color:Black"> </span>
	<span style="color:Blue">Boolean<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'This 
	function will compare two double values to ensure that the actual<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'value 
	is within the specified tolerance range<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'of 
	the expected value.&nbsp;&nbsp;If the actual is not within the tolerance range,<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'an 
	error message is reported with {sMessage}<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'as 
	title, and the function returns false. Otherwise, the function returns<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'true 
	to indicate equivalence/success.<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VerifyTolerance = </span>
	<span style="color:Blue">True<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	(dActual &lt; ((1 - dTol) * dExpected)) </span><span style="color:Blue">Or</span><span style="color:Black"> 
	(dActual &gt; ((1 + dTol) * dExpected)) </span><span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ErrorMsg(SwApp, sMessage &amp;
	</span><span style="color:#a31515">&quot;: Expected = &quot;</span><span style="color:Black"> 
	&amp; </span><span style="color:Blue">CStr</span><span style="color:Black">(dExpected) 
	&amp; </span><span style="color:#a31515">&quot; , Actual = &quot;</span><span style="color:Black"> 
	&amp; </span><span style="color:Blue">CStr</span><span style="color:Black">(dActual) 
	&amp; </span><span style="color:#a31515">&quot; , Tolerance = &quot;</span><span style="color:Black"> 
	&amp; </span><span style="color:Blue">CStr</span><span style="color:Black">(dTol) 
	&amp; </span><span style="color:#a31515">&quot; percent&quot;</span><span style="color:Black">)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VerifyTolerance = </span><span style="color:Blue">False<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">If<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">Function<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Function</span><span style="color:Black"> 
	SelectByPID(</span><span style="color:Blue">ByVal</span><span style="color:Black"> 
	Part </span><span style="color:Blue">As</span><span style="color:Black"> 
	ModelDoc2, </span><span style="color:Blue">ByVal</span><span style="color:Black"> 
	PIDName </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">String</span><span style="color:Black">,
	</span><span style="color:Blue">ByVal</span><span style="color:Black"> 
	PIDCollection </span><span style="color:Blue">As</span><span style="color:Black"> 
	Collection) </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Object<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	PID() </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Byte<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	PIDVariant </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Object<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	PIDString </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">String<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	i </span><span style="color:Blue">As</span><span style="color:Black"> </span>
	<span style="color:Blue">Integer<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	SelObj </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Object<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Get 
	the string from the collection<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PIDString = </span>
	<span style="color:#a31515">&quot;&quot;<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PIDString = 
	PIDCollection.Item(PIDName)<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Parse the string into an array<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PIDVariant = Split(PIDString,
	</span><span style="color:#a31515">&quot;,&quot;</span><span style="color:Black">)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">ReDim</span><span style="color:Black"> 
	PID(UBound(PIDVariant))<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Change to a byte array<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">For</span><span style="color:Black"> 
	i = 0 </span><span style="color:Blue">To</span><span style="color:Black"> (UBound(PIDVariant) 
	- 1)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PID(i) = PIDVariant(i)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Next</span><span style="color:Black"> 
	i<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Select the entity<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SelObj = 
	Part.<b>Extension</b>.<b>GetObjectByPersistReference</b>((PID))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SelectByPID = SelObj<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SelObj = </span><span style="color:Blue">Nothing<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">Function<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Function</span><span style="color:Black"> 
	PIDInitializer() </span><span style="color:Blue">As</span><span style="color:Black"> 
	Collection<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	PIDCollection </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">New</span><span style="color:Black"> 
	Collection<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	selection1 </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">String<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Constants<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selection1 = </span>
	<span style="color:#a31515">
	&quot;35,29,213,113,218,129,72,162,168,88,152,178,27,137,239,153,161,1,0,0,16,1,0,0,120,1,109,80,77,75,195,64,20,156,42,181,181,234,65,40,232,197,163,224,69,239,182,232,197,84,44,20,34,155,30,60,8,33,110,54,98,219,36,18,183,224,69,200,143,232,111,240,230,69,252,7,30,253,79,141,243,92,226,7,184,135,157,125,51,243,102,121,175,215,5,86,1,84,203,138,55,177,106,96,3,105,126,30,105,163,76,18,234,198,23,13,52,5,197,201,243,244,190,216,127,25,190,142,107,116,109,59,210,86,228,105,48,181,131,204,6,243,34,25,198,202,220,135,218,201,107,34,171,80,203,15,91,124,15,30,173,127,51,49,218,58,106,155,212,89,96,139,187,236,246,34,202,226,153,33,189,172,14,60,244,112,141,75,20,200,49,129,129,134,101,29,32,101,61,101,45,90,68,213,226,129,111,69,70,20,75,28,17,35,196,56,162,123,4,143,62,133,49,214,75,166,118,254,243,173,0,31,39,125,31,184,218,237,28,186,57,221,205,134,150,199,192,132,113,115,204,24,94,159,231,214,49,246,88,188,157,246,125,217,143,140,214,149,209,178,88,246,247,103,5,205,178,253,23&quot;<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selection1 = selection1 &amp; </span>
	<span style="color:#a31515">
	&quot;7,173,119,10,108,150,220,236,47,165,78,254,193,79,249,139,99,22,0,0,0,0,0,0,0,0&quot;<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selection1 = selection1 &amp; </span>
	<span style="color:#a31515">&quot;,Type=1&quot;<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Store 
	constants in a collection<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PIDCollection.Add(selection1,
	</span><span style="color:#a31515">&quot;selection1&quot;</span><span style="color:Black">)<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	selection2 </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">String<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Constants<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selection2 = </span>
	<span style="color:#a31515">
	&quot;35,29,213,113,218,129,72,162,168,88,152,178,27,137,239,153,155,1,0,0,15,1,0,0,120,1,109,80,203,74,195,64,20,61,245,85,45,186,16,10,186,113,41,184,209,189,6,221,152,20,11,133,200,164,136,11,161,196,201,68,108,155,68,198,41,116,83,200,71,248,13,238,220,72,255,160,75,255,169,241,12,211,136,130,179,184,119,238,121,13,119,188,54,176,14,160,90,86,172,236,85,3,123,200,138,59,165,141,154,10,149,14,100,181,58,86,134,53,91,128,217,226,237,248,163,251,217,175,187,51,182,105,12,242,164,19,75,21,77,116,218,77,132,122,25,72,199,109,145,235,8,155,230,30,8,166,38,124,28,42,105,28,180,79,250,58,50,250,57,127,186,137,243,100,172,8,47,171,19,31,23,120,192,45,52,10,12,161,32,97,56,71,200,56,143,56,91,46,38,107,240,202,187,32,98,25,195,222,99,143,145,224,140,234,30,124,234,4,250,216,41,153,218,250,79,199,197,190,46,189,16,184,63,108,157,186,37,93,165,161,233,51,48,101,220,4,99,134,215,231,189,121,142,35,14,243,43,47,108,172,64,187,222,129,93,85,23,89,52,50,65,110,254,252,196,102,185,253,99,2&quot;<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selection2 = selection2 &amp; </span>
	<span style="color:#a31515">
	&quot;17,160,101,183,4,126,99,117,140,77,251,6,67,218,108,28,0,0,0,0,0,0,0,0&quot;<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selection2 = selection2 &amp; </span>
	<span style="color:#a31515">&quot;,Type=1&quot;<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Store 
	constants in a collection<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PIDCollection.Add(selection2,
	</span><span style="color:#a31515">&quot;selection2&quot;</span><span style="color:Black">)<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PIDInitializer = PIDCollection<br>
	&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">Function<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Sub</span><span style="color:Black"> 
	ErrorMsg(</span><span style="color:Blue">ByVal</span><span style="color:Black"> 
	SwApp </span><span style="color:Blue">As</span><span style="color:Black"> 
	SldWorks, </span><span style="color:Blue">ByVal</span><span style="color:Black"> 
	Message </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">String</span><span style="color:Black">)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SwApp.<b>SendMsgToUser2</b>(Message, 0, 0)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SwApp.<b>RecordLine</b>(</span><span style="color:#a31515">&quot;'*** WARNING - 
	General&quot;</span><span style="color:Black">)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SwApp.<b>RecordLine</b>(</span><span style="color:#a31515">&quot;'*** &quot;</span><span style="color:Black"> 
	&amp; Message)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SwApp.<b>RecordLine</b>(</span><span style="color:#a31515">&quot;&quot;</span><span style="color:Black">)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">Sub<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Sub</span><span style="color:Black"> 
	main()<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	Part </span><span style="color:Blue">As</span><span style="color:Black"> 
	ModelDoc2<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	COSMOSWORKS </span><span style="color:Blue">As</span><span style="color:Black"> 
	CosmosWorks, CWAddinCallBack </span><span style="color:Blue">As</span><span style="color:Black"> 
	CwAddincallback, ActDoc </span><span style="color:Blue">As</span><span style="color:Black"> 
	CWModelDoc<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	StudyMngr </span><span style="color:Blue">As</span><span style="color:Black"> 
	CWStudyManager, Study </span><span style="color:Blue">As</span><span style="color:Black"> 
	CWStudy, CWMesh </span><span style="color:Blue">As</span><span style="color:Black"> 
	CWMesh<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	StudyOptions </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Object</span><span style="color:Black">, 
	CWFeatObj </span><span style="color:Blue">As</span><span style="color:Black"> 
	CWResults, ActDocExt </span><span style="color:Blue">As</span><span style="color:Black"> 
	ModelDocExtension<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	sModelName </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">String</span><span style="color:Black">, 
	sStudyName </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">String<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	sStudyConfig </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">String<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	longstatus </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Long</span><span style="color:Black">, 
	longwarnings </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Long</span><span style="color:Black">, 
	errCode </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Long<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	el </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Double</span><span style="color:Black">, 
	el_hold </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Double<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	tl </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Double</span><span style="color:Black">, 
	tl_hold </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Double<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	UResMax </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Double</span><span style="color:Black">, 
	Tol1 </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Double<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	bStudyFound </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Boolean<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	DispArray1(0) </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Object</span><span style="color:Black">, 
	DispArray2(0) </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Object</span><span style="color:Black">, 
	Force </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Object<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	iMeshUnit </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Long</span><span style="color:Black">, 
	iSolverType </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Long</span><span style="color:Black">, 
	iNumberOfStudies </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Long<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	ix </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Long</span><span style="color:Black">, 
	iStudyType </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">Long<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sModelName = </span>
	<span style="color:#a31515">&quot;public_documents\samples\tutorial\api\Remoteload.sldprt&quot;</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Model 
	name<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'SOLIDWORKS 
	configuration that study is active under (Blank &quot;&quot; = use default)<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sStudyConfig = </span>
	<span style="color:#a31515">&quot;&quot;<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sStudyName = </span>
	<span style="color:#a31515">&quot;Study 1&quot;</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Study 
	name<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iSolverType = 
	swsSolverType_e.swsSolverTypeFFEPlus </span><span style="color:Green">
	'Solver type<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Dim</span><span style="color:Black"> 
	PIDCollection </span><span style="color:Blue">As</span><span style="color:Black">
	</span><span style="color:Blue">New</span><span style="color:Black"> 
	Collection<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PIDCollection = PIDInitializer()<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Part = swApp.<b>OpenDoc6</b>(sModelName, swDocumentTypes_e.swDocPART, 1,
	</span><span style="color:#a31515">&quot;&quot;</span><span style="color:Black">, 
	longstatus, longwarnings)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	Part </span><span style="color:Blue">Is</span><span style="color:Black">
	</span><span style="color:Blue">Nothing</span><span style="color:Black">
	</span><span style="color:Blue">Then</span><span style="color:Black"> 
	ErrorMsg(SwApp, </span><span style="color:#a31515">&quot;Failed to open: &quot;</span><span style="color:Black"> 
	&amp; sModelName) : </span><span style="color:Blue">GoTo</span><span style="color:Black"> 
	Lastline<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CWAddinCallBack = SwApp.<b>GetAddInObject</b>(</span><span style="color:#a31515">&quot;SldWorks.Simulation&quot;</span><span style="color:Black">)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	CWAddinCallBack </span><span style="color:Blue">Is</span><span style="color:Black">
	</span><span style="color:Blue">Nothing</span><span style="color:Black">
	</span><span style="color:Blue">Then</span><span style="color:Black"> 
	ErrorMsg(SwApp, </span><span style="color:#a31515">&quot;CWAddinCallBack object 
	not found&quot;</span><span style="color:Black">) : </span>
	<span style="color:Blue">GoTo</span><span style="color:Black"> Lastline<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COSMOSWORKS = CWAddinCallBack.<b>COSMOSWORKS</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	COSMOSWORKS </span><span style="color:Blue">Is</span><span style="color:Black">
	</span><span style="color:Blue">Nothing</span><span style="color:Black">
	</span><span style="color:Blue">Then</span><span style="color:Black"> 
	ErrorMsg(SwApp, </span><span style="color:#a31515">&quot;COSMOSWORKS object not 
	found&quot;</span><span style="color:Black">) : </span><span style="color:Blue">
	GoTo</span><span style="color:Black"> Lastline<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Get active document<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ActDoc = COSMOSWORKS.<b>ActiveDoc</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	ActDoc </span><span style="color:Blue">Is</span><span style="color:Black">
	</span><span style="color:Blue">Nothing</span><span style="color:Black">
	</span><span style="color:Blue">Then</span><span style="color:Black"> 
	ErrorMsg(SwApp, </span><span style="color:#a31515">&quot;No active document&quot;</span><span style="color:Black">) 
	: </span><span style="color:Blue">GoTo</span><span style="color:Black"> 
	Lastline<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'If needed, rebuild the model<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ActDocExt = Part.<b>Extension</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	(ActDocExt.<b>NeedsRebuild</b> = </span><span style="color:Blue">True</span><span style="color:Black">)
	</span><span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Part.<b>ForceRebuild3</b>(</span><span style="color:Blue">False</span><span style="color:Black">)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">If<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'If 
	needed, change the SOLIDWORKS configuration to activate the study<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	sStudyConfig &lt;&gt; </span><span style="color:#a31515">&quot;&quot;</span><span style="color:Black">
	</span><span style="color:Blue">Then<br>
	</span><span style="color:Black">
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Part.<b>ShowConfiguration2</b>(sStudyConfig)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">If<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StudyMngr = ActDoc.<b>StudyManager</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	StudyMngr </span><span style="color:Blue">Is</span><span style="color:Black">
	</span><span style="color:Blue">Nothing</span><span style="color:Black">
	</span><span style="color:Blue">Then</span><span style="color:Black"> 
	ErrorMsg(SwApp, </span><span style="color:#a31515">&quot;StudyMngr object not 
	there&quot;</span><span style="color:Black">) : </span><span style="color:Blue">
	GoTo</span><span style="color:Black"> Lastline<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Find the study<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bStudyFound = </span>
	<span style="color:Blue">False<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Study = </span>
	<span style="color:Blue">Nothing<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iNumberOfStudies = 
	StudyMngr.<b>StudyCount</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">For</span><span style="color:Black"> 
	ix = 0 </span><span style="color:Blue">To</span><span style="color:Black"> 
	iNumberOfStudies<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StudyMngr.<b>ActiveStudy</b> = ix<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Study = StudyMngr.<b>GetStudy</b>(ix)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	Study </span><span style="color:Blue">Is</span><span style="color:Black">
	</span><span style="color:Blue">Nothing</span><span style="color:Black">
	</span><span style="color:Blue">Then</span><span style="color:Black"> 
	ErrorMsg(SwApp, </span><span style="color:#a31515">&quot;Failed to get study 
	number: &quot;</span><span style="color:Black"> &amp; ix) : </span>
	<span style="color:Blue">GoTo</span><span style="color:Black"> Lastline<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	UCase(Study.<b>Name</b>) = UCase(sStudyName) </span><span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bStudyFound = </span>
	<span style="color:Blue">True<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Exit</span><span style="color:Black">
	</span><span style="color:Blue">For<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">If<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Next<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	bStudyFound = </span><span style="color:Blue">False</span><span style="color:Black">
	</span><span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ErrorMsg(SwApp, </span>
	<span style="color:#a31515">&quot;Failed to find study named: &quot;</span><span style="color:Black"> 
	&amp; sStudyName) : </span><span style="color:Blue">GoTo</span><span style="color:Black"> 
	Lastline<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">If<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Create 
	mesh<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CWMesh = Study.<b>Mesh</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	CWMesh </span><span style="color:Blue">Is</span><span style="color:Black">
	</span><span style="color:Blue">Nothing</span><span style="color:Black">
	</span><span style="color:Blue">Then</span><span style="color:Black"> 
	ErrorMsg(SwApp, </span><span style="color:#a31515">&quot;No mesh object&quot;</span><span style="color:Black">) 
	: </span><span style="color:Blue">GoTo</span><span style="color:Black"> 
	Lastline<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Check if need to use the default 
	element size or tolerance<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	((el = 0) </span><span style="color:Blue">Or</span><span style="color:Black"> 
	(tl = 0)) </span><span style="color:Blue">Then<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Get 
	the default element size and tolerance<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Call</span><span style="color:Black"> 
	CWMesh.<b>GetDefaultElementSizeAndTolerance</b>(iMeshUnit, el_hold, tl_hold)<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'If element size was not 
	entered, use the default<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	el = 0 </span><span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;el = el_hold<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">If<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'If 
	tolerance size was not entered, use the default<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	tl = 0 </span><span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tl = tl_hold<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">If<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">If<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Create 
	Mesh<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Using 
	the curvature-based mesher?<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	CWMesh.<b>MesherType</b> = swsMesherType_e.swsMesherTypeAlternate </span>
	<span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Yes, 
	set the mininum element size equal to the maximum element size<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errCode = Study.<b>CreateMesh</b>(0, 
	el, el)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Else<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'No, 
	using the standard mesher<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errCode = Study.<b>CreateMesh</b>(0, 
	el, tl)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">If<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	errCode &lt;&gt; 0 </span><span style="color:Blue">Then</span><span style="color:Black"> 
	ErrorMsg(SwApp, </span><span style="color:#a31515">&quot;CreateMesh failed: Error 
	code = &quot;</span><span style="color:Black"> &amp; </span><span style="color:Blue">
	CStr</span><span style="color:Black">(errCode)) : </span>
	<span style="color:Blue">GoTo</span><span style="color:Black"> Lastline<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Check the mesh stat<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	VerifyLong(swApp, swsMeshState_e.swsMeshStateExistsAndCurrent, 
	CWMesh.<b>MeshState</b>, </span><span style="color:#a31515">&quot;MeshState indicates 
	that mesh is not current and/or doesn't exist&quot;</span><span style="color:Black">) 
	= </span><span style="color:Blue">False</span><span style="color:Black">
	</span><span style="color:Blue">Then</span><span style="color:Black"> </span>
	<span style="color:Blue">GoTo</span><span style="color:Black"> Lastline<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Check the number of components 
	that failed to mesh<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	VerifyLong(SwApp, 0, CWMesh.<b>GetNoOfFailedComponents</b>, </span>
	<span style="color:#a31515">&quot;GetNoOfFailedComponents indicates mesh failure&quot;</span><span style="color:Black">) 
	= </span><span style="color:Blue">False</span><span style="color:Black">
	</span><span style="color:Blue">Then</span><span style="color:Black"> </span>
	<span style="color:Blue">GoTo</span><span style="color:Black"> Lastline<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Get analysis type<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iStudyType = Study.<b>AnalysisType</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	iStudyType = swsAnalysisStudyType_e.swsAnalysisStudyTypeStatic </span>
	<span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StudyOptions = 
	Study.<b>StaticStudyOptions</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">ElseIf</span><span style="color:Black"> 
	iStudyType = swsAnalysisStudyType_e.swsAnalysisStudyTypeThermal </span>
	<span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StudyOptions = 
	Study.<b>ThermalStudyOptions</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">ElseIf</span><span style="color:Black"> 
	iStudyType = swsAnalysisStudyType_e.swsAnalysisStudyTypeFrequency </span>
	<span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StudyOptions = 
	Study.<b>FrequencyStudyOptions</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">ElseIf</span><span style="color:Black"> 
	iStudyType = swsAnalysisStudyType_e.swsAnalysisStudyTypeBuckling </span>
	<span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StudyOptions = 
	Study.<b>BucklingStudyOptions</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">ElseIf</span><span style="color:Black"> 
	iStudyType = swsAnalysisStudyType_e.swsAnalysisStudyTypeNonlinear </span>
	<span style="color:Blue">Then<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StudyOptions = 
	Study.<b>NonLinearStudyOptions</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Else<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ErrorMsg(swApp, </span>
	<span style="color:#a31515">&quot;StudyOptions for this analysis type is not yet 
	supported&quot;</span><span style="color:Black">) : </span>
	<span style="color:Blue">GoTo</span><span style="color:Black"> Lastline<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">If<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	StudyOptions </span><span style="color:Blue">Is</span><span style="color:Black">
	</span><span style="color:Blue">Nothing</span><span style="color:Black">
	</span><span style="color:Blue">Then</span><span style="color:Black"> 
	ErrorMsg(SwApp, </span><span style="color:#a31515">&quot;Failed to get 
	StudyOptions object&quot;</span><span style="color:Black">) : </span>
	<span style="color:Blue">GoTo</span><span style="color:Black"> Lastline<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Set solver type<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StudyOptions.<b>SolverType</b> = 
	iSolverType<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Running analysis<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errCode = Study.<b>RunAnalysis</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	errCode &lt;&gt; 0 </span><span style="color:Blue">Then</span><span style="color:Black"> 
	ErrorMsg(SwApp, </span><span style="color:#a31515">&quot;Analysis failed with 
	error code &quot;</span><span style="color:Black"> &amp; errCode) : </span>
	<span style="color:Blue">GoTo</span><span style="color:Black"> Lastline<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Getting results<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CWFeatObj = Study.<b>Results</b><br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	CWFeatObj </span><span style="color:Blue">Is</span><span style="color:Black">
	</span><span style="color:Blue">Nothing</span><span style="color:Black">
	</span><span style="color:Blue">Then</span><span style="color:Black"> 
	ErrorMsg(SwApp, </span><span style="color:#a31515">&quot;Failed to get result 
	object&quot;</span><span style="color:Black">) : </span><span style="color:Blue">
	GoTo</span><span style="color:Black"> Lastline<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DispArray1(0) = SelectByPID(Part, </span>
	<span style="color:#a31515">&quot;selection1&quot;</span><span style="color:Black">, 
	PIDCollection)&nbsp;&nbsp;</span><span style="color:Green">'Face&lt;1&gt;<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DispArray2(0) = SelectByPID(Part,
	</span><span style="color:#a31515">&quot;selection2&quot;</span><span style="color:Black">, 
	PIDCollection)&nbsp;&nbsp;</span><span style="color:Green">'Vertex moment reference<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Force = 
	CWFeatObj.<b>GetFreeBodyForcesAndMoments</b>(</span><span style="color:Blue">Nothing</span><span style="color:Black">, 
	(DispArray2), (DispArray1), 0, errCode)<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;Free body forces and 
	moments:&quot;</span><span style="color:Black">)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Free body force 
	x-components of all selections: &quot;</span><span style="color:Black"> &amp; 
	Force(0))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Free body force 
	y-components of all selections: &quot;</span><span style="color:Black"> &amp; 
	Force(1))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Free body force 
	z-components of all selections: &quot;</span><span style="color:Black"> &amp; 
	Force(2))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Resultant free 
	body force of all selections: &quot;</span><span style="color:Black"> &amp; Force(3))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Free body moment 
	x-components of all selections: &quot;</span><span style="color:Black"> &amp; 
	Force(4))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Free body moment 
	y-components of all selections: &quot;</span><span style="color:Black"> &amp; 
	Force(5))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Free body moment 
	z-components of all selections: &quot;</span><span style="color:Black"> &amp; 
	Force(6))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Resultant free 
	body moment of all selections: &quot;</span><span style="color:Black"> &amp; 
	Force(7))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Free body force 
	x-components of entire model: &quot;</span><span style="color:Black"> &amp; Force(8))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Free body force 
	y-components of entire model: &quot;</span><span style="color:Black"> &amp; Force(9))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Free body force 
	z-components of entire model: &quot;</span><span style="color:Black"> &amp; 
	Force(10))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Resultant free 
	body force of entire model: &quot;</span><span style="color:Black"> &amp; Force(11))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Free body moment 
	x-components of entire model: &quot;</span><span style="color:Black"> &amp; 
	Force(12))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Free body moment 
	y-components of entire model: &quot;</span><span style="color:Black"> &amp; 
	Force(13))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Free body moment 
	z-components of entire model: &quot;</span><span style="color:Black"> &amp; 
	Force(14))<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp; Resultant free 
	body moment of entire model: &quot;</span><span style="color:Black"> &amp; Force(15))<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	errCode &lt;&gt; 0 </span><span style="color:Blue">Then</span><span style="color:Black"> 
	ErrorMsg(SwApp, </span><span style="color:#a31515">&quot;Failed to get free body 
	force result&quot;</span><span style="color:Black">) : </span>
	<span style="color:Blue">GoTo</span><span style="color:Black"> Lastline<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UResMax = 100<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tol1 = 0.1<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">'Check resultant free body force<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">If</span><span style="color:Black"> 
	VerifyTolerance(SwApp, UResMax, </span><span style="color:Blue">CDbl</span><span style="color:Black">(Force(3)), 
	Tol1, </span><span style="color:#a31515">&quot; Resultant free body force of all 
	selections is beyond tolerance&quot;</span><span style="color:Black">) = </span>
	<span style="color:Blue">False</span><span style="color:Black"> </span>
	<span style="color:Blue">Then</span><span style="color:Black"> </span>
	<span style="color:Blue">GoTo</span><span style="color:Black"> Lastline<br>
	<br>
	Lastline:<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">End</span><span style="color:Black">
	</span><span style="color:Blue">Sub<br>
	<br>
	</span><span style="color:Black">&nbsp;&nbsp; <br>
	&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">Public</span><span style="color:Black"> 
	swApp </span><span style="color:Blue">As</span><span style="color:Black"> 
	SldWorks<br>
	<br>
	<br>
	</span><span style="color:Blue">End</span><span style="color:Black"> </span>
	<span style="color:Blue">Class</span>
</div>
<p class=APICODE>&nbsp;</p>

<p>&nbsp;</p>

</body>

</html>
