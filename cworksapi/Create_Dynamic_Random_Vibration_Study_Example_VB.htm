<html>

<head>
<title>Create Linear Dynamic Random Vibration Study Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples,dynamic study">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS Simulation API 
 Help</span></h1>
<h1>Create Linear Dynamic Random Vibration Study Example (VBA)</h1>
<p>This example shows how to create a linear dynamic study with a random 
vibration analysis and get some study options.</p>

<p class="APICODE">
'---------------------------------------------------------------------------<br>
' Preconditions:<br>
' 1. Add the SOLIDWORKS Simulation as an add-in (in SOLIDWORKS, click<br>
'&nbsp;&nbsp;&nbsp; <b>Tools &gt; Add-ins &gt; SOLIDWORKS Simulation &gt; OK</b>).<br>
' 2. Add the SOLIDWORKS Simulation type library as a reference (in the IDE, <br>
'&nbsp;&nbsp;&nbsp; click <b>Tools &gt; References &gt; SOLIDWORKS 
Simulation </b><i>version</i><b> type library</b>).<br>
' 3. Ensure that the specified file to open exists.<br>
' 4. Ensure that the <b>c:\temp</b> folder exists.<br>
'<br>
' Postconditions:<br>
' 1. Opens the specified file.<br>
' 2. Creates a linear dynamic study for random vibration analysis.<br>
' 3. Runs the analysis.<br>
' 4. Prints some study options and results to the Immediate window.<br>
' 5. Saves the solution step, displacement, velocity,<br>
'&nbsp;&nbsp;&nbsp; and stress result files to <b>c:\temp</b>.<br>
'<br>
' NOTE: Because the model is used elsewhere, do not save any changes.<br>
'---------------------------------------------------------------------------</p>
<p class="APICODE">Option Explicit</p>
<p class="APICODE">Sub main()</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Dim SwApp As SldWorks.SldWorks<br>
&nbsp;&nbsp;&nbsp; Dim Part As SldWorks.ModelDoc2<br>
&nbsp;&nbsp;&nbsp; Dim COSMOSWORKS As CosmosWorksLib.COSMOSWORKS<br>
&nbsp;&nbsp;&nbsp; Dim CWAddinCallBack As CosmosWorksLib.CWAddinCallBack<br>
&nbsp;&nbsp;&nbsp; Dim ActDoc As CosmosWorksLib.CWModelDoc<br>
&nbsp;&nbsp;&nbsp; Dim StudyMngr As CosmosWorksLib.CWStudyManager<br>
&nbsp;&nbsp;&nbsp; Dim Study As CosmosWorksLib.CWStudy<br>
&nbsp;&nbsp;&nbsp; Dim ShellMgr As CosmosWorksLib.CWShellManager<br>
&nbsp;&nbsp;&nbsp; Dim ShellMat As CosmosWorksLib.CWMaterial<br>
&nbsp;&nbsp;&nbsp; Dim LBCMgr As CosmosWorksLib.CWLoadsAndRestraintsManager<br>
&nbsp;&nbsp;&nbsp; Dim CWDistribMass As CosmosWorksLib.CWDistributedMass<br>
&nbsp;&nbsp;&nbsp; Dim DynStudyOptions As CosmosWorksLib.CWDynamicStudyOptions<br>
&nbsp;&nbsp;&nbsp; Dim CWBaseExcitationEntity As Object<br>
&nbsp;&nbsp;&nbsp; Dim CWDirectionEntity As Object<br>
&nbsp;&nbsp;&nbsp; Dim longstatus As Long<br>
&nbsp;&nbsp;&nbsp; Dim longwarnings As Long<br>
&nbsp;&nbsp;&nbsp; Dim errCode As Long<br>
&nbsp;&nbsp;&nbsp; Dim boolstatus As Boolean<br>
&nbsp;&nbsp;&nbsp; Dim nStep As Long<br>
&nbsp;&nbsp;&nbsp; Dim pDisp5 As Object<br>
&nbsp;&nbsp;&nbsp; Dim DispArray1 As Variant, DispArray3 As Variant<br>
&nbsp;&nbsp;&nbsp; Dim Disp As Variant, Stress As Variant, Velocity As Variant, 
Acceleration As Variant<br>
&nbsp;&nbsp;&nbsp; Dim sStudyName As String<br>
&nbsp;&nbsp;&nbsp; Dim ResultOptions As CosmosWorksLib.CWStudyResultOptions<br>
&nbsp;&nbsp;&nbsp; Dim DampingOptions As CosmosWorksLib.CWDampingOptions<br>
&nbsp;&nbsp;&nbsp; Dim DampingRatios As Variant<br>
&nbsp;&nbsp;&nbsp; Dim i As Long<br>
&nbsp;&nbsp;&nbsp; Dim freqOption As Long<br>
&nbsp;&nbsp;&nbsp; Dim freqValue As Double<br>
&nbsp;&nbsp;&nbsp; Dim bChecked As Long<br>
&nbsp;&nbsp;&nbsp; Dim forces2 As Variant<br>
&nbsp;&nbsp;&nbsp; Dim selectedAndModelReactionFM As Variant<br>
&nbsp;&nbsp;&nbsp; Dim selectedOnlyReactionFM As Variant<br>
&nbsp;&nbsp;&nbsp; Dim CWFeatObj1 As CosmosWorksLib.CWShell<br>
&nbsp;&nbsp;&nbsp; Dim CWFeatObj2 As CosmosWorksLib.CWPressure<br>
&nbsp;&nbsp;&nbsp; Dim CWFeatObj3 As CosmosWorksLib.CWRestraint<br>
&nbsp;&nbsp;&nbsp; Dim CWFeatObj4 As CosmosWorksLib.CWMesh<br>
&nbsp;&nbsp;&nbsp; Dim CWFeatObj5 As CosmosWorksLib.CWResults<br>
&nbsp;&nbsp;&nbsp; Dim param As Long<br>
&nbsp;&nbsp;&nbsp; Dim dParam As Double<br>
&nbsp;&nbsp;&nbsp; Dim inRadius As Double<br>
&nbsp;&nbsp;&nbsp; Dim outRadius As Double</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Tolerances and baselines<br>
&nbsp;&nbsp;&nbsp; Const MeshEleSize&nbsp;&nbsp; As Double = 26.5868077635828 
'mm<br>
&nbsp;&nbsp;&nbsp; Const MeshTol&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; As Double = 
1.32934038817914 'mm</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Connect to SOLIDWORKS<br>
&nbsp;&nbsp;&nbsp; Set SwApp = Application.SldWorks<br>
&nbsp;&nbsp;&nbsp; If SwApp Is Nothing Then Exit Sub</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Open document<br>
&nbsp;&nbsp;&nbsp; Set Part = SwApp.<b>OpenDoc6</b>(&quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\api\lineardynamic.SLDPRT&quot;, swDocPART, 
swOpenDocOptions_Silent, &quot;&quot;, longstatus, longwarnings)<br>
&nbsp;&nbsp;&nbsp; If Part Is Nothing Then ErrorMsg SwApp, &quot;Failed to open 
lineardynamic.SLDPRT&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Add-in callback<br>
&nbsp;&nbsp;&nbsp; Set CWAddinCallBack = SwApp.<b>GetAddInObject</b>(&quot;CosmosWorks.CosmosWorks&quot;)<br>
&nbsp;&nbsp;&nbsp; If CWAddinCallBack Is Nothing Then ErrorMsg SwApp, &quot;Failed to 
get CwAddincallback object&quot;<br>
&nbsp;&nbsp;&nbsp; Set COSMOSWORKS = CWAddinCallBack.<b>COSMOSWORKS</b><br>
&nbsp;&nbsp;&nbsp; If COSMOSWORKS Is Nothing Then ErrorMsg SwApp, &quot;Failed to get 
CosmosWorks object&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Get active document<br>
&nbsp;&nbsp;&nbsp; Set ActDoc = COSMOSWORKS.<b>ActiveDoc</b>()<br>
&nbsp;&nbsp;&nbsp; If ActDoc Is Nothing Then ErrorMsg SwApp, &quot;Failed to get 
active document&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Create a dynamic random vibration study<br>
&nbsp;&nbsp;&nbsp; Set StudyMngr = ActDoc.<b>StudyManager</b>()<br>
&nbsp;&nbsp;&nbsp; If StudyMngr Is Nothing Then ErrorMsg SwApp, &quot;Failed to get 
study manager object&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; sStudyName = &quot;Dynamic_Random_Vibration&quot;<br>
&nbsp;&nbsp;&nbsp; Set Study = StudyMngr.<b>CreateNewStudy3</b>(sStudyName, 
swsAnalysisStudyTypeDynamic, swsDynamicAnalysisSubTypeRandom, errCode)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Linear dynamic study with 
random vibration analysis&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Study configuration name is &quot; &amp; Study.<b>ConfigurationName</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Dynamic analysis subtype as defined in 
swsAnalysisStudyType_e is &quot; &amp; Study.<b>DynamicAnalysisSubType</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Dynamic study options...&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set DynStudyOptions = Study.<b>DynamicStudyOptions</b></p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>GetFrequencyOption2</b>(freqOption, 
freqValue)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Frequency option (0=number of 
frequencies, 1=upper bound): &quot; &amp; freqOption<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; No. of frequencies or upper-bound 
frequency: &quot; &amp; freqValue<br>
&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>GetFrequencyShiftOption2</b>(bChecked, 
freqValue)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Is frequency shift enabled (0=no, 1=yes)? 
&quot; &amp; bChecked<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Frequency shift: &quot; &amp; freqValue</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>SetIncompatibleBondingOption2</b>(0) 
' automatic<br>
&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>SetUseSoftSpring2</b>(0) ' do 
not use soft springs to stabilize model<br>
&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>SetResultFolderPath2</b>(&quot;c:\temp&quot;)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; DynStudyOptions.<b>SolverType</b> = 2 ' 
FFEPlus</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>GetRandomVibrationAnalysisMethod2</b>(param)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Analysis method as defined in 
swsRandomVibrationAnalysisMethod_e: &quot; &amp; param<br>
&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>GetRandomVibrationBiasingParameter2</b>(dParam)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Biasing parameter: &quot; &amp; param<br>
&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>GetRandomVibrationCorrelationOption2</b>(param)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Correlation option as defined in 
swsRandomVibrationCorrelationOption_e: &quot; &amp; param<br>
&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>GetRandomVibrationCrossModeCutOffRatio2</b>(dParam)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Cross-mode cut-off ratio: &quot; &amp; param<br>
&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>GetRandomVibrationFrequencyLowerLimit2</b>(dParam)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Operating frequency lower limit: &quot; &amp; 
param<br>
&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>GetRandomVibrationFrequencyUnits2</b>(param)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Units of operating frequency as defined 
in swsFrequencyUnit_e: &quot; &amp; param<br>
&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>GetRandomVibrationFrequencyUpperLimit2</b>(dParam)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Operating frequency upper limit: &quot; &amp; 
param<br>
&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>GetRandomVibrationGaussIntegrationOrder2</b>(param)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Gauss integration order as defined in 
swsGaussIntegrationOrder_e: &quot; &amp; param<br>
&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>GetRandomVibrationNoOfFrequencyPoints2</b>(param)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Number of frequency points: &quot; &amp; param<br>
&nbsp;&nbsp;&nbsp; errCode = DynStudyOptions.<b>GetRandomVibrationPartialCorrelationDetails2</b>(param, 
inRadius, outRadius)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Partially correlated units as defined in 
swsLinearUnit_e: &quot; &amp; param<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Inside radius: &quot; &amp; inRadius<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Outside radius: &quot; &amp; outRadius</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Set study result options<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Study result options...&quot;<br>
&nbsp;&nbsp;&nbsp; Set ResultOptions = Study.<b>StudyResultOptions</b><br>
&nbsp;&nbsp;&nbsp; ResultOptions.<b>SaveResultsForSolutionStepsOption</b> = 1 ' 
save solution step results<br>
&nbsp;&nbsp;&nbsp; ResultOptions.<b>SaveDisplacementsAndVelocitiesOption</b> = 1 
' save displacements and velocities<br>
&nbsp;&nbsp;&nbsp; ResultOptions.<b>SaveStresses</b> = 1 ' save stresses<br>
&nbsp;&nbsp;&nbsp; 'Solution step set #1<br>
&nbsp;&nbsp;&nbsp; errCode = ResultOptions.<b>SetSolutionStepsSetInformation</b>(1, 
10, 100, 3)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Set solution steps set #1 (10-100, 
inc=3)? (0=success): &quot; &amp; errCode<br>
&nbsp;&nbsp;&nbsp; 'Solution step set #3<br>
&nbsp;&nbsp;&nbsp; errCode = ResultOptions.<b>SetSolutionStepsSetInformation</b>(3, 
100, 1000, 5)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Set solution steps set #3 (100-1000, 
inc=5)? (0=success): &quot; &amp; errCode<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Set damping options<br>
&nbsp;&nbsp;&nbsp; Set DampingOptions = Study.<b>DampingOptions</b><br>
&nbsp;&nbsp;&nbsp; DampingOptions.<b>DampingType</b> = 0 'Modal damping<br>
&nbsp;&nbsp;&nbsp; DampingRatios = Array(1, 5, 3.45, 6, 15, 15, 16, 25, 34.5)<br>
&nbsp;&nbsp;&nbsp; errCode = DampingOptions.<b>SetDampingRatios</b>(3, (DampingRatios))<br>
&nbsp;&nbsp;&nbsp; DampingOptions.<b>ComputeFromMaterialDamping</b> = 0 ' do not 
use the material damping ratio</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Dim PID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Variant<br>
&nbsp;&nbsp;&nbsp; Dim SelObj&nbsp;&nbsp;&nbsp; As Object<br>
&nbsp;&nbsp;&nbsp; Dim obj&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; As Object</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Get face by persistent ID<br>
&nbsp;&nbsp;&nbsp; boolstatus = Part.<b>Extension</b>.<b>SelectByID2</b>(&quot;&quot;, 
&quot;FACE&quot;, 0.367377178180561, 1.53999999998859E-02, -0.443699715030164, False, 0, 
Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; Set obj = Part.<b>SelectionManager</b>.<b>GetSelectedObject6</b>(1, 
-1)<br>
&nbsp;&nbsp;&nbsp; PID = Part.<b>Extension</b>.<b>GetPersistReference3</b>(obj)<br>
&nbsp;&nbsp;&nbsp; Set SelObj = Part.<b>Extension</b>.<b>GetObjectByPersistReference3</b>((PID), 
errCode)<br>
&nbsp;&nbsp;&nbsp; DispArray1 = Array(SelObj) 'Face</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Get edge by persistent ID<br>
&nbsp;&nbsp;&nbsp; boolstatus = Part.<b>Extension</b>.<b>SelectByID2</b>(&quot;&quot;, 
&quot;EDGE&quot;, 0.473843326221299, 1.60904480509885E-02, -6.90335842989498E-04, False, 
0, Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; Set obj = Part.<b>SelectionManager</b>.<b>GetSelectedObject6</b>(1, 
-1)<br>
&nbsp;&nbsp;&nbsp; PID = Part.<b>Extension</b>.<b>GetPersistReference3</b>(obj)<br>
&nbsp;&nbsp;&nbsp; Set CWBaseExcitationEntity = Part.<b>Extension</b>.<b>GetObjectByPersistReference3</b>((PID), 
errCode)<br>
&nbsp;&nbsp;&nbsp; DispArray3 = Array(CWBaseExcitationEntity) 'Edge</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Get Axis1 reference geometry by 
persistent ID<br>
&nbsp;&nbsp;&nbsp; boolstatus = Part.<b>Extension</b>.<b>SelectByID2</b>(&quot;Axis1&quot;, 
&quot;AXIS&quot;, -3.20045390890095E-02, 6.39408825367532E-02, -3.19259521004658E-02, 
False, 0, Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; Set obj = Part.<b>SelectionManager</b>.<b>GetSelectedObject6</b>(1, 
-1)<br>
&nbsp;&nbsp;&nbsp; PID = Part.<b>Extension</b>.<b>GetPersistReference3</b>(obj)<br>
&nbsp;&nbsp;&nbsp; Set CWDirectionEntity = Part.<b>Extension</b>.<b>GetObjectByPersistReference3</b>((PID), 
errCode)<br>
&nbsp;&nbsp;&nbsp; Set pDisp5 = CWDirectionEntity</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Add materials<br>
&nbsp;&nbsp;&nbsp; Set ShellMgr = Study.<b>ShellManager</b><br>
&nbsp;&nbsp;&nbsp; If ShellMgr Is Nothing Then ErrorMsg SwApp, &quot;Failed to get 
shell manager object&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set CWFeatObj1 = ShellMgr.<b>GetShellAt</b>(0, 
errCode)<br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Failed to get shell 
component&quot;<br>
&nbsp;&nbsp;&nbsp; Set ShellMat = CWFeatObj1.<b>GetDefaultMaterial</b><br>
&nbsp;&nbsp;&nbsp; ShellMat.<b>MaterialUnits</b> = 0<br>
&nbsp;&nbsp;&nbsp; Call ShellMat.<b>SetPropertyByName</b>(&quot;EX&quot;, 2000000000000#, 
0)<br>
&nbsp;&nbsp;&nbsp; Call ShellMat.<b>SetPropertyByName</b>(&quot;NUXY&quot;, 0.25, 0)<br>
&nbsp;&nbsp;&nbsp; errCode = CWFeatObj1.<b>SetShellMaterial</b>(ShellMat)<br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Failed to apply 
material&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Call CWFeatObj1.<b>ShellBeginEdit</b><br>
&nbsp;&nbsp;&nbsp; CWFeatObj1.<b>Formulation</b> = 1 ' thick shell<br>
&nbsp;&nbsp;&nbsp; CWFeatObj1.<b>ShellUnit</b> = 1 ' centimeters<br>
&nbsp;&nbsp;&nbsp; CWFeatObj1.<b>ShellThickness</b> = 5 ' 5 cm<br>
&nbsp;&nbsp;&nbsp; CWFeatObj1.<b>ShellOffsetOption</b> = 3 ' specify reference 
surface<br>
&nbsp;&nbsp;&nbsp; CWFeatObj1.<b>ShellOffsetValue</b> = 0.3<br>
&nbsp;&nbsp;&nbsp; errCode = CWFeatObj1.<b>ShellEndEdit</b><br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Failed to create shell&quot;<br>
&nbsp;&nbsp;&nbsp; Set CWFeatObj1 = Nothing</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Get loads and restraints manager<br>
&nbsp;&nbsp;&nbsp; Set LBCMgr = Study.<b>LoadsAndRestraintsManager</b><br>
&nbsp;&nbsp;&nbsp; If LBCMgr Is Nothing Then ErrorMsg SwApp, &quot;Failed to get 
loads and restraints manager&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Create normal pressure<br>
&nbsp;&nbsp;&nbsp; Set CWFeatObj2 = LBCMgr.<b>AddPressure</b>(swsPressureTypeNormal, 
(DispArray1), Nothing, errCode)<br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Failed to create normal 
pressure&quot;<br>
&nbsp;&nbsp;&nbsp; Call CWFeatObj2.<b>PressureBeginEdit</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Normal pressure values...&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print (&quot;&nbsp; Pressure unit in swsStrengthUnit_e 
units: &quot; &amp; CWFeatObj2.<b>Unit</b>)<br>
&nbsp;&nbsp;&nbsp; Debug.Print (&quot;&nbsp; Pressure value: &quot; &amp; CWFeatObj2.<b>Value</b>)<br>
&nbsp;&nbsp;&nbsp; Debug.Print (&quot;&nbsp; Pressure phase angle (-1 if not set): &quot; 
&amp; CWFeatObj2.<b>PhaseAngle</b>)<br>
&nbsp;&nbsp;&nbsp; Debug.Print (&quot;&nbsp; Pressure phase angle unit in 
swsPhaseAngleUnit_e units: &quot; &amp; CWFeatObj2.<b>PhaseAngleUnit</b>)<br>
&nbsp;&nbsp;&nbsp; errCode = CWFeatObj2.<b>PressureEndEdit</b><br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Failed to apply normal 
pressure value&quot;<br>
&nbsp;&nbsp;&nbsp; Set CWFeatObj2 = Nothing<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot; &quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Add a restraint<br>
&nbsp;&nbsp;&nbsp; Set CWFeatObj3 = LBCMgr.<b>AddRestraint</b>(0, (DispArray3), 
pDisp5, errCode)<br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Failed to create 
restraint&quot;<br>
&nbsp;&nbsp;&nbsp; Call CWFeatObj3.<b>RestraintBeginEdit</b><br>
&nbsp;&nbsp;&nbsp; Call CWFeatObj3.<b>SetTranslationComponentsValues</b>(0, 0, 
1, 0#, 0#, 0#)<br>
&nbsp;&nbsp;&nbsp; Call CWFeatObj3.<b>SetRotationComponentsValues</b>(0, 0, 0, 
0#, 0#, 0#)<br>
&nbsp;&nbsp;&nbsp; CWFeatObj3.<b>Unit</b> = 2<br>
&nbsp;&nbsp;&nbsp; errCode = CWFeatObj3.<b>RestraintEndEdit</b><br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Restraint end-edit 
failed&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Create mesh<br>
&nbsp;&nbsp;&nbsp; Set CWFeatObj4 = Study.<b>Mesh</b><br>
&nbsp;&nbsp;&nbsp; If CWFeatObj4 Is Nothing Then ErrorMsg SwApp, &quot;Failed to 
create mesh object&quot;<br>
&nbsp;&nbsp;&nbsp; CWFeatObj4.<b>MesherType</b> = 0<br>
&nbsp;&nbsp;&nbsp; CWFeatObj4.<b>Quality</b> = 1</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; errCode = Study.<b>CreateMesh</b>(0, 
MeshEleSize, MeshTol)<br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Failed to create mesh&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Worst Jacobian ratio for the mesh: &quot; &amp; 
CWFeatObj4.<b>GetWorstJacobianRatio</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Add distributed mass<br>
&nbsp;&nbsp;&nbsp; Set CWDistribMass = LBCMgr.<b>AddDistributedMass</b>((DispArray1), 
0, 1, errCode)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Total distributed mass: &quot; &amp; CWDistribMass.<b>TotalMass</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Units in swsUnitSystem_e units: &quot; &amp; 
CWDistribMass.<b>Units</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Run analysis<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Running the analysis&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;<br>
&nbsp;&nbsp;&nbsp; errCode = Study.<b>RunAnalysis</b><br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Analysis failed with 
error code as defined in swsRunAnalysisError_e:&quot; &amp; errCode &nbsp;&nbsp;&nbsp; 
<br>
<br>
&nbsp;&nbsp;&nbsp; 'Get results<br>
&nbsp;&nbsp;&nbsp; Set CWFeatObj5 = Study.<b>Results</b><br>
&nbsp;&nbsp;&nbsp; If CWFeatObj5 Is Nothing Then ErrorMsg SwApp, &quot;Failed to get 
results object&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Study results...&quot;<br>
&nbsp;&nbsp;&nbsp; nStep = CWFeatObj5.<b>GetMaximumAvailableSteps</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Maximum available steps: &quot; &amp; nStep</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Get algebraic minimum/maximum resultant 
displacements<br>
&nbsp;&nbsp;&nbsp; Disp = CWFeatObj5.<b>GetMinMaxDisplacement</b>(3, nStep, 
Nothing, 0, errCode)<br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Failed to get 
displacement results&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Min/Max URES Resultant Displacements 
(Node, Min, Node, Max):&quot;<br>
&nbsp;&nbsp;&nbsp; For i = 0 To UBound(Disp)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print (&quot;&nbsp; * &quot; &amp; Disp(i))<br>
&nbsp;&nbsp;&nbsp; Next<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Get algebraic minimum/maximum von Mises 
stresses<br>
&nbsp;&nbsp;&nbsp; Stress = CWFeatObj5.<b>GetMinMaxStress</b>(9, 0, nStep, 
Nothing, 3, errCode)<br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Failed to get stress 
results&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Algebraic Min/Max von Mises Stresses 
(Node, Min, Node, Max):&quot;<br>
&nbsp;&nbsp;&nbsp; For i = 0 To UBound(Stress)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print (&quot;&nbsp; * &quot; &amp; Stress(i))<br>
&nbsp;&nbsp;&nbsp; Next<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Get algebraic minimum/maximum velocities<br>
&nbsp;&nbsp;&nbsp; Velocity = CWFeatObj5.<b>GetMinMaxVelocity</b>(0, nStep, 
CWDirectionEntity, 0, errCode)<br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Failed to get velocity 
results&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Algebraic Min/Max Velocities (Node, Min, 
Node, Max):&quot;<br>
&nbsp;&nbsp;&nbsp; For i = 0 To UBound(Velocity)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print (&quot;&nbsp; * &quot; &amp; Velocity(i))<br>
&nbsp;&nbsp;&nbsp; Next<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Get algebraic minimum/maximum 
accelerations<br>
&nbsp;&nbsp;&nbsp; Acceleration = CWFeatObj5.<b>GetMinMaxAcceleration</b>(0, 
nStep, CWDirectionEntity, 0, errCode)<br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Failed to get 
acceleration results&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Algebraic Min/Max Accelerations (Node, 
Min, Node, Max):&quot;<br>
&nbsp;&nbsp;&nbsp; For i = 0 To UBound(Acceleration)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print (&quot;&nbsp; * &quot; &amp; 
Acceleration(i))<br>
&nbsp;&nbsp;&nbsp; Next</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Reaction forces and moments for entire 
model and selected face at solution step 40<br>
&nbsp;&nbsp;&nbsp; forces2 = CWFeatObj5.<b>GetReactionForcesAndMomentsWithSelections</b>(40, 
Nothing, swsForceUnitNOrNm, (DispArray1), selectedAndModelReactionFM, 
selectedOnlyReactionFM, errCode)<br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg SwApp, &quot;Failed to get reaction 
forces and moments&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Reaction forces (N) and moments (N-m) for 
selected face &quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; {xcoord_force, ycoord_force, zcoord_force, 
resultant_force, &quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp; xcoord_moment, ycoord_moment, 
zcoord_moment, resultant_moment}:&quot;<br>
&nbsp;&nbsp;&nbsp; For i = 0 To UBound(selectedOnlyReactionFM)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print (&quot;&nbsp; * &quot; &amp; 
selectedOnlyReactionFM(i))<br>
&nbsp;&nbsp;&nbsp; Next</p>
<p class="APICODE">End Sub</p>
<p class="APICODE">Sub ErrorMsg(SwApp As SldWorks.SldWorks, Message As String)<br>
&nbsp;&nbsp;&nbsp; SwApp.<b>SendMsgToUser2</b> Message, 0, 0<br>
&nbsp;&nbsp;&nbsp; SwApp.<b>RecordLine</b> &quot;'*** WARNING - General&quot;<br>
&nbsp;&nbsp;&nbsp; SwApp.<b>RecordLine</b> &quot;'*** &quot; &amp; Message<br>
&nbsp;&nbsp;&nbsp; SwApp.<b>RecordLine</b> &quot;&quot;<br>
End Sub</p>

<p class=APICODE>&nbsp;</p>

<p>&nbsp;</p>

</body>

</html>
