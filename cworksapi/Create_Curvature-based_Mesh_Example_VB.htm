<html>

<head>
<title>Create Curvature-based Mesh Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples,meshes">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS Simulation API 
 Help</span></h1>
<h1>Create Curvature-based Mesh Example (VBA)</h1>
<p>This example shows how to create a curvature-based mesh for a part.</p>

<p class="APICODE">
'----------------------------------------------------------------------------<br>
' Preconditions:<br>
' 1. Add the SOLIDWORKS Simulation as an add-in (in SOLIDWORKS, click<br>
'&nbsp;&nbsp;&nbsp; <b>Tools &gt; Add-ins &gt; SOLIDWORKS Simulation &gt; OK</b>).<br>
' 2. Add the SOLIDWORKS Simulation type library as a reference (in the IDE, <br>
'&nbsp;&nbsp;&nbsp; click <b>Tools &gt; References &gt; SOLIDWORKS 
Simulation </b><i>version</i><b> type library</b>).<br>
' 3. Ensure that the specified part exists.<br>
' 4. Open the Immediate window.<br>
'<br>
' Postconditions:<br>
' 1. Opens the part.<br>
' 2. Creates a curvature-based mesh for study, Ready.<br>
' 3. In SOLIDWORKS, click <b>Ready</b>, right-click <b>Mesh</b><br>
'&nbsp;&nbsp;&nbsp; in the Simulation study tree, and click <b>Show Mesh</b>.<br>
' 4. Gets mesh connectivity data and node normal coordinates. Because the<br>
'&nbsp;&nbsp;&nbsp; amount of data returned is large, the display code is 
commented out.<br>
'&nbsp;&nbsp;&nbsp; Uncomment the display code or add break points to inspect 
the returned <br>
'&nbsp;&nbsp;&nbsp; arrays in the Locals window.<br>
' 5. Zoom in on the part and examine the mesh.<br>
' 6. Examine the Immediate window.<br>
'<br>
' NOTE: Because the part document is used elsewhere, do not save changes.<br>
'---------------------------------------------------------------------------<br>
Option Explicit<br>
Sub main()<br>
&nbsp;&nbsp;&nbsp; Dim swApp As SldWorks.SldWorks<br>
&nbsp;&nbsp;&nbsp; Dim COSMOSWORKS As Object<br>
&nbsp;&nbsp;&nbsp; Dim COSMOSObject As CosmosWorksLib.CwAddincallback<br>
&nbsp;&nbsp;&nbsp; Dim ActDoc As CosmosWorksLib.CWModelDoc<br>
&nbsp;&nbsp;&nbsp; Dim StudyMngr As CosmosWorksLib.CWStudyManager<br>
&nbsp;&nbsp;&nbsp; Dim Study As CosmosWorksLib.CWStudy<br>
&nbsp;&nbsp;&nbsp; Dim CwMesh As CosmosWorksLib.CwMesh<br>
&nbsp;&nbsp;&nbsp; Dim errCode As Long<br>
&nbsp;&nbsp;&nbsp; Dim errors As Long<br>
&nbsp;&nbsp;&nbsp; Dim warnings As Long<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Const fileName As String = &quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 
2019\samples\Simulation Examples\bikeframe.sldprt&quot;<br>
&nbsp;&nbsp;&nbsp; Set swApp = Application.SldWorks</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set COSMOSObject = swApp.<b>GetAddInObject</b>(&quot;SldWorks.Simulation&quot;)<br>
&nbsp;&nbsp;&nbsp; If COSMOSObject Is Nothing Then ErrorMsg swApp, &quot;No 
Simulation add-in&quot;<br>
&nbsp;&nbsp;&nbsp; Set COSMOSWORKS = COSMOSObject.<b>COSMOSWORKS</b><br>
&nbsp;&nbsp;&nbsp; If COSMOSWORKS Is Nothing Then ErrorMsg swApp, &quot;No 
COSMOSWORKS object&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; swApp.<b>OpenDoc6</b> fileName, 
swDocumentTypes_e.swDocPART, swOpenDocOptions_Silent, &quot;&quot;, errors, warnings<br>
&nbsp;&nbsp;&nbsp; Set ActDoc = COSMOSWORKS.<b>ActiveDoc</b>()<br>
&nbsp;&nbsp;&nbsp; If ActDoc Is Nothing Then ErrorMsg swApp, &quot;No active 
document&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set StudyMngr = ActDoc.<b>StudyManager</b>()<br>
&nbsp;&nbsp;&nbsp; If StudyMngr Is Nothing Then ErrorMsg swApp, &quot;No 
CWStudyManager object&quot;<br>
&nbsp;&nbsp;&nbsp; Set Study = StudyMngr.<b>GetStudy</b>(0)<br>
&nbsp;&nbsp;&nbsp; If Study Is Nothing Then ErrorMsg swApp, &quot;No study&quot;<br>
&nbsp;&nbsp;&nbsp; If (Study.<b>Name</b> &lt;&gt; &quot;Ready&quot;) Then ErrorMsg swApp, 
&quot;Wrong study&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print (&quot;Name of study: &quot; &amp; Study.<b>Name</b>)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set CwMesh = Study.<b>Mesh</b><br>
&nbsp;&nbsp;&nbsp; If CwMesh Is Nothing Then ErrorMsg swApp, &quot;No mesh&quot;<br>
<br>
&nbsp;&nbsp;&nbsp; ' Set type of mesh to curvature-based<br>
&nbsp;&nbsp;&nbsp; CwMesh.<b>MesherType</b> = swsMesherTypeAlternate<br>
<br>
&nbsp;&nbsp;&nbsp; ' Set mesh parameters<br>
&nbsp;&nbsp;&nbsp; CwMesh.<b>GrowthRatio</b> = 1.6<br>
&nbsp;&nbsp;&nbsp; CwMesh.<b>MinElementsInCircle</b> = 8<br>
&nbsp;&nbsp;&nbsp; CwMesh.<b>GetDefaultMaxAndMinElementSize</b> 
swsLinearUnitMillimeters, 20, 4<br>
&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Create mesh<br>
&nbsp;&nbsp;&nbsp; errCode = Study.<b>CreateMesh</b>(swsLinearUnitMillimeters, 
20, 1)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Error code: &quot; &amp; errCode '0 indicates successful 
creation of the mesh<br>
&nbsp;&nbsp;&nbsp; If errCode &lt;&gt; 0 Then ErrorMsg swApp, &quot;Mesh failed; 
check error code&quot;<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Get maximum and minimum element sizes 
used for boundaries<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Maximum element size used for boundaries with 
lowest curvature: &quot; &amp; CwMesh.<b>MaxElementSize</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Minimum element size used for boundaries with 
highest curvature: &quot; &amp; CwMesh.<b>MinElementSize</b><br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; Dim Var As Variant<br>
&nbsp;&nbsp;&nbsp; Dim Var1 As Variant<br>
&nbsp;&nbsp;&nbsp; Dim i As Long<br>
&nbsp;&nbsp;&nbsp; 'Debug.Print &quot;Mesh connectivity data&quot;<br>
&nbsp;&nbsp;&nbsp; 'Debug.Print &quot;Number of nodes in connectivity unit, node 
numbers in connectivity unit&quot;<br>
&nbsp;&nbsp;&nbsp; i = 0<br>
&nbsp;&nbsp;&nbsp; Var = CwMesh.<b>GetConnectivity</b>(errCode)<br>
&nbsp;&nbsp;&nbsp; 'Do While i &lt;= UBound(Var)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Debug.Print Var(i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'i = i + 1<br>
&nbsp;&nbsp;&nbsp; 'Loop<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Debug.Print &quot;Mesh node normals&quot;<br>
&nbsp;&nbsp;&nbsp; 'Debug.Print &quot;Node #, x-coord, y-coord, z-coord of node's 
normal vector&quot;<br>
&nbsp;&nbsp;&nbsp; i = 0<br>
&nbsp;&nbsp;&nbsp; Var1 = CwMesh.<b>GetNodeOutwardDirections</b>(errCode)<br>
&nbsp;&nbsp;&nbsp; 'Do While i &lt;= UBound(Var1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'If 0 = i Mod 4 Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Debug.Print 
&quot;Node: &quot; &amp; Var1(i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Debug.Print 
&quot;&nbsp; Normal vector (x, y, z coordinates):&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'Debug.Print 
&quot;&nbsp;&nbsp;&nbsp; &quot; &amp; Var1(i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'End If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 'i = i + 1<br>
&nbsp;&nbsp;&nbsp; 'Loop<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">End Sub<br>
Sub ErrorMsg(swApp As SldWorks.SldWorks, Message As String)<br>
&nbsp;&nbsp;&nbsp; swApp.<b>SendMsgToUser2</b> Message, 0, 0<br>
&nbsp;&nbsp;&nbsp; swApp.<b>RecordLine</b> &quot;'*** WARNING - General&quot;<br>
&nbsp;&nbsp;&nbsp; swApp.<b>RecordLine</b> &quot;'*** &quot; &amp; Message<br>
&nbsp;&nbsp;&nbsp; swApp.<b>RecordLine</b> &quot;&quot;<br>
End Sub</p>

<p>&nbsp;</p>

</body>

</html>
