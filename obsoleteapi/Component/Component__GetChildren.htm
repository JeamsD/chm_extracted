<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html LANG=EN-US>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Component::GetChildren</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=date content="11 11, 2002 5:46:28 PM">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1278>
<meta name=layout-width content=746>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="../ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body LANG=EN-US>

<h1>Component::GetChildren</h1>

<p><font style="color: #ff0000;"
		color=#FF0000>This method is obsolete and has been superseded by 
 </font><a href="sldworksAPI.chm::/Component2/Component2__GetChildren.htm">Component2::GetChildren</a>.</p>

<p class=apiDescriptionHeading>Description</p>

<p>This method gets all the children components of this component object.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p class=apiSyntaxOLEHeading>Syntax (OLE Automation)</p>

<p style="font-weight: bold; x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">retval 
 = Component.GetChildren ()</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			x-text-underline: off;
			/*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">&nbsp;</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="width: 727px;
				border-spacing: 0px;
				border-spacing: 0px;"
		cellspacing=0
		width=727>
<col>
<col style="width: 163px;">
<col style="width: 485px;">

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 70px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=70px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Return:</td>
<td style="width: 163px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=163px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(VARIANT) 
 retval</td>
<td style="width: 485px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=485px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">VARIANT 
 of type SafeArray of an array of pointers to Dispatch objects</td></tr>
</table>

<p style="margin-top: 0;
			margin-bottom: 0;
			x-text-underline: off;
			/*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">&nbsp;</p>

<p class=apiSyntaxCOMHeading>Syntax (COM)</p>

<p style="font-weight: bold; x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">status 
 = Component-&gt;IGetChildren ( &amp;retval )</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			x-text-underline: off;
			/*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">&nbsp;</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="width: 727px;
				border-spacing: 0px;
				border-spacing: 0px;"
		cellspacing=0
		width=727>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 58px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=58px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Output:</td>
<td style="width: 174px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=174px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(LPCOMPONENT*) 
 retval</td>
<td style="width: 494px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=494px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Pointer 
 to an array of Component objects</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 58px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=58px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Return:</td>
<td style="width: 174px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=174px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(HRESULT)status</td>
<td style="width: 494px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=494px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">S_OK 
 if successful</td></tr>
</table>

<p style="margin-left: 207.00pt;
			text-indent: -207.00pt;
			x-text-underline: off;
			/*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">&nbsp;</p>

<p style="margin-left: 207.00pt;
			text-indent: -207.00pt;
			x-text-underline: off;
			/*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">&nbsp;</p>

<p class=apiRemarksHeading>Remarks</p>

<p style="margin-left: 9.00pt;">If this assembly component is a part document, 
 SolidWorks returns NULL. If this assembly component is the root component 
 or a subassembly, then this method returns the child components that belong 
 to the assembly document.</p>

<p style="margin-left: 9.00pt;">The typical order of calls needed in assembly 
 traversal is:</p>

<p style="margin-left: 27.00pt; text-indent: -13.50pt;">1.&nbsp;ModelDoc::GetActiveConfiguration 
 (called only once)</p>

<p style="margin-left: 27.00pt; text-indent: -13.50pt;">2.&nbsp;Configuration::GetRootComponent 
 (called only once)</p>

<p style="margin-left: 27.00pt; text-indent: -13.50pt;">3.&nbsp;Component::GetChildren 
 (called recursively)</p>

<p class=footnote-text
	style="margin-left: 9.00pt;">Your assembly traversal routine must begin 
 from the root component and work its way down through the assembly structure. 
 This is done by recursively calling Component::GetChildren, as demonstrated 
 in the examples above. Call Component::GetActiveConfiguration and Component::GetRootComponent 
 once for the entire assembly. In addition, your assembly traversal must 
 begin with a ModelDoc object that is activated and visible, otherwise 
 the assembly structure might not be in tact.</p>

<p style="margin-left: 9.00pt;">COM applications should use to Component::IGetChildrenCount 
 to determine the number of component children, which is the size of the 
 array required to Component::IGetChildren.</p>

<p style="margin-left: 9.00pt;">You must call the GetChildren method recursively 
 because it returns only the immediate (one level) children. It does not 
 get child components of the sub-assemblies. For example, if one of the 
 child components of a component is a sub-assembly that has its own children, 
 those children are not returned by this method. You need to call this 
 method again from that sub-assembly component to get its children.</p>

<p style="margin-left: 9.00pt;">For a given component, this method returns 
 all of the immediate child components. This includes suppressed, hidden 
 and lightweight components. Use Component::Visible and Component::GetSuppression 
 to detect the component states.</p>

<p style="margin-left: 9.00pt;">Results of an assembly traversal vary based 
 on the configuration currently displayed in your main assembly and based 
 on the configuration referenced by the subassembly component. The list 
 of child components that this function returns can be different depending 
 on which configuration is referenced by the component (refer to ModelDoc::GetActiveConfiguration 
 and Component::ReferencedConfiguration). </p>

<p style="margin-left: 9.00pt;">For example, if one configuration of your 
 main assembly contains a suppressed subassembly, GetChildren returns an 
 empty array when you call it from that suppressed subassembly component. 
 As another example, a subassembly document (.sldasm file) can contain 
 several configurations, each of which has varying states of suppression 
 for its child components. When inserted into your main assembly, this 
 subassembly document can reference any of these configurations. As a result, 
 you might find that the child component suppression states vary based 
 on which configuration is referenced by the subassembly component (refer 
 to Component::ReferencedConfiguration).</p>

<p class=apiRemarksText
	style="margin-left: 9.00pt;">Be aware that from call to call, this 
 method might not return components in the same order.</p>

<p style="margin-bottom: 0;">
<!--Metadata type="DesignerControl" startspan
<object classid="clsid:A2F1FA63-C1E6-11d2-9140-006DC83B9955"
		type="application/x-oleobject"
		id=RelatedTopic0>
<param name="_Version" value="65536" >
<param name="_ExtentX" value="1323" >
<param name="_ExtentY" value="556" >
<param name="_StockProps" value="13" >
<param name="ForeColor" value="0" >
<param name="BackColor" value="12632256" >
<param name="UseButton" value="0" >
<param name="ControlLabel" value="See Also" >
<param name="UseIcon" value="0" >
<param name="Items" value="Component_Object$$**$$ZGetInfoComponent$$**$$ZGetComponent$$**$$Assembly_Analysis$$**$$" >
<param name="Image" value="" >
<param name="FontInfo" value="MS Sans Serif,8,0,," >
<param name="_CURRENTFILEPATH" value="C:\Home\Oneill\Component\Component__GetChildren.htm" >
<param name="_ID" value="RelatedTopic0" >
<param name="DialogDisplay" value="0" >
<param name="Frame" value="" >
<param name="Window" value="" >
<param name="ChmFile" value="" >
<param name="DisableJump" value="0" >
</object>--><OBJECT
  CLASSID="clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"
  ID="RelatedTopic0"  TYPE="application/x-oleobject">
  <PARAM  NAME="Command"  VALUE="ALink">
  <PARAM  NAME="Font"  VALUE="MS Sans Serif,8,0,,">
  <PARAM  NAME="Frame"  VALUE="">
  <PARAM  NAME="Item1"  VALUE="">
  <PARAM  NAME="Item2"  VALUE="Component_Object">
  <PARAM  NAME="Item3"  VALUE="ZGetInfoComponent">
  <PARAM  NAME="Item4"  VALUE="ZGetComponent">
  <PARAM  NAME="Item5"  VALUE="Assembly_Analysis">
</OBJECT>
<!--Metadata type="DesignerControl" endspan-->
 
<!--Metadata type="DesignerControl" startspan
<object classid="clsid:A2F1FA63-C1E6-11d2-9140-006DC83B9955"
		type="application/x-oleobject"
		id=RelatedTopic1>
<param name="_Version" value="65536" >
<param name="_ExtentX" value="1217" >
<param name="_ExtentY" value="556" >
<param name="_StockProps" value="13" >
<param name="ForeColor" value="0" >
<param name="BackColor" value="12632256" >
<param name="UseButton" value="0" >
<param name="ControlLabel" value="See Also" >
<param name="UseIcon" value="0" >
<param name="Items" value="Traverse_Assembly_Example$$**$$" >
<param name="Image" value="" >
<param name="FontInfo" value="MS Sans Serif,8,0,," >
<param name="_CURRENTFILEPATH" value="C:\Home\Oneill\Component\Component__GetChildren.htm" >
<param name="_ID" value="RelatedTopic1" >
<param name="DialogDisplay" value="0" >
<param name="Frame" value="" >
<param name="Window" value="" >
<param name="ChmFile" value="" >
<param name="DisableJump" value="0" >
</object>--><OBJECT
  CLASSID="clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"
  ID="RelatedTopic1"  TYPE="application/x-oleobject">
  <PARAM  NAME="Command"  VALUE="ALink">
  <PARAM  NAME="Font"  VALUE="MS Sans Serif,8,0,,">
  <PARAM  NAME="Frame"  VALUE="">
  <PARAM  NAME="Item1"  VALUE="">
  <PARAM  NAME="Item2"  VALUE="Traverse_Assembly_Example">
</OBJECT>
<!--Metadata type="DesignerControl" endspan-->
 </p>

<p style="margin-bottom: 0;">&nbsp;</p>

</body>

</html>
