<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html LANG=EN-US>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Frame::AddMenuItem</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=date content="04 9, 2002 1:44:42 PM">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1642>
<meta name=layout-width content=744>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="../ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body LANG=EN-US>

<h1>Frame::AddMenuItem</h1>

<p style="margin-left: 207.00pt;
			text-indent: -207.00pt;
			color: #ff0000;">This method is obsolete and has been superseded 
 by <a href="sldworksAPI.chm::/Frame/Frame__AddMenuItem2.htm">Frame::AddMenuItem2</a>.</p>

<p class=apiDescriptionHeading>Description</p>

<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">This 
 method adds a menu item or a separator to an existing pull-down menu.</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			x-text-underline: off;
			/*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">&nbsp;</p>

<p class=apiSyntaxOLEHeading>Syntax (OLE Automation)</p>

<p style="font-weight: bold; x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">retval 
 = Frame.AddMenuItem ( Menu, Item, Position, CallbackFcnAndModule)</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			x-text-underline: off;
			/*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">&nbsp;</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="width: 725px;
				border-spacing: 0px;
				border-spacing: 0px;"
		cellspacing=0
		width=725>
<col style="width: 64px;">
<col style="width: 210px;">
<col>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 64px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=64px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Input:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(BSTR) 
 Menu</td>
<td style="width: 443px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=443px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Name 
 of the menu to which to add item.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 64px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=64px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Input:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(BSTR) 
 Item</td>
<td style="width: 443px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=443px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Name 
 of item (including accelerator key &quot;&amp;&quot;). If Item is NULL 
 or empty, this method adds a separator.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 64px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=64px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Input:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(long) 
 Position</td>
<td style="width: 443px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=443px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Specifies 
 the position at which to add the new menu item. The first item is at position 
 0. If Position is –1, the new menu item is added to the bottom of the 
 list.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 64px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=64px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Input:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(BSTR) 
 CallbackFcnAndModule</td>
<td style="width: 443px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=443px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Information 
 about which functions SolidWorks calls (see below).</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 64px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=64px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Return:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(BOOL) 
 retval</td>
<td style="width: 443px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=443px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">TRUE 
 if menu item was successfully added, FALSE if not.</td></tr>
</table>

<p style="margin-top: 0;
			margin-bottom: 0;
			x-text-underline: off;
			/*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">&nbsp;</p>

<p class=apiSyntaxCOMHeading>Syntax (COM)</p>

<p style="font-weight: bold; x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">status 
 = Frame-&gt;AddMenuItem ( Menu, Item, Position, CallbackFcnAndModule, 
 &amp;retval )</p>

<p style="margin-top: 0;
			margin-bottom: 0;
			x-text-underline: off;
			/*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">&nbsp;</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="width: 725px;
				border-spacing: 0px;
				border-spacing: 0px;"
		cellspacing=0
		width=725>
<col style="width: 66px;">
<col style="width: 208px;">
<col>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 66px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=66px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Input:</td>
<td style="width: 208px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=208px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(BSTR) 
 Menu</td>
<td style="width: 443px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=443px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Name 
 of the menu to which to add item.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 66px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=66px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Input:</td>
<td style="width: 208px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=208px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(BSTR) 
 Item</td>
<td style="width: 443px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=443px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Name 
 of item (including accelerator key &quot;&amp;&quot;). If Item is NULL 
 or empty, this method adds a separator.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 66px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=66px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Input:</td>
<td style="width: 208px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=208px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(long) 
 Position</td>
<td style="width: 443px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=443px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Specifies 
 the position at which to add the new menu item. The first item is at position 
 0. If Position is –1, the new menu item is added to the bottom of the 
 list.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 66px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=66px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Input:</td>
<td style="width: 208px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=208px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(BSTR) 
 CallbackFcnAndModule</td>
<td style="width: 443px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=443px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Information 
 about which functions SolidWorks calls (see below).</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 66px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=66px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Output:</td>
<td style="width: 208px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=208px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(VARIANT_BOOL) 
 retval</td>
<td style="width: 443px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=443px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">TRUE 
 if menu item was successfully added, FALSE if not.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 66px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=66px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">Return:</td>
<td style="width: 208px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=208px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">(HRESULT)status</td>
<td style="width: 443px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=443px>
<p style="x-text-underline: off; /*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">S_OK 
 if successful</td></tr>
</table>

<p style="margin-left: 207.00pt;
			text-indent: -207.00pt;
			x-text-underline: off;
			/*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">&nbsp;</p>

<p style="margin-left: 207.00pt;
			text-indent: -207.00pt;
			x-text-underline: off;
			/*begin!kadov{{*/ text-decoration: none; /*}}end!kadov*/ ">&nbsp;</p>

<p class=apiRemarksHeading>Remarks</p>

<p class=apiRemarksText>If you want to create a pull-down menu, use Frame::AddMenu.</p>

<p class=apiRemarksText>This capability only operates when your application 
 is implemented as a DLL, not as an EXE. In addition, any function exposed 
 as a callback from a menu item must be declared as an EXPORT or included 
 in your .def file.</p>

<p class=apiRemarksText>You can add a new menu to any one of the four SolidWorks 
 frames (Main frame, Part frame, Assembly frame or Drawing frame). To do 
 this, you need to get the Frame object when the desired frame is active. 
 For example, if you want your menu to be available when a Part document 
 is active, then call SoldWorks::Frame when a part is first loaded or created, 
 and use that Frame object to call this method. Once you add your menu 
 to the Part frame, you do not need to do it again during the current SolidWorks 
 session.</p>

<p class=apiRemarksText>The CallbackFcnAndModule argument specifies which 
 function to call when this menu item is selected by the user, the syntax 
 is as follows:</p>

<p class=apiCode
	style="margin-left: 49px;">&quot;dllname@function@updatefunction,hintstring&quot;</p>

<p class=apiRemarksText
	style="font-weight: normal; font-style: normal;">where:</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="x-cell-content-align: top;
				border-spacing: 0;
				width: 82.674%;
				border-spacing: 0px;"
		cellspacing=0
		width=82.674%>
<col style="width: 18.73%;">
<col style="width: 81.27%;">

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 18.73%;
			padding-right: 10px;
			padding-left: 10px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;
			border-top-style: None;"
	width=18.73%>
<p style="font-family: 'Courier New', monospace, monospace;">dllname</td>
<td style="width: 81.27%;
			padding-right: 10px;
			padding-left: 10px;
			border-bottom-style: None;
			border-top-style: None;
			border-right-style: None;"
	width=81.27%>
<p>Name of your library as specified in the project .def file. The actual 
 dll filename and the definition in the .def file must be the same.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 18.73%;
			padding-right: 10px;
			padding-left: 10px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=18.73%>
<p style="font-family: 'Courier New', monospace, monospace;">function</td>
<td style="width: 81.27%;
			padding-right: 10px;
			padding-left: 10px;
			border-bottom-style: None;
			border-right-style: None;"
	width=81.27%>
<p>Name of the function that gets called when the user presses the button. 
 This function must also be declared as an EXPORT in your .def file.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 18.73%;
			padding-right: 10px;
			padding-left: 10px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=18.73%>
<p style="font-family: 'Courier New', monospace, monospace;">updatefunction</td>
<td style="width: 81.27%;
			padding-right: 10px;
			padding-left: 10px;
			border-bottom-style: None;
			border-right-style: None;"
	width=81.27%>
<p class=apiRemarksText
	style="font-weight: normal;"><span>Optional argument that controls 
 the state of the button. If specified, SolidWorks calls this button before 
 the button is displayed. Define your updatefunction to return an int and 
 declare it as an EXPORT or included in your .def file. The display of 
 the button is controlled by the return value of the function as follows:</span></p>
<p class=apiRemarksText
	style="font-weight: normal;">return 0 - Menu item is unchecked and 
 disabled.</p>
<p class=apiRemarksText
	style="font-weight: normal;">return 1 - Menu item is unchecked and 
 enabled. This is the default menu state with if no update function is 
 specified.</p>
<p class=apiRemarksText
	style="font-weight: normal;">return 2&nbsp;- Menu item is checked and 
 disabled.</p>
<p class=apiRemarksText
	style="font-weight: normal;">return 3&nbsp;- Menu item is checked and 
 enabled.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 18.73%;
			padding-right: 10px;
			padding-left: 10px;
			border-right-style: None;
			border-left-style: None;
			border-bottom-style: None;"
	width=18.73%>
<p style="font-family: 'Courier New', monospace, monospace;">hintstring</td>
<td style="width: 81.27%;
			padding-right: 10px;
			padding-left: 10px;
			border-bottom-style: None;
			border-right-style: None;"
	width=81.27%>
<p>Optional argument that contains a text hint displayed in the SolidWorks 
 status bar when the user moves their mouse over this menu option. If a 
 hintstring is specified, it must be preceded by a comma. For Example:</p>
<p class=apiRemarksText
	style="font-weight: normal; font-family: 'Courier New', monospace, monospace;">&quot;Userdll@AddBox@checkForUserSelects,Add 
 a box&quot;</td></tr>
</table>

<p class=apiRemarksText
	style="font-weight: normal; font-style: normal;">&nbsp;</p>

<p class=apiRemarksText
	style="font-weight: normal;">
<!--Metadata type="DesignerControl" startspan
<object classid="clsid:A2F1FA63-C1E6-11d2-9140-006DC83B9955"
		type="application/x-oleobject"
		id=RelatedTopic0>
<param name="_Version" value="65536" >
<param name="_ExtentX" value="1323" >
<param name="_ExtentY" value="556" >
<param name="_StockProps" value="13" >
<param name="ForeColor" value="0" >
<param name="BackColor" value="12632256" >
<param name="UseButton" value="0" >
<param name="ControlLabel" value="See Also" >
<param name="UseIcon" value="0" >
<param name="Items" value="Frame_Object$$**$$ZModifyUserInterface$$**$$" >
<param name="Image" value="" >
<param name="FontInfo" value="MS Sans Serif,8,0,," >
<param name="_CURRENTFILEPATH" value="D:\APIHelp\sw2005\obsoleteapi\Frame\Frame__AddMenuItem.htm" >
<param name="_ID" value="RelatedTopic0" >
<param name="DialogDisplay" value="0" >
<param name="Frame" value="" >
<param name="Window" value="" >
<param name="ChmFile" value="" >
<param name="DisableJump" value="0" >
</object>-->
<OBJECT
  CLASSID="clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"
  ID="RelatedTopic0"  TYPE="application/x-oleobject">
  <PARAM  NAME="Command"  VALUE="ALink">
  <PARAM  NAME="Font"  VALUE="MS Sans Serif,8,0,,">
  <PARAM  NAME="Frame"  VALUE="">
  <PARAM  NAME="Item1"  VALUE="">
  <PARAM  NAME="Item2"  VALUE="Frame_Object">
  <PARAM  NAME="Item3"  VALUE="ZModifyUserInterface">
</OBJECT>

<!--Metadata type="DesignerControl" endspan-->
 
<!--Metadata type="DesignerControl" startspan
<object classid="clsid:A2F1FA63-C1E6-11d2-9140-006DC83B9955"
		type="application/x-oleobject"
		id=RelatedTopic1>
<param name="_Version" value="65536" >
<param name="_ExtentX" value="1217" >
<param name="_ExtentY" value="556" >
<param name="_StockProps" value="13" >
<param name="ForeColor" value="0" >
<param name="BackColor" value="12632256" >
<param name="UseButton" value="0" >
<param name="ControlLabel" value="See Also" >
<param name="UseIcon" value="0" >
<param name="Items" value="Add_Menu_Item_Example$$**$$Add_Rename_and_Remove_Menu_Items_Example$$**$$" >
<param name="Image" value="" >
<param name="FontInfo" value="MS Sans Serif,8,0,," >
<param name="_CURRENTFILEPATH" value="D:\APIHelp\sw2005\obsoleteapi\Frame\Frame__AddMenuItem.htm" >
<param name="_ID" value="RelatedTopic1" >
<param name="DialogDisplay" value="0" >
<param name="Frame" value="" >
<param name="Window" value="" >
<param name="ChmFile" value="" >
<param name="DisableJump" value="0" >
</object>-->
<OBJECT
  CLASSID="clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"
  ID="RelatedTopic1"  TYPE="application/x-oleobject">
  <PARAM  NAME="Command"  VALUE="ALink">
  <PARAM  NAME="Font"  VALUE="MS Sans Serif,8,0,,">
  <PARAM  NAME="Frame"  VALUE="">
  <PARAM  NAME="Item1"  VALUE="">
  <PARAM  NAME="Item2"  VALUE="Add_Menu_Item_Example">
  <PARAM  NAME="Item3"  VALUE="Add_Rename_and_Remove_Menu_Items_Example">
</OBJECT>

<!--Metadata type="DesignerControl" endspan-->
 </p>

<p class=apiRemarksText
	style="font-weight: normal;">&nbsp;</p>

</body>

</html>
