<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html LANG=EN-US>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>SldWorks::AddMenuItem</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=date content="06 17, 2002 4:30:25 PM">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1714>
<meta name=layout-width content=731>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="../ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body LANG=EN-US>

<h1>SldWorks::AddMenuItem</h1>

<p style="margin-top: 0;
			margin-bottom: 0;
			color: #ff0000;">This method is obsolete and has been superseded 
 by <a href="SldWorks__AddMenuItem2.htm">SldWorks::AddMenuItem2</a>.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p class=apiDescriptionHeading>Description</p>

<p>This method adds a menu item to the SolidWorks interface.</p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p class=apiSyntaxOLEHeading>Syntax (OLE Automation)</p>

<p><span style="font-weight: bold;">retval = SldWorks.AddMenuItem ( docType, 
 menu, position, callbackModuleAndFcn )</span></p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="width: 712px;
				border-spacing: 0px;
				border-spacing: 0px;"
		cellspacing=0
		width=712>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 77px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=77px>
<p>Input:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p>(long) docType</td>
<td style="width: 424px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=424px>
<p>Document type to which to add the menu item </td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 77px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=77px>
<p>Input:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p>(BSTR) menuItem</td>
<td style="width: 424px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=424px>
<p>Menu string (for example, <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->&quot;menuItem@subMenuString@menuString&quot; 
 ); menus and submenusare created if they do not already exist</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 77px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=77px>
<p>Input:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p>(long) Position</td>
<td style="width: 424px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=424px>
<p>Specifies the position at which to add the new menu item; first item 
 is at position 0; <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->if 
 Position is –1, the new menu item is added to the bottom of the list.; 
 this argument specifies the position of the menu item in relation to its 
 immediate parent menu</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 77px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=77px>
<p>Input:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p>(BSTR) callbackFcnAndModule</td>
<td style="width: 424px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=424px>
<p>Function to call when end-user clicks the menu item </td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 77px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=77px>
<p>Return:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p>(long) retval</td>
<td style="width: 424px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=424px>
<p>1 if menu item is successfully added, 0 if failure</td></tr>
</table>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p class=apiSyntaxCOMHeading>Syntax (COM)</p>

<p><span style="font-weight: bold;">status = SldWorks-&gt;AddMenuItem ( 
 docType, menuItem, position, callbackModuleAndFcn, &amp;retval )</span></p>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="width: 712px;
				border-spacing: 0px;
				border-spacing: 0px;"
		cellspacing=0
		width=712>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 77px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=77px>
<p>Input:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p>(long) docType</td>
<td style="width: 424px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=424px>
<p>Document type to which to add the menu item </td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 77px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=77px>
<p>Input:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p>(BSTR) menuItem</td>
<td style="width: 424px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=424px>
<p>Menu string (for example, <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->&quot;menuItem@subMenuString@menuString&quot; 
 ); menus and submenusare created if they do not already exist</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 77px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=77px>
<p>Input:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p>(long) position</td>
<td style="width: 424px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=424px>
<p>Specifies the position at which to add the new menu item; first item 
 is at position 0; <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->if 
 Position is –1, the new menu item is added to the bottom of the list.; 
 this argument specifies the position of the menu item in relation to its 
 immediate parent menu</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 77px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=77px>
<p>Input:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p>(BSTR) callbackFcnAndModule</td>
<td style="width: 424px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=424px>
<p>Function to call when end-user clicks the menu item </td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 77px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=77px>
<p>Output:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p>(long) retval</td>
<td style="width: 424px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=424px>
<p>1 if menu item is successfully added, 0 if failure</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 77px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=77px>
<p>Return:</td>
<td style="width: 210px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=210px>
<p>(HRESULT) status</td>
<td style="width: 424px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=424px>
<p>S_OK if successful</td></tr>
</table>

<p style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p class=apiRemarksHeading>Remarks</p>

<p>This capability only operates when your application is implemented as 
 a DLL, not as an executable (.exe). In addition, any function exposed 
 as a callback from a menu item, must be declared as an export or included 
 in your .def file.</p>

<p>You can add a new menu to any one of the four SolidWorks frames (Main 
 Frame, Part Frame, Assembly Frame, or Drawing Frame). To do call this 
 method with the appropriate argument in the docType parameter. For example, 
 if you want your menu to be available when a part document is active, 
 then call this method and pass swDocPART<span style="font-style: italic;"> 
 </span>as the first argument. After adding your menu to the Part Frame, 
 you do not need to do it again during the current SolidWorks session. 
 Once a part document is activated by the end-user, your menu option is 
 automatically displayed.</p>

<p>The menuItem argument should be the complete menu string including the 
 main menu and any submenus. If a menu or submenu does not exist, then 
 it is automatically created with a position at the end of the specified 
 parent menu. There is no need to explicitly call SldWorks::AddMenu to 
 add the actual menu or submenu unless you must add that menu or submenu 
 at a specific position. It is recommended that you add our main menu using 
 SldWorks::AddMenu so it can be placed between the existing <span style="font-weight: bold;">Tools</span> 
 and Window menu items that appear in the SolidWorks menu bar. Submenus 
 are created at the end of the parent menu. Therefore, if your menu structure 
 is created in order using sequential calls, then all the menu items are 
 positioned based on their order of creation. However, if a menu or submenu 
 needs to be placed into an existing menu at a specific position, then 
 you must create the submenu using SldWorks::AddMenu. </p>

<p>The callbackFcnAndModule argument specifies which function to call when 
 this menu item is selected by the end-user. The syntax is as follows:</p>

<p style="margin-left: 48px;">&quot;dllname@function@updatefunction,hintstring&quot;</p>

<p>where:</p>

<p style="margin-left: 36px;">dllname - name of your library as specified 
 in your project's .def file. The actual DLL filename and the definition 
 in the .def file must be the same.</p>

<p style="margin-left: 36px;">function&nbsp;- name of the function that 
 gets called when the end-user selects the menu item. This function must 
 also be declared as an export in your .def file.</p>

<p style="margin-left: 36px;">updatefunction&nbsp;- optional and is used 
 to control the state of the menu item. If specified, this function is 
 called before the menu is displayed. The display of the menu item is controlled 
 by the return value of updateFunction. The following return values have 
 the following affects on the menu item:</p>

<p style="margin-left: 96px;">return 0 - &nbsp;Menu item is unchecked and 
 disabled.</p>

<p style="margin-left: 96px;">return 1&nbsp;- Menu item is unchecked and 
 enabled. This is the default menu state with if no update function is 
 specified.</p>

<p style="margin-left: 96px;">return 2 &nbsp;- Menu item is checked and 
 disabled.</p>

<p style="margin-left: 96px;">return 3 &nbsp;- Menu item is checked and 
 enabled.</p>

<p style="margin-left: 36px;">hintstring&nbsp;- optional and is shown in 
 the SolidWorks status bar when the end-user moves the mouse over this 
 particular menu item. If hintstring is specified, it must be preceded 
 by a comma.</p>

<p>For example:</p>

<p>&nbsp;&quot;Userdll@AddBox@checkUserSelections,Add a box&quot;</p>

<p style="margin-bottom: 0;">
<!--Metadata type="DesignerControl" startspan
<object classid="clsid:A2F1FA63-C1E6-11d2-9140-006DC83B9955"
		type="application/x-oleobject"
		id=RelatedTopic0>
<param name="_Version" value="65536" >
<param name="_ExtentX" value="1217" >
<param name="_ExtentY" value="556" >
<param name="_StockProps" value="13" >
<param name="ForeColor" value="0" >
<param name="BackColor" value="13160660" >
<param name="UseButton" value="0" >
<param name="ControlLabel" value="See Also" >
<param name="UseIcon" value="0" >
<param name="Items" value="SldWorks_Object$$**$$ZModifyUserInterface$$**$$" >
<param name="Image" value="" >
<param name="FontInfo" value="MS Sans Serif,8,0,," >
<param name="_CURRENTFILEPATH" value="D:\APIHelp\sw2005\obsoleteapi\SldWorks\SldWorks__AddMenuItem.htm" >
<param name="_ID" value="RelatedTopic0" >
<param name="DialogDisplay" value="0" >
<param name="Frame" value="" >
<param name="Window" value="" >
<param name="ChmFile" value="" >
<param name="DisableJump" value="0" >
</object>-->
<OBJECT
  CLASSID="clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"
  ID="RelatedTopic0"  TYPE="application/x-oleobject">
  <PARAM  NAME="Command"  VALUE="ALink">
  <PARAM  NAME="Font"  VALUE="MS Sans Serif,8,0,,">
  <PARAM  NAME="Frame"  VALUE="">
  <PARAM  NAME="Item1"  VALUE="">
  <PARAM  NAME="Item2"  VALUE="SldWorks_Object">
  <PARAM  NAME="Item3"  VALUE="ZModifyUserInterface">
</OBJECT>

<!--Metadata type="DesignerControl" endspan-->
 </p>

</body>

</html>
