<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Face2::GetTrimCurves</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=date content="04 4, 2002 4:28:34 PM">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2992>
<meta name=layout-width content=757>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="../ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body LANG=EN-US>

<h1>
<!--Metadata type="DesignerControl" startspan
<object classid="clsid:A2F1FA63-C1E6-11d2-9140-006DC83B9955"
		type="application/x-oleobject"
		id=RelatedTopic0
		style="width: 1px; height: 1px;"
		width=1
		height=1>
<param name="_Version" value="65536" >
<param name="_ExtentX" value="26" >
<param name="_ExtentY" value="26" >
<param name="_StockProps" value="13" >
<param name="ForeColor" value="0" >
<param name="BackColor" value="12632256" >
<param name="UseButton" value="0" >
<param name="ControlLabel" value="See Also" >
<param name="UseIcon" value="0" >
<param name="Items" value="Face2_Object$$**$$" >
<param name="Image" value="" >
<param name="FontInfo" value="MS Sans Serif,8,0,," >
<param name="_CURRENTFILEPATH" value="C:\Home\obsoleteapi\Face2\Face2__GetTrimCurves.htm" >
<param name="_ID" value="RelatedTopic0" >
<param name="DialogDisplay" value="0" >
<param name="Frame" value="" >
<param name="Window" value="" >
<param name="ChmFile" value="" >
<param name="DisableJump" value="0" >
</object>-->
<OBJECT
  CLASSID="clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"
  ID="RelatedTopic0"  TYPE="application/x-oleobject">
  <PARAM  NAME="Command"  VALUE="ALink">
  <PARAM  NAME="Font"  VALUE="MS Sans Serif,8,0,,">
  <PARAM  NAME="Frame"  VALUE="">
  <PARAM  NAME="Item1"  VALUE="">
  <PARAM  NAME="Item2"  VALUE="Face2_Object">
</OBJECT>

<!--Metadata type="DesignerControl" endspan-->
 <!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html LANG=EN-US>

<!--(==============================================================)-->
  <!-- Index IDs -->
 <!meta NAME=MS-HAID CONTENT="TablePatternFeatureData Method"->
<!meta NAME=MS-HAID CONTENT="TablePatternFeatureData::AccessSelections"->
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1169>
<meta name=layout-width content=746>
<meta name=date content="03 12, 2001 5:31:32 PM">


<!--(Links)=========================================================-->

 













<span style="margin-bottom: 0;"><!--Interface::PropertyOrMethod-->Face2::GetTrimCurves</span></h1>

<p style="margin-top: 0; margin-bottom: 0;"><span style="color: #ff0000;">This 
 method is obsolete and has been superseded by</span> <a href="sldworksAPI.chm::/Face2/Face2__GetTrimCurves2.htm">Face2::GetTrimCurves2</a>.</p>

<p class=apiDescriptionHeading>Description</p>

<p class=apiDescriptionText>This method gets the trim curves for this face.</p>

<p class=apiDescriptionText
	style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p class=apiSyntaxOLEHeading>Syntax (OLE Automation)</p>

<p class=apiSyntaxOLE>Not available.</p>

<p style="margin-left: 4.50pt;">&nbsp;</p>

<p class=apiParametersOLE
	style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p class=apiSyntaxCOMHeading>Syntax (COM)</p>

<p class=apiSyntaxCOM>status = Face2-&gt;GetTrimCurves ( wantCubic, &amp;retval 
 )</p>

<p style="margin-left: 4.50pt;">&nbsp;<!-- Parameters Table Start --></p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="width: 727px;
				border-spacing: 0px;
				border-spacing: 0px;"
		cellspacing=0
		width=727>
<col style="width: 66px;">
<col style="width: 202px;">
<col>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 66px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=66px>
<p class=apiParametersOLE
	style="margin-bottom: 0;">Input:</td>
<td style="width: 202px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=202px>
<p class=apiParametersOLE
	style="margin-bottom: 0;">(VARIANT_BOOL) wantCubic</td>
<td style="width: 451px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=451px>
<p>TRUE if the trim curves are to be cubic, FALSE if not</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 66px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=66px>
<p class=apiParametersOLE
	style="margin-bottom: 0;">Output:</td>
<td style="width: 202px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=202px>
<p class=apiParametersOLE
	style="margin-bottom: 0;">(VARIANT) retval</td>
<td style="width: 451px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=451px>
<p>VARIANT of type SafeArray (see <span style="font-weight: bold;">Remarks</span>)</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 66px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=66px>
<p class=apiParametersOLE>Return:</td>
<td style="width: 202px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=202px>
<p class=apiParametersOLE>(HRESULT) status</td>
<td style="width: 451px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;"
	width=451px>
<p class=apiParametersOLE>S_OK if successful</td></tr>
</table>

<p class=apiParametersCOM
	style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p class=apiRemarksHeading>Remarks</p>

<p class=apiRemarksText>This method returns an array containing the definition 
 of all of the entities that describe a trimmed face. The data is arranged 
 in collections of surface curves (curves defined in the 2D parametric 
 space of the surface, or SP curves) organized into loops (closed composite 
 curves).</p>

<p>All SP curves are returned as b-splines. To control the tolerance of 
 the SP curves, use <a href="../Modeler/Modeler__SetTolerances.htm">Modeler::SetTolerances</a>.</p>

<p>The surface and trim curve parameterization returned by this method 
 might be different from the parameterization returned by other methods, 
 such as <a href="../Face/Face__GetUVBounds.htm">Face::GetUVBounds</a>, 
 Surface::Parameterization, <a href="../Edge/Edge__GetCurveParams.htm">Edge::GetCurveParams</a>, 
 and so on.</p>

<p>If you set wantCubic to TRUE, then this method returns the underlying 
 Bsurface definition. If you want to use the Bsurface in combination with 
 its trim curves, set wantCubic=TRUE because it provides better alignment 
 of the trim curves with the Bsurface because they are generated at the 
 same time.</p>

<p>Each face typically has at least one outer loop and zero or more inner 
 loops. Outer loops define the periphery of the face; inner loops define 
 holes in the face. Outer loops are returned before inner loops if possible. 
 To be certain, use Loop2::IsOuter.</p>

<h3>Periodic Faces</h3>

<p>Periodic faces present many obstacles in translation. As a general rule, 
 it is best to chop up all periodic surfaces by making a call to Body::GetProcessedBody. 
 This method returns a new body to the caller with periodic faces chopped 
 up into multiple faces. Processing this new body, instead of the original 
 body, avoids many of the pitfalls associated with periodics.</p>

<p>If this face is periodic and crosses the seam (0 and 360<symbol name=Degree><!--begin!kadov{{-->&#176<!--}}end!kadov--> 
 location), then this method splits the face into more than one trimmed 
 surface to return this set of data. The first time that this method is 
 called on any face, it returns data for the first trimmed surface on the 
 face. Each subsequent call to this method on the same face returns data 
 for the next trimmed surface, if one exists. See the <span style="font-style: italic;">packedDouble8</span> 
 parameter to determine the number of surfaces for this face.</p>

<p>To avoid returning multiple surfaces per face, process the body returned 
 from Body::GetProcessedBody. </p>

<p>In addition, using the Body object returned from Body::GetProcessedBody 
 usually prevents returning multiple outer loops when it encounters certain 
 periodic surfaces. In other words, it can prevent generating multiple 
 faces (each with an outer loop) for a particular periodic surface.</p>

<h3>Edges</h3>

<p>If your program calls both <a href="../Face/Face__GetEdges.htm">Face::GetEdges</a> 
 and this method or to both <a href="../Face/Face__EnumEdges.htm">Face::EnumEdges</a> 
 and this method, then <span style="margin-left: 21.30pt;">this method 
 stores a temporary buffer containing the edges for this face. If this 
 temporary buffer exists, then calls to Face::GetEdges or Face::EnumEdges 
 access the buffer. This is beneficial if you are attempting to align the 
 trim curves of the face with their corresponding Edges. </span></p>

<p><span style="margin-left: 21.30pt;">If your call to Face::GetEdges or 
 Face::EnumEdges is made immediately following your call to this method, 
 then the order of the trim curves aligns with the order of the edges. 
 However, if you are processing all the trimcurves and then processing 
 all the edges, your first call to access the edges uses the temporary 
 buffer of edges generated in your last call to this method. Because your 
 last call to this method and your current call to get the edges were probably 
 made from different faces, you will see a mismatch of data. This mismatch 
 of data may been seen when Face::GetEdgeCount does not match the SafeArray 
 size from Face::GetEdges or it may be seen when the edge data does not 
 match the face being examined. Therefore, calls to Face::GetEdges or Face::EnumEdges 
 should be made in the same loop and immediately following your call to 
 Face::GetEdges. The temporary buffer of edges is destroyed after each 
 call to Face::GetEdges or Face::EnumEdges.</span></p>

<p>There might not be a corresponding edge for each trim curve. This is 
 true for periodic surfaces for which no edge exists along the seam (0 
 and 360<symbol name=Degree><!--begin!kadov{{-->&#176<!--}}end!kadov--> 
 location), yet this method returns a trim curve. You can detect this situation 
 by comparing the number of edges on the face, <a href="../Face/Face__GetEdgeCount.htm">Face::GetEdgeCount</a> 
 , with the number of trim (SP) curves on the face, <span style="font-style: italic;">PackedDouble1</span>.</p>

<p style="font-style: normal;">To force edge generation along the seam 
 of a periodic surface, use Body::GetProcessedBody. This method creates 
 a copy of the body with faces and surfaces chopped up. However, there 
 are still certain situations (poles of a surface, cusps on a surface, 
 and so on) in which this method returns a trim curve where no edge exists. 
 In this situation, the list of edges returned from Face::GetEdges or Face::EnumEdges 
 does not align with the list of trim curves. Again, you can detect this 
 by comparing the value returned by Face::GetEdgeCount with <span style="font-style: italic;">PackedDouble1</span> 
 , but you need to handle matching the edges with their corresponding trim 
 curve.</p>

<h3>Return Values</h3>

<p>The data is returned in a large array of doubles. Integer data is packed 
 among the doubles in pairs.</p>

<p style="margin-top: 12.00pt;">The format of <span style="font-style: italic;">faceData</span>[] 
 is as follows:</p>

<p style="margin-left: 48px;"><span style="font-weight: bold;">[</span> 
 <span style="font-style: italic;">packedDouble1, packedDouble2[ ], packedDouble3[ 
 ], knotValues[ ], ctrlPointCoords[ ], packedDouble8</span><span style="font-weight: bold;"> 
 ]</span></p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="width: 732px;
				border-spacing: 0px;
				border-spacing: 0px;"
		cellspacing=0
		width=732>
<col style="width: 224px;">
<col style="width: 500px;">

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 224px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;
			border-top-style: None;"
	width=224px>
<p class=Parameters
	style="font-style: italic;">packedDouble1</td>
<td style="width: 500px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-top-style: None;
			border-right-style: None;"
	width=500px>
<p>An integer pair containing number of loops and total number of SP curves 
 (trim curves). The length of any edge list generated immediately after 
 a call to <span style="font-style: italic;">GetTrimCurves2</span> will 
 be equal to the number of SP curves.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 224px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=224px>
<p class=Parameters
	style="font-style: italic;">packedDouble2[ ]</td>
<td style="width: 500px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=500px>
<p>Series of integer pairs containing the number of SP curves in each loop; 
 the first integer in each pair represents the number of curves in the 
 odd loops, the second represents the even. The total number of integer 
 pairs here is half the number of loops, rounded up</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 224px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=224px>
<p class=Parameters
	style="font-style: italic;">packedDouble3[ ]</td>
<td style="width: 500px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=500px>
<p>For each SP curve, a set of two integer pairs. The first contains the 
 order of the curve and a boolean indicating if it is periodic. If the 
 curve is periodic, it will be clamped (that is, knots of multiplicity 
 = order will exist at each end of the curve). The second contains the 
 dimension of the curve and the number of control points in it. If the 
 dimension is 2, the curve is non-rational; if the dimension is 3 the curve 
 is rational.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 224px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=224px>
<p class=Parameters
	style="font-style: italic;">knotValues[ ]</td>
<td style="width: 500px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=500px>
<p>Array of doubles containing the knot values for all the SP curves in 
 order. The number of knots for each curve is equal to the order of the 
 curve plus the number of control points.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 224px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=224px>
<p class=Parameters
	style="font-style: italic;">ctrlPointCoords[ ]</td>
<td style="width: 500px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=500px>
<p>Array of doubles containing the coordinates of the control points for 
 all the SP curves in order. These are given as a sequence of (U,V) pairs 
 if non-rational, and (U,V,W) triples if rational, where W is the homogeneous 
 coordinate known as the weight.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 224px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-right-style: None;
			border-left-style: None;
			border-bottom-style: None;"
	width=224px>
<p class=Parameters
	style="font-style: italic;">packedDouble8 </td>
<td style="width: 500px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=500px>
<p>Integer pair as follows: the first integer is the total number of trimmed 
 surfaces being output for the given face (the modeler sometimes outputs 
 more than one trimmed surface for a face). The second integer indicates 
 the index of the current trimmed surface being output. All the data in 
 the <span style="font-style: italic;">faceData</span>[] array is for the 
 current trimmed surface. Therefore, if <span style="font-style: italic;">packedDouble8</span> 
 says there are two trim surfaces, you should use the same Face pointer 
 and call <span style="font-style: italic;">GetTrimCurves2</span> again 
 to get the data for the second trim surface.</td></tr>
</table>

<p class=Parameters
	style="margin-top: 0; margin-bottom: 0;">&nbsp;</p>

<p style="margin-top: 12.00pt; font-style: normal;">If b-splines were requested 
 (WantCubic = TRUE), then the underlying Bsurface is also returned. The 
 faceData[ ] array would be as follows:</p>

<p style="margin-left: 48px;"><span style="font-weight: bold;">[</span> 
 <span style="font-style: italic;">packedDouble1, packedDouble2[ ], packedDouble3[ 
 ], knotValues[ ], ctrlPointCoords[ ], packedDouble4, packedDouble5, packedDouble6, 
 packedDouble7, surfaceKnotValuesU[ ], surfaceKnotValuesV[ ], surfaceCtrlPointCoords[ 
 ], packedDouble8</span> <span style="font-weight: bold;">]</span> </p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<!--(Table)=========================================================-->
<table x-use-null-cells
		style="width: 738px;
				x-cell-content-align: Center;
				border-spacing: 0px;
				border-spacing: 0px;"
		cellspacing=0
		width=738>
<col style="width: 189px;">
<col style="width: 541px;">

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;
			border-top-style: None;"
	width=189px>
<p style="font-style: italic;">packedDouble1</td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-top-style: None;
			border-right-style: None;"
	width=541px>
<p>See previous definition.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=189px>
<p style="font-style: italic;">packedDouble2[ ]</td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=541px>
<p>See previous definition.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=189px>
<p style="font-style: italic;">packedDouble3[ ]</td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=541px>
<p>See previous definition.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=189px>
<p style="font-style: italic;">knotValues[ ]</td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=541px>
<p>See previous definition.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=189px>
<p style="font-style: italic;">ctrlPointCoords[ ]</td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=541px>
<p>SSee previous definition.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=189px>
<p style="font-style: italic;">packedDouble4</td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=541px>
<p>Integer pair containing the dimension of the surface (3 is non-rational 
 and 4 is rational). The second member of the pair is not used and contains 
 a 0.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=189px>
<p style="font-style: italic;">PackedDouble5</td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=541px>
<p>Integer pair containing the U-order and the V-order of the surface.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=189px>
<p style="font-style: italic;">PackedDouble6</td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=541px>
<p>Integer pair containing the number of control points in U and the number 
 of control points in V</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=189px>
<p style="font-style: italic;">packedDouble7</td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=541px>
<p>Integer pair containing BOOLEANs indicating if the surface is periodic 
 in U and in V. If the surface is periodic, it will be clamped (that is, 
 knots of multiplicity = order will exist at each end of the surface).</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=189px>
<p style="font-style: italic;">surfaceKnotValuesU[ ]</td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=541px>
<p>Array of doubles containing the knot values in U for the surface. The 
 number of knots in U is equal to the order in U plus the number of control 
 points in U.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=189px>
<p style="font-style: italic;">surfaceKnotValuesV[ ]</td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=541px>
<p>Array of doubles containing the knot values in V as above for U.</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;
			border-left-style: None;"
	width=189px>
<p style="font-style: italic;">surfaceCtrlPointCoords[ ]</td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=541px>
<p>Array of doubles containing the coordinates of the control points for 
 the surface. These are given as a sequence of (X,Y,Z) triples if non-rational, 
 and (X,Y,Z,W) tuples if rational, where W is the homogeneous coordinate 
 known as the weight. The coordinates are given in row-wise order (V varying 
 most quickly).</td></tr>

<tr style="x-cell-content-align: top;"
	valign=top>
<td style="width: 189px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-right-style: None;
			border-left-style: None;
			border-bottom-style: None;"
	width=189px>
<p style="font-style: italic;">packedDouble8 </td>
<td style="width: 541px;
			padding-left: 1px;
			padding-top: 1px;
			padding-right: 1px;
			padding-bottom: 1px;
			border-bottom-style: None;
			border-right-style: None;"
	width=541px>
<p>See previous definition.</td></tr>
</table>

<p style="margin-bottom: 0;">
<!--Metadata type="DesignerControl" startspan
<object classid="clsid:A2F1FA63-C1E6-11d2-9140-006DC83B9955"
		type="application/x-oleobject"
		id=RelatedTopic2
		style="width: 1px; height: 1px;"
		width=1
		height=1>
<param name="_Version" value="65536" >
<param name="_ExtentX" value="26" >
<param name="_ExtentY" value="26" >
<param name="_StockProps" value="13" >
<param name="ForeColor" value="0" >
<param name="BackColor" value="13160660" >
<param name="UseButton" value="0" >
<param name="ControlLabel" value="See Also" >
<param name="UseIcon" value="0" >
<param name="Items" value="ZReleaseNotes2001Plus$$**$$" >
<param name="Image" value="" >
<param name="FontInfo" value="MS Sans Serif,8,0,," >
<param name="_CURRENTFILEPATH" value="C:\Home\obsoleteapi\Face2\Face2__GetTrimCurves.htm" >
<param name="_ID" value="RelatedTopic2" >
<param name="DialogDisplay" value="0" >
<param name="Frame" value="" >
<param name="Window" value="" >
<param name="ChmFile" value="" >
<param name="DisableJump" value="0" >
</object>-->
<OBJECT
  CLASSID="clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"
  ID="RelatedTopic2"  TYPE="application/x-oleobject">
  <PARAM  NAME="Command"  VALUE="ALink">
  <PARAM  NAME="Font"  VALUE="MS Sans Serif,8,0,,">
  <PARAM  NAME="Frame"  VALUE="">
  <PARAM  NAME="Item1"  VALUE="">
  <PARAM  NAME="Item2"  VALUE="ZReleaseNotes2001Plus">
</OBJECT>

<!--Metadata type="DesignerControl" endspan-->
 
<!--Metadata type="DesignerControl" startspan
<object classid="clsid:A2F1FA63-C1E6-11d2-9140-006DC83B9955"
		type="application/x-oleobject"
		id=RelatedTopic1
		style="width: 1px; height: 1px;"
		width=1
		height=1>
<param name="_Version" value="65536" >
<param name="_ExtentX" value="26" >
<param name="_ExtentY" value="26" >
<param name="_StockProps" value="13" >
<param name="ForeColor" value="0" >
<param name="BackColor" value="13160660" >
<param name="UseButton" value="0" >
<param name="ControlLabel" value="See Also" >
<param name="UseIcon" value="0" >
<param name="Items" value="Face2_Object$$**$$" >
<param name="Image" value="" >
<param name="FontInfo" value="MS Sans Serif,8,0,," >
<param name="_CURRENTFILEPATH" value="C:\Home\obsoleteapi\Face2\Face2__GetTrimCurves.htm" >
<param name="_ID" value="RelatedTopic1" >
<param name="DialogDisplay" value="0" >
<param name="Frame" value="" >
<param name="Window" value="" >
<param name="ChmFile" value="" >
<param name="DisableJump" value="0" >
</object>-->
<OBJECT
  CLASSID="clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"
  ID="RelatedTopic1"  TYPE="application/x-oleobject">
  <PARAM  NAME="Command"  VALUE="ALink">
  <PARAM  NAME="Font"  VALUE="MS Sans Serif,8,0,,">
  <PARAM  NAME="Frame"  VALUE="">
  <PARAM  NAME="Item1"  VALUE="">
  <PARAM  NAME="Item2"  VALUE="Face2_Object">
</OBJECT>

<!--Metadata type="DesignerControl" endspan-->
 </p>

<p style="margin-bottom: 0;">&nbsp;</p>

</body>

</html>
