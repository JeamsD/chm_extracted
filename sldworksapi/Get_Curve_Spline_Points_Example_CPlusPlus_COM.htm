<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html LANG=EN-US>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Curve Spline Points Example (C++ COM)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=date content="03 18, 2002 11:31:55 AM">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1677>
<meta name=layout-width content=630>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



 <META NAME="MS-HAID" CONTENT="EXGetCurveSplinePoints">
 <META NAME="MS-HAID" CONTENT="ZExample_Get_Curve_Spline_Points">
 <META NAME="MS-HKWD" CONTENT="Splines,points">
</head>

<!--(Body)==========================================================-->


<body LANG=EN-US>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Get Curve Spline Points Example (C++ COM)</h1>

<p class=apiDescriptionText>This example shows how to get the point coordinates 
 from a selected sketch spline segment.</p>

<p class=apiDescriptionText>The methods ICurve::IGetSplinePts and ICurve::IGetBCurveParams 
 return arrays, so this code must be used in an in-process DLL. Otherwise, 
 use the methods ICurve::GetSplinePts and ICurve::GetBCurveParams that 
 return VARIANTs.</p>

<p class=apiDescriptionText>&nbsp;</p>

<p class=apiCode>void GetCurveSplinePoints(ISldWorks* m_pSldWorks)</p>

<p class=apiCode>{</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->HRESULT 
 hres;</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->LPMODELDOC2 
 pModelDoc = NULL;</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->hres 
 = m_pSldWorks-&gt;get_<span style="font-weight: bold;">IActiveDoc2</span>(&amp;pModelDoc);</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->if( 
 pModelDoc == NULL)</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->return; 
 </p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->LPUNKNOWN 
 pUnk = NULL;</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->LPSELECTIONMGR 
 pSelectMgr = NULL;</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->pModelDoc-&gt;get_<span 
 style="font-weight: bold;">ISelectionManager</span>( &amp;pSelectMgr);</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->if( 
 pSelectMgr)</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->pSelectMgr-&gt;<span 
 style="font-weight: bold;">IGetSelectedObject3</span>( 1, &amp;pUnk);</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->pSelectMgr-&gt;Release();</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->LPSKETCHSEGMENT 
 pSketchSeg = NULL;</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->if( 
 pUnk)</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->pUnk-&gt;QueryInterface( 
 IID_ISketchSegment, (void **)&amp;pSketchSeg);</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->pUnk-&gt;Release();</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->pUnk 
 = NULL;</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->LPCURVE 
 pCurve = NULL;</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->if( 
 pSketchSeg)</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->pSketchSeg-&gt;<span 
 style="font-weight: bold;">IGetCurve</span>( &amp;pCurve);</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->pSketchSeg-&gt;Release();</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->if( 
 pCurve)</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->long 
 nParamSize;</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->pCurve-&gt;<span 
 style="font-weight: bold;">IGetBCurveParamsSize2</span>( FALSE, TRUE, 
 &amp;nParamSize);</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->double 
 *dSplineParams = new double [nParamSize];</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->pCurve-&gt;<span 
 style="font-weight: bold;">IGetBCurveParams</span>( dSplineParams);</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->int 
 *propArray = (int*)&amp;dSplineParams[0];</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->double 
 *dKnotArray = &amp;dSplineParams[2];</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->double 
 *dCtrlArray = &amp;dSplineParams[ 2+ propArray[1]+propArray[2] ];</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->long 
 nSplinePts;</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->pCurve-&gt;<span 
 style="font-weight: bold;">IGetSplinePtsSize</span>( propArray, dKnotArray, 
 dCtrlArray, &amp;nSplinePts);</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->double 
 *dSplinePts = new double[nSplinePts];</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->pCurve-&gt;<span 
 style="font-weight: bold;">IGetSplinePts</span>( dSplinePts);</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->for( 
 int i = 0; i &lt; nSplinePts; i += 3)</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->{</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->TRACE( 
 auT(&quot;x = %f, y = %f, z = %f\n&quot;),</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->dSplinePts[i], 
 dSplinePts[i+1], dSplinePts[+2]);</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->delete 
 [] dSplineParams;</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->delete 
 [] dSplinePts;</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->pCurve-&gt;Release();</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->}</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->pModelDoc-&gt;Release();</p>

<p class=apiCode>}</p>

</body>

</html>
