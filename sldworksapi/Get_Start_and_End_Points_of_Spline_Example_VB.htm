<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Start and End Points of Spline Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2120>
<meta name=layout-width content=786>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



 <META NAME="MS-HKWD" CONTENT="VBA examples,splines">
 <META NAME="MS-HKWD" CONTENT="VBA examples,points">

</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Get Start and End Points of Spline Example (VBA)</h1>

<p>This example shows how to get the start and end points of a spline.</p>

<pre>'-------------------------------------------------
' Preconditions:
' 1. Open a sketch that has a spline.
' 2. Select the spline.
' 3. Open the Immediate window.
'
' Postconditions:
' 1. Gets the start and end points of the spline.
' 2. Examine the Immediate window.
'--------------------------------------------------
Option Explicit</pre>
<pre>' Define two types
Type DoubleRec
    dValue As Double
End Type</pre>
<pre>Type Long2Rec
    iLower As Long
    iUpper As Long
End Type</pre>
<pre>' Extract two integer values from a single double value
' by assigning a DoubleRec to the double value,
' copying the value to a Long2Rec, and
' extracting the integer values
Function ExtractFields(ByVal dValue As Double, iLower As Long, iUpper As Long)
    Dim dr As DoubleRec
    Dim i2r As Long2Rec
    ' Set the double value
    dr.dValue = dValue
    ' Copy the values
    LSet i2r = dr
    ' Extract the values
    iLower = i2r.iLower
    iUpper = i2r.iUpper
End Function</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swSelMgr As SldWorks.SelectionMgr
    Dim swSketchSeg As SldWorks.SketchSegment
    Dim swCurve As SldWorks.Curve
    Dim nStartParam As Double
    Dim nEndParam As Double
    Dim bIsClosed As Boolean
    Dim bIsPeriodic As Boolean
    Dim vStart As Variant
    Dim vEnd As Variant
    Dim nDummy As Long
    Dim nStartSuccess As Long
    Dim nEndSuccess As Long
    Dim i As Long
    Dim bRet As Boolean</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swSelMgr = swModel.<b>SelectionManager</b>
    Set swSketchSeg = swSelMgr.<b>GetSelectedObject5</b>(1)
    Set swCurve = swSketchSeg.<b>GetCurve</b>
    bRet = swCurve.<b>GetEndParams</b>(nStartParam, nEndParam, bIsClosed, bIsPeriodic)
    vStart = swCurve.<b>Evaluate</b>(nStartParam)
    vEnd = swCurve.<b>Evaluate</b>(nEndParam)
    ExtractFields vStart(6), nStartSuccess, nDummy
    ExtractFields vEnd(6), nEndSuccess, nDummy</pre>
<pre>    Debug.Print &quot;Length = &quot; &amp; swCurve.<b>GetLength2</b>(nStartParam, nEndParam) * 1000# &amp; &quot; mm&quot;
    Debug.Print &quot;  Start Pt     = (&quot; &amp; vStart(0) * 1000# &amp; &quot;, &quot; &amp; vStart(1) * 1000# &amp; &quot;, &quot; &amp; vStart(2) * 1000# &amp; &quot;) mm&quot;
    Debug.Print &quot;    tangent    = (&quot; &amp; vStart(3) &amp; &quot;, &quot; &amp; vStart(4) &amp; &quot;, &quot; &amp; vStart(5) &amp; &quot;)&quot;
    Debug.Print &quot;  End   Pt     = (&quot; &amp; vEnd(0) * 1000# &amp; &quot;, &quot; &amp; vEnd(1) * 1000# &amp; &quot;, &quot; &amp; vEnd(2) * 1000# &amp; &quot;) mm&quot;
    Debug.Print &quot;    tangent    = (&quot; &amp; vEnd(3) &amp; &quot;, &quot; &amp; vEnd(4) &amp; &quot;, &quot; &amp; vEnd(5) &amp; &quot;)&quot;</pre>
<pre>End Sub</pre>

</body>

</html>
