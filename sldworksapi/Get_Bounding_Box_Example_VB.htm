<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Bounding Box Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1984>
<meta name=layout-width content=628>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">

<META NAME="MS-HKWD" CONTENT="VBA examples,bounding box">

</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Get Bounding Box Example (VBA)</h1>

<p>This example shows how to get the bounding boxes for the selected feature and 
face. This example also shows how to draw 3D sketches depicting the bounding 
boxes.</p>

<p class=apiCode>'----------------------------------------------<br>
' Preconditions:<br>
' 1. Verify that the part to open exits.<br>
' 2. Open the Immediate window.<br>
'<br>
' Postconditions:<br>
' 1. Selects the <b>Sweep1</b> feature.<br>
' 2. Creates a 3D sketch of the bounding box of<br>
'&nbsp;&nbsp;&nbsp; the selected <b>Sweep1</b> feature.<br>
' 3. Selects the top face.<br>
' 4. Creates a 3D sketch of the bounding box of <br>
'&nbsp;&nbsp;&nbsp; the selected face.<br>
' 5. Examine the graphics area and the Immediate<br>
'&nbsp;&nbsp;&nbsp; window.<br>
'<br>
' NOTE: Because this part is used elsewhere,<br>
' do not save changes.<br>
'----------------------------------------------</p>
<pre>Option Explicit</pre>
<pre>Sub main()

     Dim swApp                       As SldWorks.SldWorks
     Dim swModel                     As SldWorks.ModelDoc2
     Dim swModelDocExt               As SldWorks.ModelDocExtension
     Dim swSelMgr                    As SldWorks.SelectionMgr
     Dim swFeat                      As SldWorks.Feature
     Dim swFace                      As SldWorks.Face2
     Dim BoxFeatureArray             As Variant
     Dim BoxFaceArray                As Variant
     Dim swSketchMgr                 As SldWorks.SketchManager
     Dim swSketchPt(8)               As SldWorks.SketchPoint
     Dim swSketchSeg(12)             As SldWorks.SketchSegment
     Dim status                      As Boolean
     Dim errors                      As Long
     Dim warnings                    As Long
     Dim fileName                    As String
    </pre>
<pre>     Set swApp = Application.SldWorks    </pre>
<pre>     ' Open part document
     fileName = &quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\api\cstick.sldprt&quot;
     Set swModel = swApp.<b>OpenDoc6</b>(fileName, swDocPART, swOpenDocOptions_Silent, &quot;&quot;, errors, warnings)</pre>
<pre>    
     ' Select feature
     Set swModelDocExt = swModel.<b>Extension</b>
     Set swSelMgr = swModel.<b>SelectionManager</b>
     status = swModelDocExt.<b>SelectByID2</b>(&quot;Sweep1&quot;, &quot;BODYFEATURE&quot;, 0, 0, 0, False, 0, Nothing, 0)
     Set swFeat = swSelMgr.<b>GetSelectedObject6</b>(1, -1)    </pre>
<pre>     ' Get selected feature's bounding box
     Debug.Print &quot;Feature:&quot;
     status = swFeat.<b>GetBox</b>(BoxFeatureArray): Debug.Assert status
     Debug.Print &quot;  Pt1 = &quot; &amp; _
            &quot;(&quot; &amp; _
            BoxFeatureArray(0) * 1000# &amp; &quot;, &quot; &amp; _
            BoxFeatureArray(1) * 1000# &amp; &quot;, &quot; &amp; _
            BoxFeatureArray(2) * 1000# &amp; _
            &quot;) mm&quot;
     Debug.Print &quot;  Pt2 = &quot; &amp; _
            &quot;(&quot; &amp; _
            BoxFeatureArray(3) * 1000# &amp; &quot;, &quot; &amp; _
            BoxFeatureArray(4) * 1000# &amp; &quot;, &quot; &amp; _
            BoxFeatureArray(5) * 1000# &amp; _
            &quot;) mm&quot;
     swModel.<b>Insert3DSketch2</b> True
     swModel.<b>SetAddToDB</b> True
     swModel.<b>SetDisplayWhenAdded</b> False    </pre>
<pre>     Set swSketchMgr = swModel.<b>SketchManager</b>    </pre>
<pre>     ' Draw points at each corner of bounding box
     Set swSketchPt(0) = swSketchMgr.<b>CreatePoint</b>(BoxFeatureArray(3), BoxFeatureArray(1), BoxFeatureArray(5))
     Set swSketchPt(1) = swSketchMgr.CreatePoint(BoxFeatureArray(0), BoxFeatureArray(1), BoxFeatureArray(5))
     Set swSketchPt(2) = swSketchMgr.CreatePoint(BoxFeatureArray(0), BoxFeatureArray(1), BoxFeatureArray(2))
     Set swSketchPt(3) = swSketchMgr.CreatePoint(BoxFeatureArray(3), BoxFeatureArray(1), BoxFeatureArray(2))
     Set swSketchPt(4) = swSketchMgr.CreatePoint(BoxFeatureArray(3), BoxFeatureArray(4), BoxFeatureArray(5))
     Set swSketchPt(5) = swSketchMgr.CreatePoint(BoxFeatureArray(0), BoxFeatureArray(4), BoxFeatureArray(5))
     Set swSketchPt(6) = swSketchMgr.CreatePoint(BoxFeatureArray(0), BoxFeatureArray(4), BoxFeatureArray(2))
     Set swSketchPt(7) = swSketchMgr.CreatePoint(BoxFeatureArray(3), BoxFeatureArray(4), BoxFeatureArray(2))    </pre>
<pre>     ' Now draw bounding box
     Set swSketchSeg(0) = swSketchMgr.<b>CreateLine</b>(swSketchPt(0).<b>X</b>, swSketchPt(0).<b>Y</b>, swSketchPt(0).<b>Z</b>, swSketchPt(1).X, swSketchPt(1).Y, swSketchPt(1).Z)
     Set swSketchSeg(1) = swSketchMgr.CreateLine(swSketchPt(1).X, swSketchPt(1).Y, swSketchPt(1).Z, swSketchPt(2).X, swSketchPt(2).Y, swSketchPt(2).Z)
     Set swSketchSeg(2) = swSketchMgr.CreateLine(swSketchPt(2).X, swSketchPt(2).Y, swSketchPt(2).Z, swSketchPt(3).X, swSketchPt(3).Y, swSketchPt(3).Z)
     Set swSketchSeg(3) = swSketchMgr.CreateLine(swSketchPt(3).X, swSketchPt(3).Y, swSketchPt(3).Z, swSketchPt(0).X, swSketchPt(0).Y, swSketchPt(0).Z)    </pre>
<pre>     Set swSketchSeg(4) = swSketchMgr.CreateLine(swSketchPt(0).X, swSketchPt(0).Y, swSketchPt(0).Z, swSketchPt(4).X, swSketchPt(4).Y, swSketchPt(4).Z)
     Set swSketchSeg(5) = swSketchMgr.CreateLine(swSketchPt(1).X, swSketchPt(1).Y, swSketchPt(1).Z, swSketchPt(5).X, swSketchPt(5).Y, swSketchPt(5).Z) 
     Set swSketchSeg(6) = swSketchMgr.CreateLine(swSketchPt(2).X, swSketchPt(2).Y, swSketchPt(2).Z, swSketchPt(6).X, swSketchPt(6).Y, swSketchPt(6).Z)
     Set swSketchSeg(7) = swSketchMgr.CreateLine(swSketchPt(3).X, swSketchPt(3).Y, swSketchPt(3).Z, swSketchPt(7).X, swSketchPt(7).Y, swSketchPt(7).Z)    </pre>
<pre>     Set swSketchSeg(8) = swSketchMgr.CreateLine(swSketchPt(4).X, swSketchPt(4).Y, swSketchPt(4).Z, swSketchPt(5).X, swSketchPt(5).Y, swSketchPt(5).Z)
     Set swSketchSeg(9) = swSketchMgr.CreateLine(swSketchPt(5).X, swSketchPt(5).Y, swSketchPt(5).Z, swSketchPt(6).X, swSketchPt(6).Y, swSketchPt(6).Z)
     Set swSketchSeg(10) = swSketchMgr.CreateLine(swSketchPt(6).X, swSketchPt(6).Y, swSketchPt(6).Z, swSketchPt(7).X, swSketchPt(7).Y, swSketchPt(7).Z)
     Set swSketchSeg(11) = swSketchMgr.CreateLine(swSketchPt(7).X, swSketchPt(7).Y, swSketchPt(7).Z, swSketchPt(4).X, swSketchPt(4).Y, swSketchPt(4).Z)
    </pre>
<pre>     swModel.<b>SetDisplayWhenAdded</b> True
     swModel.<b>SetAddToDB</b> False
     swModel.<b>Insert3DSketch2</b> True    </pre>
<pre>     swModel.<b>ClearSelection2</b> True        </pre>
<pre>     ' Get selected face's bounding box
     status = swModelDocExt.<b>SelectByID2</b>(&quot;&quot;, &quot;FACE&quot;, -7.62173696102764E-05, 0.219999999999857, 9.45327855254163E-03, False, 0, Nothing, 0)
     Set swFace = swSelMgr.<b>GetSelectedObject6</b>(1, -1)    </pre>
<pre>     ' Get selected face's bounding box
     Debug.Print &quot;Face =&quot;
     BoxFaceArray = swFace.<b>GetBox</b>
     Debug.Print &quot;  Pt1 = &quot; &amp; _
            &quot;(&quot; &amp; _
            BoxFaceArray(0) * 1000# &amp; &quot;, &quot; &amp; _
            BoxFaceArray(1) * 1000# &amp; &quot;, &quot; &amp; _
            BoxFaceArray(2) * 1000# &amp; _
            &quot;) mm&quot;
     Debug.Print &quot;  Pt2 = &quot; &amp; _
            &quot;(&quot; &amp; _
            BoxFaceArray(3) * 1000# &amp; &quot;, &quot; &amp; _
            BoxFaceArray(4) * 1000# &amp; &quot;, &quot; &amp; _
            BoxFaceArray(5) * 1000# &amp; _
            &quot;) mm&quot;
     swModel.<b>Insert3DSketch2</b> True
     swModel.<b>SetAddToDB</b> True
     swModel.<b>SetDisplayWhenAdded</b> False    </pre>
<blockquote>
	<pre>' Draw points at each corner of bounding box
Set swSketchPt(0) = swSketchMgr.<b>CreatePoint</b>(BoxFaceArray(3), BoxFaceArray(1), BoxFaceArray(5))
Set swSketchPt(1) = swSketchMgr.CreatePoint(BoxFaceArray(0), BoxFaceArray(1), BoxFaceArray(5))
Set swSketchPt(2) = swSketchMgr.CreatePoint(BoxFaceArray(0), BoxFaceArray(1), BoxFaceArray(2))
Set swSketchPt(3) = swSketchMgr.CreatePoint(BoxFaceArray(3), BoxFaceArray(1), BoxFaceArray(2))
Set swSketchPt(4) = swSketchMgr.CreatePoint(BoxFaceArray(3), BoxFaceArray(4), BoxFaceArray(5))
Set swSketchPt(5) = swSketchMgr.CreatePoint(BoxFaceArray(0), BoxFaceArray(4), BoxFaceArray(5))
Set swSketchPt(6) = swSketchMgr.CreatePoint(BoxFaceArray(0), BoxFaceArray(4), BoxFaceArray(2))
Set swSketchPt(7) = swSketchMgr.CreatePoint(BoxFaceArray(3), BoxFaceArray(4), BoxFaceArray(2))

' Now draw bounding box
Set swSketchSeg(0) = swSketchMgr.<b>CreateLine</b>(swSketchPt(0).<b>X</b>, swSketchPt(0).<b>Y</b>, swSketchPt(0).<b>Z</b>, swSketchPt(1).X, swSketchPt(1).Y, swSketchPt(1).Z)
Set swSketchSeg(1) = swSketchMgr.CreateLine(swSketchPt(1).X, swSketchPt(1).Y, swSketchPt(1).Z, swSketchPt(2).X, swSketchPt(2).Y, swSketchPt(2).Z)
Set swSketchSeg(2) = swSketchMgr.CreateLine(swSketchPt(2).X, swSketchPt(2).Y, swSketchPt(2).Z, swSketchPt(3).X, swSketchPt(3).Y, swSketchPt(3).Z)
Set swSketchSeg(3) = swSketchMgr.CreateLine(swSketchPt(3).X, swSketchPt(3).Y, swSketchPt(3).Z, swSketchPt(0).X, swSketchPt(0).Y, swSketchPt(0).Z)

Set swSketchSeg(4) = swSketchMgr.CreateLine(swSketchPt(0).X, swSketchPt(0).Y, swSketchPt(0).Z, swSketchPt(4).X, swSketchPt(4).Y, swSketchPt(4).Z)
Set swSketchSeg(5) = swSketchMgr.CreateLine(swSketchPt(1).X, swSketchPt(1).Y, swSketchPt(1).Z, swSketchPt(5).X, swSketchPt(5).Y, swSketchPt(5).Z)
Set swSketchSeg(6) = swSketchMgr.CreateLine(swSketchPt(2).X, swSketchPt(2).Y, swSketchPt(2).Z, swSketchPt(6).X, swSketchPt(6).Y, swSketchPt(6).Z)
Set swSketchSeg(7) = swSketchMgr.CreateLine(swSketchPt(3).X, swSketchPt(3).Y, swSketchPt(3).Z, swSketchPt(7).X, swSketchPt(7).Y, swSketchPt(7).Z)

Set swSketchSeg(8) = swSketchMgr.CreateLine(swSketchPt(4).X, swSketchPt(4).Y, swSketchPt(4).Z, swSketchPt(5).X, swSketchPt(5).Y, swSketchPt(5).Z)
Set swSketchSeg(9) = swSketchMgr.CreateLine(swSketchPt(5).X, swSketchPt(5).Y, swSketchPt(5).Z, swSketchPt(6).X, swSketchPt(6).Y, swSketchPt(6).Z)
Set swSketchSeg(10) = swSketchMgr.CreateLine(swSketchPt(6).X, swSketchPt(6).Y, swSketchPt(6).Z, swSketchPt(7).X, swSketchPt(7).Y, swSketchPt(7).Z)
Set swSketchSeg(11) = swSketchMgr.CreateLine(swSketchPt(7).X, swSketchPt(7).Y, swSketchPt(7).Z, swSketchPt(4).X, swSketchPt(4).Y, swSketchPt(4).Z)
</pre>
</blockquote>
<pre>    swModel.<b>SetDisplayWhenAdded</b> True
    swModel.<b>SetAddToDB</b> False
    swModel.<b>Insert3DSketch2</b> True    </pre>
<pre>End Sub</pre>

</body>

</html>
