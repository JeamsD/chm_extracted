<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Motion Study Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,motion studies">
<meta name=MS-HKWD content="Physical Simulation">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=3096>
<meta name=layout-width content=756>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Get Motion Study Example (VBA)</h1>

<p>This example shows how to get a Physical Simulation motion study and 
 its properties.</p>

<pre>'-----------------------------------------
' Preconditions:
' 1. Open a model that has a Physical Simulation motion study
'    named <b>PhysSim</b>.
' 2. In SOLIDWORKS, load the SOLIDWORKS Motion Study add-in 
'    (click <b>Tools &gt; Add-Ins &gt; SOLIDWORKS Motion</b>).
' 3. In the SOLIDWORKS VBA IDE, add a reference to the 
'    SolidWorks MotionStudy type library.
' 4. Open the Immediate window.
'
' Postconditions:
' 1. Gets the MotionManager.
' 2. Gets and activates the <b>PhysSim</b> motion study.
' 3. Gets some motion study properties and features.
' 4. Plays the motion study.
' 5. In SOLIDWORKS, click <b>Stop</b> in the MotionManager
'    to stop playing the motion study.
' 6. Gets the motion study results and whether the
'    results are out of date.
' 7. Examine the Immediate window.
'-----------------------------------------
Option Explicit</pre>
<pre>Dim swApp As SldWorks.SldWorks
Dim swModel As SldWorks.ModelDoc2
Dim swModelDocExt As SldWorks.ModelDocExtension
Dim swMotionMgr As SwMotionStudy.MotionStudyManager
Dim swMotionStudy1 As SwMotionStudy.MotionStudy
Dim swResults As SwMotionStudy.MotionStudyResults
Dim swMotionStudyProps As SwMotionStudy.MotionStudyProperties
Dim swPhysicalSimProps As SwMotionStudy.PhysicalSimulationMotionStudyProperties
Dim boolstatus As Boolean
Dim i As Long
Dim vMotionFeatures As Variant</pre>
<pre>Sub main()</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swModelDocExt = swModel.<b>Extension</b></pre>
<pre>    ' Get the MotionManager
    Set swMotionMgr = swModelDocExt.<b>GetMotionStudyManager</b>()
    If (swMotionMgr Is Nothing) Then
          End
    End If</pre>
<pre>    ' Get motion study named PhysSim
    Set swMotionStudy1 = swMotionMgr.<b>GetMotionStudy</b>(&quot;PhysSim&quot;)
    If (swMotionStudy1 Is Nothing) Then
        MsgBox &quot;PhysSim is not available.&quot;
        End
    End If</pre>
<pre>    swMotionStudy1.<b>StudyType</b> = swMotionStudyType_e.swMotionStudyTypePhysicalSimulation</pre>
<pre>    'Active the motion study
    If Not swMotionStudy1.<b>IsActive</b> Then swMotionStudy1.Activate
    Debug.Print &quot;Duration of motion study: &quot; &amp; swMotionStudy1.<b>GetDuration</b>
    Debug.Print &quot;Timebar position on timeline: &quot; &amp; swMotionStudy1.<b>GetTime</b>
    Debug.Print &quot;Number of motion features: &quot; &amp; swMotionStudy1.<b>GetMotionFeaturesCount</b>
    Set swMotionStudyProps = swMotionStudy1.<b>GetProperties</b>(2)
    Set swPhysicalSimProps = swMotionStudyProps
    Debug.Print &quot;&quot;
    Debug.Print &quot;Physical simulation properties: &quot;
    Debug.Print &quot;    Frame rate: &quot; &amp; swMotionStudyProps.<b>GetFrameRate</b>
    Debug.Print &quot;    Geometric accuracy: &quot; &amp; swPhysicalSimProps.<b>GeometricAccuracy</b>
    Debug.Print &quot;    Mate accuracy: &quot; &amp; swPhysicalSimProps.<b>MateAccuracy</b>
    swPhysicalSimProps.<b>MateAccuracy</b> = 1
    vMotionFeatures = swMotionStudy1.<b>GetMotionFeatures</b>
    For i = 0 To UBound(vMotionFeatures)
    Dim swFeat As Feature
        Set swFeat = vMotionFeatures(i)
        PhysicalSimFeatureTests swFeat, swModel
    Next i</pre>
<pre>    'Calculate
    swMotionStudy1.<b>Calculate</b>
    WaitForCaluculation swMotionStudy1
    Set swResults = swMotionStudy1.<b>GetResults</b>(2)
    Debug.Print &quot;&quot;
    Debug.Print &quot;Are the motion study results out of date? &quot; &amp; swResults.<b>IsOutOfDate</b></pre>
<pre>End Sub</pre>
<pre>Private Sub WaitForCaluculation(SwMotionStudy As MotionStudy)
    Do While SwMotionStudy.<b>IsPlaying</b>
        DoEvents
    Loop
End Sub
 
</pre>
<pre>Private Sub PhysicalSimFeatureTests(swFeat As Feature, TopDoc As ModelDoc2)
    Dim SimTypeName As String
    Dim SimulationGravityFeatureData As SldWorks.SimulationGravityFeatureData</pre>
<pre>    SimTypeName = swFeat.<b>GetTypeName</b>
    Debug.Print &quot;&quot;
        ' Print the name of the type of simulation and its gravity strength
        Select Case SimTypeName
        Case &quot;AEMGravity&quot;
            Debug.Print &quot;    Type of feature: AEMGravity&quot;
        Case &quot;AEMLinearMotor&quot;
            Debug.Print &quot;    Type of feature: AEMLinearMotor&quot;
        Case &quot;AEMRotationalMotor&quot;
            Debug.Print &quot;    Type of feature: AEMRotationalMotor&quot;
        Case &quot;AEMLinearSpring&quot;
            Debug.Print &quot;    Type of feature: AEMLinearSpring&quot;
        Case Else
            Debug.Print &quot;    Type of feature: &quot; &amp; SimTypeName
            MsgBox SimTypeName
    End Select</pre>
<pre>End Sub</pre>

</body>

</html>
