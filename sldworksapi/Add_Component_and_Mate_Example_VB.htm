<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Add and Mate Component Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta NAME=MS-HKWD CONTENT="VBA examples,mates">
<meta NAME=MS-HKWD CONTENT="VBA examples,components">
<meta NAME=MS-HKWD CONTENT="VBA examples,virtual component">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2393>
<meta name=layout-width content=1395>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Add and Mate Component Example (VBA)</h1>

<p><a name="Top"></a>This example shows how to add a component to an assembly and mate it.</p>

<p class="APICODE">
'---------------------------------------------------------------------------<br>
' Preconditions:<br>
' 1. Copy and paste <a href="#Main0">this code</a> in the main module.<br>
' 2. Click <b>Insert &gt; Class module</b> and copy and paste <a href="#Class">this 
code</a> in the class<br>
'&nbsp;&nbsp;&nbsp; module.<br>
' 3. Verify that these documents exist in <i>public_documents</i><b>\samples\tutorial\toolbox:<br>
'&nbsp;&nbsp;&nbsp; </b>*<b> lens_mount.sldasm<br>
'&nbsp;&nbsp;&nbsp; </b>* <b>camtest.sldprt</b><br>
' 4. Open the Immediate window.<br>
'<br>
' Postconditions:<br>
' 1. Opens <b>lens_mount.sldasm</b>.<br>
' 2. Adds the specified component, <b>camtest.sldprt</b>, to the assembly.<br>
'&nbsp;3. Fires the <b>AddItemNotify</b> event.<br>
' 4. Makes the specified component virtual by saving it to the <br>
'&nbsp;&nbsp;&nbsp; assembly with a 
new name.<br>
'&nbsp;5. Fires the <b>RenameItemNotify</b> event.<br>
' 6. Adds a mate between the selected planes to the assembly.<br>
' 7. Inspect the Immediate window and FeatureManager design tree.<br>
'<br>
' NOTE: Because the models are used elsewhere, do not save changes.<br>
'----------------------------------------------------------------------------</p>
<p class="APICODE"><a name=Main0></a>'Main module</p>
<p class="APICODE">Option Explicit</p>
<p class="APICODE">Dim swApp As New SldWorks.SldWorks<br>
Dim swModel As ModelDoc2<br>
Dim swDocExt As ModelDocExtension<br>
Dim swAssy As AssemblyDoc<br>
Dim swAssyEvents As Class1<br>
Dim tmpPath As String<br>
Dim tmpObj As SldWorks.ModelDoc2<br>
Dim boolstat As Boolean, stat As Boolean<br>
Dim strings As Variant<br>
Dim swcomponent As SldWorks.Component2<br>
Dim matefeature As SldWorks.Feature<br>
Dim MateName As String<br>
Dim FirstSelection As String<br>
Dim SecondSelection As String<br>
Dim strCompName As String<br>
Dim AssemblyTitle As String<br>
Dim AssemblyName As String<br>
Dim errors As Long<br>
Dim warnings As Long<br>
Dim mateError As Long<br>
Dim fileName As String<br>
&nbsp;</p>
<p class="APICODE">Sub main()</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swApp = CreateObject(&quot;SldWorks.Application&quot;)</p>
<pre>    ' Open assembly
    fileName = &quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\toolbox\lens_mount.sldasm&quot;
    Set swModel = swApp.<b>OpenDoc6</b>(fileName, swDocumentTypes_e.swDocASSEMBLY, swOpenDocOptions_e.swOpenDocOptions_Silent, &quot;&quot;, errors, warnings)

&nbsp;&nbsp;&nbsp; ' Get title of assembly document
&nbsp;&nbsp;&nbsp; AssemblyTitle = swModel.<b>GetTitle</b></pre>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Split the title into two strings using 
the period as the delimiter<br>
&nbsp;&nbsp;&nbsp; strings = Split(AssemblyTitle, &quot;.&quot;)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Use AssemblyName when mating the 
component with the assembly<br>
&nbsp;&nbsp;&nbsp; AssemblyName = strings(0)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Name of assembly: &quot; &amp; AssemblyName</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; boolstat = True<br>
&nbsp;&nbsp;&nbsp; Dim strCompModelname As String<br>
&nbsp;&nbsp;&nbsp; strCompModelname = &quot;camtest.sldprt&quot;<br>
&nbsp;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Because the component resides in the 
same folder as the assembly, get<br>
&nbsp;&nbsp;&nbsp; ' the assembly's path and use it when opening the component<br>
&nbsp;&nbsp;&nbsp; tmpPath = Left(swModel.<b>GetPathName</b>, InStrRev(swModel.<b>GetPathName</b>, 
&quot;\&quot;))<br>
&nbsp;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Open the component<br>
&nbsp;&nbsp;&nbsp; Set tmpObj = swApp.<b>OpenDoc6</b>(tmpPath + strCompModelname, 
swDocPART, 0, &quot;&quot;, errors, warnings)<br>
&nbsp;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Check to see if the file is read-only or 
cannot be found; display error messages<br>
&nbsp;&nbsp;&nbsp; If warnings = swFileLoadWarning_ReadOnly Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox &quot;This file is read-only.&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; boolstat = False<br>
&nbsp;&nbsp;&nbsp; End If<br>
&nbsp;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; If tmpObj Is Nothing Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox &quot;Cannot locate the file.&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; boolstat = False<br>
&nbsp;&nbsp;&nbsp; End If<br>
&nbsp;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Activate the assembly so that you can 
add the component to it<br>
&nbsp;&nbsp;&nbsp; Set swModel = swApp.<b>ActivateDoc3</b>(AssemblyTitle, True, 
swUserDecision, errors)<br>
&nbsp;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Set up events<br>
&nbsp;&nbsp;&nbsp; Set swAssy = swModel<br>
&nbsp;&nbsp;&nbsp; Set swAssyEvents = New Class1<br>
&nbsp;&nbsp;&nbsp; Set swAssyEvents.swAssy = swApp.<b>ActiveDoc<br>
&nbsp;</b></p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Add the part to the assembly 
document<br>
&nbsp;&nbsp;&nbsp; Set swcomponent = swAssy.<b>AddComponent5</b>(strCompModelname, 
swAddComponentConfigOptions_CurrentSelectedConfig, &quot;&quot;, False, &quot;&quot;, -1, -1, -1)<br>
&nbsp;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Make the component virtual<br>
&nbsp;&nbsp;&nbsp; stat = swcomponent.<b>MakeVirtual2</b>(True)<br>
&nbsp;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Get the name of the component for the 
mate<br>
&nbsp;&nbsp;&nbsp; strCompName = swcomponent.<b>Name2</b>()<br>
&nbsp;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Create the name of the mate and the 
names of the planes to use for the mate<br>
&nbsp;&nbsp;&nbsp; MateName = &quot;top_coinc_&quot; + strCompName<br>
&nbsp;&nbsp;&nbsp; FirstSelection = &quot;Top@&quot; + strCompName &amp; &quot;@&quot; + AssemblyName<br>
&nbsp;&nbsp;&nbsp; SecondSelection = &quot;Front@&quot; + AssemblyName<br>
&nbsp;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; swModel.<b>ClearSelection2</b> (True)<br>
&nbsp;&nbsp;&nbsp; Set swDocExt = swModel.<b>Extension<br>
&nbsp;</b></p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Select the planes to mate<br>
&nbsp;&nbsp;&nbsp; boolstat = swDocExt.<b>SelectByID2</b>(FirstSelection, 
&quot;PLANE&quot;, 0, 0, 0, True, 1, Nothing, swSelectOptionDefault)<br>
&nbsp;&nbsp;&nbsp; boolstat = swDocExt.<b>SelectByID2</b>(SecondSelection, 
&quot;PLANE&quot;, 0, 0, 0, True, 1, Nothing, swSelectOptionDefault)<br>
&nbsp;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Add the mate<br>
&nbsp;&nbsp;&nbsp; Set matefeature = swAssy.<b>AddMate5</b>(swMateCOINCIDENT, 
swMateAlignALIGNED, False, 0, 0, 0, 0, 0, 0, 0, 0, False, False, 0, mateError)<br>
&nbsp;&nbsp;&nbsp; matefeature.<b>Name</b> = MateName<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Mate added: &quot; &amp; matefeature.<b>Name<br>
&nbsp;</b></p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; swModel.<b>ViewZoomtofit2</b></p>
<p class="APICODE">End Sub</p>
<p class=apiCode align="center"><a href="#Top">Back to top</a></p>
<h5><span style="font-weight: 400"><font face="Courier New" size="2"><a name=Class></a>
'Class module</font></span></h5>
<p class="APICODE">Option Explicit</p>
<p class="APICODE">Public WithEvents swAssy As SldWorks.AssemblyDoc<br>
</p>
<p class="APICODE">Private Function swAssy_<b>AddItemNotify</b>(ByVal EntityType As 
Long, ByVal itemName As String) As Long<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Component added: &quot; &amp; itemName<br>
End Function</p>
<p class="APICODE">Private Function swAssy_<b>RenameItemNotify</b>(ByVal 
EntityType As Long, ByVal oldName As String, ByVal NewName As String) As Long<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Virtual component name: &quot; &amp; NewName<br>
End Function</p>
<p class="APICODE">&nbsp;</p>
<p class=apiCode align="center"><a href="#Top">Back to top</a></p>
<p class=apiCode>&nbsp;</p>
<p class=apiCode>&nbsp;</p>

</body>

</html>
