<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Determine if Sketch Suitable for Feature Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2502>
<meta name=layout-width content=628>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">

 <META NAME="MS-HKWD" CONTENT="VBA examples,sketches">
</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Determine if Sketch Suitable for Feature Example (VBA)</h1>

<p>This example shows how to determine if a sketch is suitable for use 
 in a feature.</p>
<p><b>NOTE:</b> <!--kadov_tag{{</spaces>}}-->Sketch 
 geometry can be used in a variety of ways in SOLIDWORKS.&nbsp;<!--kadov_tag{{</spaces>}}-->However, 
 not every sketch is suitable for every purpose.&nbsp;<!--kadov_tag{{</spaces>}}-->For 
 example, (non-thin) extrusions require a closed profile.</p>
<pre>'------------------------------------------------
' Preconditions:
' 1. Open a part or assembly.
' 2. Select a sketch.
' 3. Open the Immediate window.
'
' Postconditions: 
' 1. Checks the selected sketch.
' 2. Examine the Immediate window.
'--------------------------------------------------
Option Explicit</pre>
<pre>' List of feature types to be used with the ISketch::CheckFeatureUse
Public Enum swSketchCheckFeatureProfileUsage_e
    swSketchCheckFeature_UNSET = 0
    swSketchCheckFeature_BASEEXTRUDE = 1
    swSketchCheckFeature_BASEEXTRUDETHIN = 2
    swSketchCheckFeature_BOSSEXTRUDE = 3
    swSketchCheckFeature_BOSSEXTRUDETHIN = 4
    swSketchCheckFeature_SURFACEEXTRUDE = 5
    swSketchCheckFeature_BASEREVOLVE = 6
    swSketchCheckFeature_BASEREVOLVETHIN = 7
    swSketchCheckFeature_BOSSREVOLVE = 8
    swSketchCheckFeature_BOSSREVOLVETHIN = 9
    swSketchCheckFeature_SURFACEREVOLVE = 10
    swSketchCheckFeature_CUTEXTRUDE = 11
    swSketchCheckFeature_CUTEXTRUDETHIN = 12
    swSketchCheckFeature_CUTREVOLVE = 13
    swSketchCheckFeature_CUTREVOLVETHIN = 14
    swSketchCheckFeature_SWEEPSECTION = 15
    swSketchCheckFeature_SURFACESWEEPSECTION = 16
    swSketchCheckFeature_SWEEPPATHORGUIDE = 17
    swSketchCheckFeature_LOFTSECTION = 18
    swSketchCheckFeature_SURFACELOFTSECTION = 19
    swSketchCheckFeature_LOFTGUIDE = 20
    swSketchCheckFeature_RIBSECTION = 21
    swSketchCheckFeature_SHEETMETAL_BASEFLANGE = 22
End Enum</pre>
<pre>' A list of return status values for the ISketch::CheckFeatureUse
Public Enum swSketchCheckFeatureStatus_e
    swSketchCheckFeatureStatus_UnknownError = -1
    swSketchCheckFeatureStatus_OK = 0
    swSketchCheckFeatureStatus_EntXEnt = 1
    swSketchCheckFeatureStatus_EntXSelf = 2
    swSketchCheckFeatureStatus_EntUnspecBad = 3
    swSketchCheckFeatureStatus_ThreeEnts = 4
    swSketchCheckFeatureStatus_EmptySketch = 5
    swSketchCheckFeatureStatus_WrongOpen = 6
    swSketchCheckFeatureStatus_WrongManyContours = 7
    swSketchCheckFeatureStatus_ZeroLengthEnt = 8
    swSketchCheckFeatureStatus_ManyOpen = 9
    swSketchCheckFeatureStatus_NoOpen = 10
    swSketchCheckFeatureStatus_MixedContours = 11
    swSketchCheckFeatureStatus_CturXCtur = 12
    swSketchCheckFeatureStatus_DisjCturs = 13
    swSketchCheckFeatureStatus_OpenWantClosed = 14
    swSketchCheckFeatureStatus_ClosedWantOpen = 15
    swSketchCheckFeatureStatus_DoubleContainment = 16
    swSketchCheckFeatureStatus_MoreThanOneContour = 17
    swSketchCheckFeatureStatus_OneOpenContourExpected = 18
    swSketchCheckFeatureStatus_OneClosedContourExpected = 19
    swSketchCheckFeatureStatus_WantSingleOpenOrMultiClosedDisjoint = 20
    swSketchCheckFeatureStatus_NeedsAxis = 21
    swSketchCheckFeatureStatus_OpenOrUnclear = 22
    swSketchCheckFeatureStatus_ContourIntersectsCenterLine = 23
End Enum</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swSelMgr As SldWorks.SelectionMgr
    Dim swFeat As SldWorks.Feature
    Dim swSketch As SldWorks.Sketch
    Dim nRetVal As Long
    Dim nOpenCount As Long
    Dim nClosedCount As Long
    Dim i As Long</pre>
<pre>    Set swApp = CreateObject(&quot;SldWorks.Application&quot;)
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swSelMgr = swModel.<b>SelectionManager</b>
    Set swFeat = swSelMgr.<b>GetSelectedObject5</b>(1)
    Set swSketch = swFeat.<b>GetSpecificFeature2</b></pre>
<pre>    Debug.Print &quot;Feature = &quot; &amp; swFeat.<b>Name</b></pre>
<pre>    For i = 0 To 22
        nRetVal = swSketch.<b>CheckFeatureUse</b>(i, nOpenCount, nClosedCount)</pre>
<pre>        Debug.Print &quot;  FeatCheckType  = &quot; &amp; i
        Debug.Print &quot;    RetVal       = &quot; &amp; nRetVal
        Debug.Print &quot;    OpenCount    = &quot; &amp; nOpenCount
        Debug.Print &quot;    ClosedCount  = &quot; &amp; nClosedCount
        Debug.Print &quot;&quot;</pre>
<pre>    Next i</pre>
<pre>    Debug.Print &quot;&quot;</pre>
<pre>End Sub</pre>

</body>

</html>
