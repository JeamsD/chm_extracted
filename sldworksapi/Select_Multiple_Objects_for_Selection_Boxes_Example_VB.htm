<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Select Multiple Objects for Selection Boxes Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta NAME=MS-HAID CONTENT=EXCreatePropertyManagerPage>
<meta name=MS-HKWD content="VBA examples,PropertyManager pages">
<meta name=MS-HKWD content="VBA examples,selections">
<meta name=MS-HKWD content="VBA examples,selection boxes">
<meta name=MS-HKWD content="VBA examples,multiselect">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=6937>
<meta name=layout-width content=910>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;"><a name="Top"></a>SOLIDWORKS API 
 Help</span></h1>

<h1>Select Multiple Objects for Selection Boxes Example (VBA)</h1>

<p style="font-weight: normal;">This example shows how to select multiple 
objects and add the selected objects to different selection boxes on a 
PropertyManager page.</p>

<p class=APICODE><font size="2">'--------------------------------------------------------------------------<br>
' Preconditions:<br>
' <!--kadov_tag{{<spaces>}}--><!--kadov_tag{{</spaces>}}-->1. 
 Copy <a href="#Modules">Modules - main</a> to your project.<br>
' <!--kadov_tag{{<spaces>}}-->2. 
 Insert a class module and copy <a href="#ClassModules">Class Modules - clsPropMgr</a> to that 
module.<br>
' 3. Rename the class module to <b>clsPropMgr</b>.<br>
' <!--kadov_tag{{<spaces>}}-->3. 
 Add <b>swpublished.tlb</b> to your project (click </font> <span style="font-weight: bold;">
<font size="2">Tools 
 &gt; References &gt; <br>
' <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->SOLIDWORKS</font></span><font size="2"> 
 <span style="font-style: italic;">version</span> <span style="font-weight: bold;">exposed 
 type libraries for add-in use</span></font><span><font size="2">).<br>
' 4. Verify that the specified assembly exists.<br>
</font></span><font size="2">'<br>
' Postconditions:<br>
</font>' 1. Opens the assembly.<br>
' 2. Creates a PropertyManager page.<br>
' 3. Examine the PropertyManager page and verify that three selected faces <br>
'&nbsp;&nbsp;&nbsp; appear in the top selection box and two selected faces 
appear in the <br>
'&nbsp;&nbsp;&nbsp; bottom selection box.<br>
' 4. Close the PropertyManager page.<br>
'<font size="2"><br>
' NOTE: Because the assembly document is used 
elsewhere, 
<br>
' <!--kadov_tag{{<spaces>}}-->do not save changes.<br>
'----------------------------------------------------------------------------</font></p>

<p class=APICODE><a name=Modules><font size="2"></font></a><font size="2">
'Modules - main</font></p>

<pre>Option Explicit</pre>
<pre>Public swApp As SldWorks.SldWorks
Public swModel As SldWorks.ModelDoc2
Public swModelDocExt As SldWorks.ModelDocExtension
Public swSelectionMgr As SldWorks.SelectionMgr
Public pm As clsPropMgr
Public mark As Long
Public mark2 As Long</pre>
<pre>Sub main()</pre>
<pre>    Dim openDocErrors As Long
    Dim OpenDocWarnings As Long
    Dim nbrSelections As Long
    Dim selections1(2) As SldWorks.Face2
    Dim selections2(1) As SldWorks.Face2
    Dim i As Long
    Dim j As Long
    Dim status As Boolean
    Dim fileName As String
    </pre>
<pre>    'Set the marks for the selections and selection boxes
    mark = 1
    mark2 = 2</pre>
<pre>    Set swApp = Application.SldWorks
    fileName = &quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\advdrawings\bladed shaft.sldasm&quot;
    Set swModel = swApp.<b>OpenDoc6</b>(fileName, swDocASSEMBLY, swOpenDocOptions_Silent, &quot;&quot;, openDocErrors, OpenDocWarnings)
    Set swModelDocExt = swModel.<b>Extension</b>
    Set swSelectionMgr = swModel.<b>SelectionManager</b>
    </pre>
<pre>    'Create a new instance of the PropertyManager class
    Set pm = New clsPropMgr
    pm.Show
    </pre>
<pre>    'Selections for top selection box
    status = swModelDocExt.<b>SelectByID2</b>(&quot;&quot;, &quot;FACE&quot;, 3.69805475952489E-03, 9.01975482463513E-02, 3.15907187808762E-03, True, mark, Nothing, 0)
    status = swModelDocExt.<b>SelectByID2</b>(&quot;&quot;, &quot;FACE&quot;, 8.60570843923369E-03, 7.37431971170679E-02, 3.9892160950501E-03, True, mark, Nothing, 0)
    status = swModelDocExt.<b>SelectByID2</b>(&quot;&quot;, &quot;FACE&quot;, 1.00013029872912E-02, 4.46884591512742E-02, 9.96173127262523E-03, True, mark, Nothing, 0)
    nbrSelections = swSelectionMgr.<b>GetSelectedObjectCount2</b>(-1)
    nbrSelections = nbrSelections - 1
    For i = 0 To nbrSelections
      Set selections1(i) = swSelectionMgr.<b>GetSelectedObject6</b>(i + 1, -1)
    Next</pre>
<pre>    swModel.ClearSelection2 True  
       
    'Selections for bottom selection box
    status = swModelDocExt.<b>SelectByID2</b>(&quot;&quot;, &quot;FACE&quot;, -2.64206017159268E-02, -3.42602957275062E-03, 9.87615560137556E-03, True, mark2, Nothing, 0)
    status = swModelDocExt.<b>SelectByID2</b>(&quot;&quot;, &quot;FACE&quot;, -1.28130257782288E-03, -3.54158999988385E-03, 1.77003152412567E-02, True, mark2, Nothing, 0)
    nbrSelections = swSelectionMgr.<b>GetSelectedObjectCount2</b>(-1)
    nbrSelections = nbrSelections - 1
    For j = 0 To nbrSelections
      Set selections2(j) = swSelectionMgr.<b>GetSelectedObject6</b>(j + 1, -1)
    Next</pre>
<pre>    swModel.<b>ClearSelection2</b> True</pre>
<pre>    'Populate selection boxes
    SelectBoxFaces1 selections1, mark</pre>
<pre>    SelectBoxFaces2 selections2, mark2
 </pre>
<pre>End Sub</pre>
<pre>Private Sub SelectBoxFaces1(selections() As SldWorks.Face2, selectionBoxMark)</pre>
<pre>    Dim swSelectData As SldWorks.SelectData
    Set swSelectData = swSelectionMgr.<b>CreateSelectData</b>
    swSelectData.<b>mark</b> = selectionBoxMark
    swModelDocExt.<b>MultiSelect2</b> selections, True, swSelectData</pre>
<pre>End Sub</pre>
<pre>Private Sub SelectBoxFaces2(selections() As SldWorks.Face2, selectionBoxMark)</pre>
<pre>    Dim swSelectData As SldWorks.SelectData
    Set swSelectData = swSelectionMgr.<b>CreateSelectData</b>
    swSelectData.<b>mark</b> = selectionBoxMark
    swModelDocExt.<b>MultiSelect2</b> selections, True, swSelectData</pre>
<pre>End Sub</pre>
<p align="center"><a href="#Top">Back to top</a></p>

<p class=APICODE>&nbsp;</p>

<p class="APICODE"><a name=ClassModules><font size="2"></font></a>
<font size="2">'Class Modules - clsPropMgr</font></p>

<pre>Option Explicit</pre>
<pre>'Required for PropertyManager page controls
Implements PropertyManagerPage2Handler9</pre>
<pre>'General objects required for the PropertyManager page
Dim pm_Page As PropertyManagerPage2
Dim pm_Group As PropertyManagerPageGroup
Dim pm_Selection As PropertyManagerPageSelectionbox
Dim pm_Selection2 As PropertyManagerPageSelectionbox</pre>
<pre>'Each object in the PropertyManager page needs a unique ID
Const GroupID As Long = 1
Const LabelID As Long = 2
Const SelectionID As Long = 3
Const ComboID As Long = 4
Const ListID As Long = 5
Const Selection2ID As Long = 6</pre>
<pre>Dim ClickedCancel As Boolean
Dim retVal As Long</pre>
<pre>Sub Show()
  pm_Page.Show2 0
End Sub
 
</pre>
<pre>'The following runs when a new instance
'of the class is created
Private Sub Class_Initialize()</pre>
<pre>Dim PageTitle As String
Dim caption As String
Dim tip As String
Dim options As Long
Dim longerrors As Long
Dim controlType As Long
Dim alignment As Long
</pre>
<pre>'Set the variables for the PropertyManager page
PageTitle = &quot;MultiSelect2 Test&quot;
options = swPropertyManager_OkayButton + swPropertyManager_CancelButton + swPropertyManagerOptions_PushpinButton
 </pre>
<pre>'Create the PropertyManager page
Set pm_Page = swApp.<b>CreatePropertyManagerPage</b>(PageTitle, options, Me, longerrors)
</pre>
<pre>'Make sure that the PropertyManager page was created properly
If longerrors = swPropertyManagerPage_Okay Then</pre>
<pre>    'Begin adding the controls to the PropertyManager page</pre>
<pre>    'Create the group box
     caption = &quot;&quot;
     options = swGroupBoxOptions_Visible + swGroupBoxOptions_Expanded</pre>
<pre>     Set pm_Group = pm_Page.<b>AddGroupBox</b>(GroupID, caption, options)</pre>
<pre>    'Create selection boxes
     controlType = swControlType_Selectionbox
     caption = &quot;&quot;  ' No caption for selection box
     alignment = swControlAlign_Indent
     options = swControlOptions_Visible + swControlOptions_Enabled
     tip = &quot;Select multiple faces.&quot;
      </pre>
<pre>     Set pm_Selection = pm_Group.<b>AddControl</b>(SelectionID, controlType, caption, alignment, options, tip)
     Set pm_Selection2 = pm_Group.<b>AddControl</b>(Selection2ID, controlType, caption, alignment, options, tip)</pre>
<pre>     'Only faces can populate the selection boxes
     Dim filters(0) As Long
     filters(0) = swSelFACES     </pre>
<pre>      
     pm_Selection.<b>SingleEntityOnly</b> = False
     pm_Selection.<b>AllowMultipleSelectOfSameEntity</b> = True
     pm_Selection.<b>Height</b> = 50
     pm_Selection.<b>SetSelectionFilters</b> filters
     pm_Selection.<b>mark</b> = mark
      </pre>
<pre>     pm_Selection2.<b>SingleEntityOnly</b> = False
     pm_Selection2.<b>AllowMultipleSelectOfSameEntity</b> = True
     pm_Selection2.<b>Height</b> = 50
     pm_Selection2.<b>SetSelectionFilters</b> filters
     pm_Selection2.<b>mark</b> = mark2</pre>
<pre>     
Else  'If the page is not created
    MsgBox &quot;An error occurred while attempting to create the &quot; &amp; &quot;PropertyManager Page&quot;, vbCritical</pre>
<pre>End If
</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>AfterActivation</b>()</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>AfterClose</b>()
    'Destroy the class
    Set pm = Nothing
End Sub</pre>
<pre>Private Function PropertyManagerPage2Handler9_<b>OnActiveXControlCreated</b>(ByVal Id As Long, ByVal status As Boolean) As Long</pre>
<pre>End Function</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnButtonPress</b>(ByVal Id As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnCheckboxCheck</b>(ByVal Id As Long, ByVal Checked As Boolean)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnClose</b>(ByVal Reason As Long)</pre>
<pre>If Reason = swPropertyManagerPageClose_Cancel Then
    'Cancel button was clicked
    ClickedCancel = True
ElseIf Reason = swPropertyManagerPageClose_Okay Then
    'OK button was clicked
    ClickedCancel = False
End If</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnComboboxEditChanged</b>(ByVal Id As Long, ByVal Text As String)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnComboboxSelectionChanged</b>(ByVal Id As Long, ByVal Item As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnGroupCheck</b>(ByVal Id As Long, ByVal Checked As Boolean)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnGroupExpand</b>(ByVal Id As Long, ByVal Expanded As Boolean)</pre>
<pre>End Sub</pre>
<pre>Private Function PropertyManagerPage2Handler9_<b>OnHelp</b>() As Boolean</pre>
<pre>End Function</pre>
<pre>Private Function PropertyManagerPage2Handler9_<b>OnKeystroke</b>(ByVal Wparam As Long, ByVal Message As Long, ByVal Lparam As Long, ByVal Id As Long) As Boolean</pre>
<pre>End Function</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnListboxSelectionChanged</b>(ByVal Id As Long, ByVal Item As Long)</pre>
<pre>End Sub</pre>
<pre>Private Function PropertyManagerPage2Handler9_<b>OnNextPage</b>() As Boolean</pre>
<pre>End Function</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnNumberboxChanged</b>(ByVal Id As Long, ByVal Value As Double)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnOptionCheck</b>(ByVal Id As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnPopupMenuItem</b>(ByVal Id As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnPopupMenuItemUpdate</b>(ByVal Id As Long, retVal As Long)</pre>
<pre>End Sub</pre>
<pre>Private Function PropertyManagerPage2Handler9_<b>OnPreview</b>() As Boolean</pre>
<pre>End Function</pre>
<pre>Private Function PropertyManagerPage2Handler9_<b>OnPreviousPage</b>() As Boolean</pre>
<pre>End Function</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnRedo</b>()</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnSelectionboxCalloutCreated</b>(ByVal Id As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnSelectionboxCalloutDestroyed</b>(ByVal Id As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnSelectionboxFocusChanged</b>(ByVal Id As Long)  </pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnSelectionboxListChanged</b>(ByVal Id As Long, ByVal Count As Long)    </pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnSliderPositionChanged</b>(ByVal Id As Long, ByVal Value As Double)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnSliderTrackingCompleted</b>(ByVal Id As Long, ByVal Value As Double)</pre>
<pre>End Sub</pre>
<pre>Private Function PropertyManagerPage2Handler9_<b>OnSubmitSelection</b>(ByVal Id As Long, ByVal Selection As Object, ByVal SelType As Long, ItemText As String) As Boolean</pre>
<pre>    PropertyManagerPage2Handler9_<b>OnSubmitSelection</b> = True
    Debug.Print (&quot;OnSubmitSelection event fired.&quot;)</pre>
<pre>End Function</pre>
<pre>Private Function PropertyManagerPage2Handler9_<b>OnTabClicked</b>(ByVal Id As Long) As Boolean</pre>
<pre>End Function</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnTextboxChanged</b>(ByVal Id As Long, ByVal Text As String)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnUndo</b>()</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnWhatsNe</b>w()</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnLostFocus</b>(ByVal Id As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler9_<b>OnGainedFocus</b>(ByVal Id As Long)
   </pre>
<pre>End Sub
</pre>
<pre>Public Sub PropertyManagerPage2Handler9_<b>OnListBoxRMBUp</b>(ByVal Id As Long, ByVal posX As Long, ByVal posY As Long)</pre>
<pre>End Sub</pre>
<pre>Public Function PropertyManagerPage2Handler9_O<b>nWindowFromHandleControlCreated</b>(ByVal Id As Long, ByVal status As Boolean) As Long</pre>
<pre>End Function
 </pre>
<pre>Public Sub PropertyManagerPage2Handler9_<b>OnNumberboxTrackingCompleted</b>(ByVal Id As Long, ByVal Value As Double)</pre>
<pre>End Sub</pre>
<p align="center"><a href="#Top">Back to top</a></p>

</body>

</html>
