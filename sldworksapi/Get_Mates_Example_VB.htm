<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Mates Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2553>
<meta name=layout-width content=955>
<META NAME="MS-HKWD" CONTENT="VBA examples,Inplace mates">
<META NAME="MS-HKWD" CONTENT="VBA examples,mates">



<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1 style="font-weight: normal; font-size: 7.5pt;"><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS 
 API Help</span></h1>

<h1>Get Mates Example (VBA)</h1>

<p>This example shows how to get all of the mates (IMate2 and IMateInPlace 
 objects) in an assembly document. </p>

<pre>'----------------------------------------
' Preconditions:
' 1. Open <i>public_documents</i><b>\samples\tutorial\advdrawings\bladed shaft.sldasm.</b>
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Gets the components and mates.
' 2. Examine the Immediate window.
'-----------------------------------------</pre>
<pre>Option Explicit
</pre>
<pre>Dim swApp As SldWorks.SldWorks
Dim swModel As SldWorks.ModelDoc2
Dim swComponent As SldWorks.Component2
Dim swAssembly As SldWorks.AssemblyDoc
Dim Components As Variant
Dim SingleComponent As Variant
Dim Mates As Variant
Dim SingleMate As Variant
Dim swMate As SldWorks.Mate2
Dim swMateInPlace As SldWorks.MateInPlace
Dim numMateEntities As Long
Dim typeOfMate As Long
Dim i As Long</pre>
<pre>Sub main()</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swAssembly = swModel    </pre>
<pre>    Components = swAssembly.<b>GetComponents</b>(False)
    For Each SingleComponent In Components
        Set swComponent = SingleComponent
        Debug.Print &quot;Name of component: &quot; &amp; swComponent.<b>Name2</b>
        Mates = swComponent.<b>GetMates</b>()
        If (Not IsEmpty(Mates)) Then
            For Each SingleMate In Mates
                If TypeOf SingleMate Is SldWorks.Mate2 Then
                    Set swMate = SingleMate
                    typeOfMate = swMate.<b>Type</b>
                    Select Case typeOfMate
                        Case 0
                            Debug.Print &quot;  Mate type: Coincident&quot;
                        Case 1
                            Debug.Print &quot;  Mate type: Concentric&quot;
                        Case 2
                            Debug.Print &quot;  Mate type: Perpendicular&quot;
                        Case 3
                            Debug.Print &quot;  Mate type: Parallel&quot;
                        Case 4
                            Debug.Print &quot;  Mate type: Tangent&quot;
                        Case 5
                            Debug.Print &quot;  Mate type: Distance&quot;
                        Case 6
                            Debug.Print &quot;  Mate type: Angle&quot;
                        Case 7
                            Debug.Print &quot;  Mate type: Unknown&quot;
                        Case 8
                            Debug.Print &quot;  Mate type: Symmetric&quot;
                        Case 9
                            Debug.Print &quot;  Mate type: CAM follower&quot;
                        Case 10
                            Debug.Print &quot;  Mate type: Gear&quot;
                        Case 11
                            Debug.Print &quot;  Mate type: Width&quot;
                        Case 12
                            Debug.Print &quot;  Mate type: Lock to sketch&quot;
                        Case 13
                            Debug.Print &quot;  Mate type: Rack pinion&quot;
                        Case 14
                            Debug.Print &quot;  Mate type: Max mates&quot;
                        Case 15
                            Debug.Print &quot;  Mate type: Path&quot;
                        Case 16
                            Debug.Print &quot;  Mate type: Lock&quot;
                        Case 17
                            Debug.Print &quot;  Mate type: Screw&quot;
                        Case 18
                            Debug.Print &quot;  Mate type: Linear coupler&quot;
                        Case 19
                            Debug.Print &quot;  Mate type: Universal joint&quot;
                        Case 20
                            Debug.Print &quot;  Mate type: Coordinate&quot;
                        Case 21
                            Debug.Print &quot;  Mate type: Slot&quot;
                        Case 22
                            Debug.Print &quot;  Mate type: Hinge&quot;
                        ' Add new mate types introduced after SOLIDWORKS 2010 FCS here
                    End Select
                End If
                If TypeOf SingleMate Is SldWorks.MateInPlace Then
                    Set swMateInPlace = SingleMate
                    numMateEntities = swMateInPlace.<b>GetMateEntityCount</b>
                    For i = 0 To numMateEntities - 1
                        Debug.Print &quot;  Mate component name: &quot; &amp; swMateInPlace.<b>MateComponentName</b>(i)
                        Debug.Print &quot;    Type of Inplace mate entity: &quot; &amp; swMateInPlace.<b>MateEntityType</b>(i)
                    Next i
                End If
            Next
        End If
        Debug.Print &quot;&quot;
    Next</pre>
<pre>End Sub</pre>

</body>

</html>
