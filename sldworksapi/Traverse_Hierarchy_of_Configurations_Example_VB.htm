<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Traverse Hierarchy of Configurations Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,configurations">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1759>
<meta name=layout-width content=786>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Traverse Hierarchy of Configurations Example (VBA)</h1>

<p>This examples shows how to traverse a hierarchy of configurations.</p>
<pre>'-------------------------------------------
' Preconditions:
' 1. Open a part or assembly.
' 2. Open the Immediate window.
'
' Postconditions: 
' 1. Traverses the configurations and prints
'    each configuration's information to the
'    Immediate window.
' 2. Examine the Immediate window.
'--------------------------------------------
Option Explicit</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim vConfigNameArr As Variant
    Dim vConfigName As Variant
    Dim swConfig As SldWorks.Configuration
    Dim swParentConfig As SldWorks.Configuration
    Dim swConfMgr As SldWorks.ConfigurationManager
    Dim vChildConfigArr As Variant
    Dim vChildConfig  As Variant
    Dim swChildConfig As SldWorks.Configuration    
</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swConfMgr = swModel.<b>ConfigurationManager</b>
    Set swConfig = swConfMgr.<b>ActiveConfiguration</b>
    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b>
    Debug.Print &quot;  Active configuration = &quot; &amp; swConfig.<b>Name</b>
    Debug.Print &quot;&quot;</pre>
<pre>    ' Always at least one configuration exists
    vConfigNameArr = swModel.<b>GetConfigurationNames</b>
    For Each vConfigName In vConfigNameArr
        Set swConfig = swModel.<b>GetConfigurationByName</b>(vConfigName)
        Debug.Print &quot;  Configuration name = &quot; &amp; swConfig.<b>Name</b>
        Debug.Print &quot;    Description = &quot; &amp; swConfig.<b>Description</b>
        Debug.Print &quot;    Comment = &quot; &amp; swConfig.<b>Comment</b>
        Debug.Print &quot;    Use alternate name om BOM? &quot; &amp; swConfig.<b>UseAlternateNameInBOM</b>; &quot;&quot;
        Debug.Print &quot;    Alternate name = &quot; &amp; swConfig.<b>AlternateName</b>
        Debug.Print &quot;    Show child components in BOM? &quot; &amp; swConfig.<b>ShowChildComponentsInBOM</b>
        Debug.Print &quot;    Hide new component models? &quot; &amp; swConfig.<b>HideNewComponentModels</b>
        Debug.Print &quot;    Suppress new component models? &quot; &amp; swConfig.<b>SuppressNewComponentModels</b>
        Debug.Print &quot;    Suppress new features? &quot; &amp; swConfig.<b>SuppressNewFeatures</b>
        Debug.Print &quot;    Stream name = &quot; &amp; swConfig.<b>GetStreamName</b>
        Debug.Print &quot;    Is derived? &quot; &amp; swConfig.<b>IsDerived</b></pre>
<pre>        ' Process parent
        Set swParentConfig = swConfig.<b>GetParent</b></pre>
<pre>        If Not swParentConfig Is Nothing Then
            Debug.Print &quot;      Parent = &quot; &amp; swParentConfig.<b>Name</b>
        End If        
</pre>
<pre>        ' Process children
        vChildConfigArr = swConfig.<b>GetChildren</b>
        If Not IsEmpty(vChildConfigArr) Then
            For Each vChildConfig In vChildConfigArr
                Set swChildConfig = vChildConfig
                Debug.Print &quot;      Child = &quot; &amp; swChildConfig.<b>Name</b>
            Next
        End If
        Debug.Print &quot;&quot;
    Next</pre>
<pre>End Sub</pre>

</body>

</html>
