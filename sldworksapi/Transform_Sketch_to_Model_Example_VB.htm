<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Transform Sketch to Model Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=date content="06 13, 2002 8:18:01 AM">

<meta name=MS-HKWD content="VBA examples,sketches">
<meta name=MS-HKWD content="VBA examples,transforms">
<meta name=MS-HKWD content="VBA examples,models">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1651>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Transform Sketch to Model Example (VBA)</h1>

<p>When a sketch point is created, its x, y, and z location values are in 
relation to the sketch origin. This example shows how to get the sketch point’s coordinates in relation to the 
 model origin using a MathUtility object. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<pre>'-----------------------------------------------------------------------
' Preconditions:
'  1. Open a part.
'  2. Select a sketch.
'
' Postconditions:
'  1. Gets a MathUtility object from the current model document.
'  2. Gets the selected sketch that contains the points whose
'     coordinates to modify.
'  3. Fills n array with all of the points in the sketch.
'  4. Creates a coordinate array with the x, y, and z value sof a sketch point
'     from the sketch-point array.
'  5. Creates a new MathPoint object from the MathUtility object, providing
'     the coordinate array for the location of the MathPoint.
'  6. Gets and displays the model-to-sketch transform for this sketch.
'  7. Click <b>OK</b> to close the message box.
'  8. Calls IMathTransform::Inverse, which provides a MathTransform
'     object from the sketch coordinates to the model coordinates.
'  9. Calls IMathPoint::MulitplyTransform(MathTransform) to move
'     the MathPoint object into the model.
' 10. Displays the point coordinates in relation to the model origin.
' 11. Click <b>OK</b> to close the message box.
'--------------------------------------------------------------------------
Option Explicit</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim selMgr As SldWorks.SelectionMgr
    Dim Model As SldWorks.ModelDoc2
    Dim SketchPoints As Variant
    Dim SketchFeature As SldWorks.Feature
    Dim PointCoords(2) As Double
    Dim MathUtil As SldWorks.MathUtility
    Dim MathTrans As SldWorks.MathTransform
    Dim MathP As SldWorks.MathPoint
    Dim ModelSketchTransform As Variant
</pre>
<pre>Sub main()</pre>
<pre>    'Connect the program to SOLIDWORKS
    Set swApp = CreateObject(&quot;SldWorks.Application&quot;)
    Set Model = swApp.<b>ActiveDoc</b></pre>
<pre>    'Prepare the MathUtility
    Set MathUtil = swApp.<b>GetMathUtility</b></pre>
<pre>    'Get the SelectionMgr
    Set selMgr = Model.<b>SelectionManager</b></pre>
<pre>    'Get the sketch from the SelectionMgr
    Set SketchFeature = selMgr.<b>GetSelectedObject6</b>(1, 0)
    Set SketchFeature = SketchFeature.<b>GetSpecificFeature2</b></pre>
<pre>    'Get the sketch points
    SketchPoints = SketchFeature.<b>GetSketchPoints2</b></pre>
<pre>    'Build a coordinate array from the first point in the sketch
    PointCoords(0) = SketchPoints(0).X
    PointCoords(1) = SketchPoints(0).Y
    PointCoords(2) = SketchPoints(0).Z</pre>
<pre>    'Create the new MathPoint from the sketch point data
    'MathP refers to the point location in the sketch coordinates
    Set MathP = MathUtil.<b>CreatePoint</b>(PointCoords)</pre>
<pre>    'Display the point coordinates in relation to the sketch origin
    SketchPoints = MathP.<b>ArrayData</b>
    MsgBox &quot;Point coordinates in relation to the sketch origin: &quot; &amp; SketchPoints(0) &amp; &quot;, &quot; &amp; SketchPoints(1) &amp; &quot;, &quot; &amp; SketchPoints(2)</pre>
<pre>    'Get the model-to-sketch transform for this sketch
    Set MathTrans = SketchFeature.<b>ModelToSketchTransform</b></pre>
<pre>    'Get the inversion of the transform
    Set MathTrans = MathTrans.<b>Inverse</b></pre>
<pre>    'Multiply the point by the inverse transform
    'MathP now refers to the point location in the model coordinates
    Set MathP = MathP.<b>MultiplyTransform</b>(MathTrans)</pre>
<pre>    'Display the point coordinates in relation to the model origin
    SketchPoints = MathP.<b>ArrayData</b>
    MsgBox &quot;Point coordinates in relation to the model origin: &quot; &amp; SketchPoints(0) &amp; &quot;, &quot; &amp; SketchPoints(1) &amp; &quot;, &quot; &amp; SketchPoints(2)</pre>
<pre>End Sub</pre>

</body>

</html>
