<html>

<head>
<title>Get Library Feature Data Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title></title>
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples, library features">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Get Library Feature Data Example (VBA)</h1>
<p>This example shows how to get data about library features in model 
documents.</p>
<pre>'-------------------------------------------------------------
' Preconditions:
' 1. Open a model document that contains at least one
'    library feature.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Traverses the FeatureManager design tree searching for 
'    library features.
' 2. Gets each library feature's data.
' 3. Inspect the Immediate window.
'-------------------------------------------------------------
Option Explicit 
</pre>
<pre>Dim boolstatus As Boolean
Dim swApp As SldWorks.SldWorks
Dim ModelDoc2 As SldWorks.ModelDoc2
Dim Feature As SldWorks.Feature
Dim NextFeature As SldWorks.Feature
Dim LibraryFeatureData As LibraryFeatureData
Dim placementPlaneType As Long
Dim placementPlane As Object
Dim ConfigurationName As String
Dim vConfigs As Variant
Dim vConfigName As Variant
Dim x As Long
Dim LinkToLibraryPart As Boolean
Dim LocatingDimensionsCount As Long
Dim vLocDimName As Variant
Dim vLocDimVal As Variant
Dim i As Long
Dim bOverrideDimVal As Boolean
Dim SizeDimensionsCount As Long
Dim vSizDimName As Variant
Dim vSizDimVal As Variant
Dim ReferencesCount As Long
Dim vRefType As Variant
Dim vRefName As Variant
Dim vRefs As Variant</pre>
<pre>Sub main()</pre>
<pre>Set swApp = Application.SldWorks
Set ModelDoc2 = swApp.<b>ActiveDoc</b></pre>
<pre>' Traverse the FeatureManager design tree searching for library features
Set Feature = ModelDoc2.<b>FirstFeature</b></pre>
<pre>While Not Feature Is Nothing</pre>
<pre>    'Debug.Print Feature.<b>Name</b>, Feature.<b>GetTypeName</b></pre>
<pre>    ' If feature is a library feature, then get its data; otherwise,
    ' move onto the next feature in the FeatureManager design tree</pre>
<pre>    If Feature.GetTypeName = &quot;LibraryFeature&quot; Then
        Debug.Print &quot;&quot;
        Debug.Print Feature.<b>Name</b>, Feature.<b>GetTypeName</b>
        Set LibraryFeatureData = Feature.<b>GetDefinition</b>
        boolstatus = LibraryFeatureData.<b>AccessSelections</b>(ModelDoc2, Nothing)</pre>
<pre>        ' Access the selections of the library feature that define it
        Debug.Print &quot;LibraryFeatureData.AccessSelections = &quot; &amp; boolstatus</pre>
<pre>        ' Get its placement type
        Set placementPlane = LibraryFeatureData.<b>GetPlacementPlane2</b>(swLibFeatureData_e.swLibFeatureData_PartRespect, placementPlaneType)
        Debug.Print &quot;PlacementPlaneType = &quot; &amp; placementPlaneType
        placementPlane.<b>Select</b> False</pre>
<pre>        ' Get the name of the active library feature configuration
        ConfigurationName = LibraryFeatureData.<b>ConfigurationName</b>
        Debug.Print &quot;ConfigurationName = &quot; &amp; ConfigurationName
                        
</pre>
<pre>        ' Determine if the library feature is linked to
        ' the library feature part
        LinkToLibraryPart = LibraryFeatureData.<b>LinkToLibraryPart</b>
        Debug.Print &quot;LinkToLibraryPart = &quot; &amp; LinkToLibraryPart
        
</pre>
<pre>        ' If the library feature part document is open or
        ' if the library feature is linked to the library feature
        ' part document, then get the names of all of the
        ' library feature configurations; if neither,
        ' then only the name of the active library configuration
        ' is returned
        vConfigs = LibraryFeatureData.<b>GetAllConfigurationNames</b>
        Debug.Print &quot;Configuration names :&quot;</pre>
<pre>        If Not IsEmpty(vConfigs) Then
            For x = LBound(vConfigs) To UBound(vConfigs)
                Debug.Print &quot;  &quot; &amp; vConfigs(x)
            Next x
        End If</pre>
<pre>        ' Get the number of locating dimensions
        LocatingDimensionsCount = LibraryFeatureData.<b>GetDimensionsCount</b>(0)
        Debug.Print &quot;LocatingDimensionsCount = &quot; &amp; LocatingDimensionsCount</pre>
<pre>        ' Get the locating dimensions
        vLocDimVal = LibraryFeatureData.<b>GetDimensions</b>(0, vLocDimName)
        Debug.Print &quot;Locating dimensions :&quot;</pre>
<pre>        If Not IsEmpty(vLocDimName) Then
            For i = LBound(vLocDimName) To UBound(vLocDimName)
                Debug.Print &quot;  &quot; &amp; vLocDimName(i), vLocDimVal(i)
            Next i
        End If</pre>
<pre>        ' Determine if existing dimension values of the library
        ' feature can be overridden
        bOverrideDimVal = LibraryFeatureData.<b>OverrideDimension</b>
        Debug.Print &quot;OverrideDimension = &quot; &amp; bOverrideDimVal</pre>
<pre>        ' Get the number of feature dimensions
        SizeDimensionsCount = LibraryFeatureData.<b>GetDimensionsCount</b>(1)
        Debug.Print &quot;SizeDimensionsCount = &quot; &amp; SizeDimensionsCount</pre>
<pre>        ' Get the feature dimensions
        vSizDimVal = LibraryFeatureData.<b>GetDimensions</b>(1, vSizDimName)
        Debug.Print &quot;Size dimensions :&quot;
        If Not IsEmpty(vSizDimName) Then
            For i = LBound(vSizDimName) To UBound(vSizDimName)</pre>
<pre>                Debug.Print &quot;  &quot; &amp; vSizDimName(i), vSizDimVal(i)
            Next i
        End If</pre>
<pre>        ' Get the number of references
        ReferencesCount = LibraryFeatureData.<b>GetReferencesCount</b>
        Debug.Print &quot;GetReferencesCount = &quot; &amp; ReferencesCount</pre>
<pre>        ' Get the references
        vRefs = LibraryFeatureData.<b>GetReferences3</b>(swLibFeatureData_e.swLibFeatureData_PartRespect, vRefType, vRefName)
        If Not IsEmpty(vRefType) Then
            Debug.Print &quot;Reference types and names: &quot;
            For i = LBound(vRefType) To UBound(vRefType)
                Debug.Print &quot;  &quot; &amp; vRefType(i) &amp; &quot;, &quot; &amp; vRefName(i)
                vRefs(i).<b>Select</b> False
            Next i
        End If</pre>
<pre>        'Release the selections that define the library feature
        LibraryFeatureData.<b>ReleaseSelectionAccess</b></pre>
<pre>    End If</pre>
<pre>    ' Get the next feature until there are no more
    Set NextFeature = Feature.<b>GetNextFeature</b>
    Set Feature = Nothing
    Set Feature = NextFeature
    Set NextFeature = Nothing</pre>
<pre>Wend</pre>
<pre>End Sub</pre>

</body>

</html>
