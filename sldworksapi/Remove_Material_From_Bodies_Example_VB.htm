<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Remove Material Properties From Bodies Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,materials">
<meta name=MS-HKWD content="VBA examples,bodies">
<meta name=MS-HKWD content="VBA examples,appearances">
<meta name=MS-HKWD content="VBA examples,colors">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2713>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Remove Material Properties from Bodies Example (VBA)</h1>

<p>This example shows how to remove materials from bodies in a multibody part. 
This example also works with a part with a single body and an assembly with 
single and multibody components.</p>
<pre>'---------------------------------------------------------------
' Preconditions:
'&nbsp;1.&nbsp;Open&nbsp;<i>public_documents</i><b>\samples\tutorial\multibody\multi_inter.sldprt</b>.<font SIZE="2">
' 2. Expand&nbsp;<b>Solid&nbsp;Bodies(2)</b>&nbsp;&gt;&nbsp;right-click&nbsp;<b>Extrude-Thin1</b>&nbsp;&gt;&nbsp;click&nbsp;
'&nbsp;&nbsp;&nbsp;&nbsp;<b>Appearances</b>&nbsp;&gt;&nbsp;<b>Body</b>&nbsp;&gt;&nbsp;any&nbsp;color&nbsp;in&nbsp;<b>Appearances(color)</b> <b>&gt;</b> <b>OK</b>.</font>
'&nbsp;3.&nbsp;Open&nbsp;the&nbsp;Immediate&nbsp;window.
'
'&nbsp;Postconditions:
'&nbsp;1.&nbsp;Traverses&nbsp;the&nbsp;FeatureManager&nbsp;design&nbsp;tree.
' 2. Removes the color that you applied to <b>Extrude-Thin1</b>.
'&nbsp;3.&nbsp;Examine&nbsp;the&nbsp;Immediate&nbsp;window and graphics area.
'
' NOTE: Because the part is used elsewhere, do not save changes.
'---------------------------------------------------------------
Option Explicit</pre>
<pre>Dim bRet As Boolean</pre>
<pre>Sub ProcessComponent(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swComp As SldWorks.Component2)
    Dim vChildComp As Variant
    Dim swChildComp As SldWorks.Component2
    Dim vBody As Variant
    Dim childComp As Variant  </pre>
<pre>    Debug.Print swComp.<b>Name2</b> &amp; &quot; &lt;&quot; &amp; swComp.<b>ReferencedConfiguration</b> &amp; &quot;&gt;&quot;</pre>
<pre>    ' Solid bodies
    Dim vBodyArr As Variant
    Dim swBody As Body2
    vBodyArr = swComp.<b>GetBodies2</b>(swSolidBody)
    If Not IsEmpty(vBodyArr) Then
        Debug.Print &quot;  Number of bodies: &quot; &amp; UBound(vBodyArr) + 1
        For Each vBody In vBodyArr
            Set swBody = vBody
            Dim vConfigName As Variant
            Debug.Print &quot;    Body name: &quot; &amp; swBody.<b>Name</b>
            vConfigName = swModel.<b>GetConfigurationNames</b>
            bRet = swBody.<b>RemoveMaterialProperty</b>(swThisConfiguration, (vConfigName))
            Debug.Print &quot;      Material removed from body? &quot; &amp; bRet
        Next
    End If</pre>
<pre>    vChildComp = swComp.GetChildren
    For Each childComp In vChildComp
        Set swChildComp = childComp
        ProcessComponent swApp, swModel, swChildComp
    Next</pre>
<pre>End Sub</pre>
<pre>Sub ProcessAssembly(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2)
    Dim swConfigMgr As SldWorks.ConfigurationManager
    Dim swConf As SldWorks.Configuration
    Dim swRootComp As SldWorks.Component2</pre>
<pre>    Set swConfigMgr = swModel.<b>ConfigurationManager</b>
    Set swConf = swConfigMgr.<b>ActiveConfiguration</b>
    Set swRootComp = swConf.<b>GetRootComponent3</b>(True)
    ProcessComponent swApp, swModel, swRootComp</pre>
<pre>End Sub</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swPart As SldWorks.PartDoc
    Dim vBody As Variant
    Dim j As Long</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b></pre>
<pre>    swModel.<b>ClearSelection2</b> True</pre>
<pre>    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b></pre>
<pre>    Select Case swModel.<b>GetType</b>
        Case swDocPART
            Set swPart = swModel
            ' Solid bodies
            Dim vBodyArr As Variant
            Dim swBody As Body2
            vBodyArr = swPart.<b>GetBodies2</b>(swSolidBody, True)</pre>
<pre>            If Not IsEmpty(vBodyArr) Then
                Debug.Print &quot;  Number of bodies: &quot; &amp; UBound(vBodyArr) + 1
                Debug.Print &quot;    Material removed from: &quot;
                j = 1
                For Each vBody In vBodyArr
                    Set swBody = vBody
                    Dim vConfigName As Variant
                    vConfigName = swModel.<b>GetConfigurationNames</b>
                    bRet = swBody.<b>RemoveMaterialProperty</b>(swAllConfiguration, (vConfigName))
                    Debug.Print &quot;      Body &quot; &amp; j &amp; &quot;? &quot; &amp; bRet
                    j = j + 1
                Next
            End If
        Case swDocASSEMBLY
            ProcessAssembly swApp, swModel
        Case Else
            Exit Sub
    End Select</pre>
<pre>End Sub</pre>

</body>

</html>
