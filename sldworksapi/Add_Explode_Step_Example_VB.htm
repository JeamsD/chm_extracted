<html>

<head>
<title>Add Explode Step Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples,assemblies">
<meta name=MS-HKWD content="VBA examples,explode steps">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Add Regular Explode Step Example (VBA)</h1>
<p>This example shows how to add a regular (translate and rotate) explode step to an explode view.</p>

<p class="APICODE">
'-----------------------------------------------------------------------------<br>
' Preconditions: <br>
' 1. Open <font face="Courier New" size="2">
<i>public_documents</i></font><b>\samples\tutorial\api\RegularExplodeStep.sldasm</b>.<br>
' 2. Open an Immediate window.<br>
'<br>
' Postconditions:<br>
' 1. Creates an explode view.<br>
' 2. Deletes the first explode step.<br>
' 3. Adds a regular explode step.<br>
' 4. Inspect the Immediate window and the graphics area.<br>
'<br>
' Note: Because the model is used elsewhere, do not save any changes.<br>
'----------------------------------------------------------------------------</p>
<p class="APICODE">Option Explicit</p>
<p class="APICODE">Dim swApp As SldWorks.SldWorks<br>
Dim swModel As SldWorks.AssemblyDoc<br>
Dim config As SldWorks.Configuration<br>
Dim swMdl As SldWorks.ModelDoc2<br>
Dim explStep As SldWorks.ExplodeStep<br>
Dim num As Double<br>
Dim comp As SldWorks.Component2<br>
Dim var As Variant<br>
Dim transDir As SldWorks.Edge<br>
Dim angleDir As SldWorks.Feature<br>
Dim obj As SldWorks.Component2<br>
Dim steps As Variant<br>
Dim nestedStep As SldWorks.ExplodeStep<br>
Dim boolstatus As Boolean<br>
Dim i As Long, j As Long<br>
Dim errCode As Long<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">Sub main()</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swApp = Application.SldWorks<br>
&nbsp;&nbsp;&nbsp; Set swModel = swApp.<b>ActiveDoc</b><br>
&nbsp;&nbsp;&nbsp; Set config = swModel.<b>ConfigurationManager</b>.<b>ActiveConfiguration</b><br>
&nbsp;&nbsp;&nbsp; Set swMdl = swModel<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Call swModel.<b>AutoExplode</b><br>
&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set explStep = config.<b>GetExplodeStep</b>(0)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'If the first step is a subassembly 
explode step, get the nested explode steps<br>
&nbsp;&nbsp;&nbsp; If explStep.<b>ExplodeStepType</b> = 
swAssemblyExplodeStepType_SubAssembly Then</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Debug.Print &quot;&nbsp; Subassembly explode step&quot; &amp; explStep.<b>Name</b></p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
steps = explStep.<b>GetSubAssemblyExplodeSteps</b>()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
For j = 0 To UBound(steps)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Set nestedStep = steps(j)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Debug.Print &quot;&nbsp;&nbsp;&nbsp; Name: &quot; &amp; nestedStep.<b>Name</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Debug.Print &quot;&nbsp;&nbsp;&nbsp; Explode distance: &quot; &amp; nestedStep.<b>ExplodeDistance<br>
</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Debug.Print &quot;&nbsp;&nbsp;&nbsp; Explode rotation angle:&nbsp; &quot; &amp; nestedStep.<b>RotationAngle</b></p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Next</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp; End If</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; config.<b>DeleteExplodeStep</b> (explStep.<b>Name</b>)<br>
<br>
&nbsp;&nbsp;&nbsp; 'Select the components to move</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; boolstatus = swModel.<b>Extension</b>.<b>SelectByID2</b>(&quot;Testimo1-2@RegularExplodeStep&quot;, &quot;COMPONENT&quot;, 0, 0, 0, 
True, 1, Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; boolstatus = swModel.<b>Extension</b>.<b>SelectByID2</b>(&quot;Testimo1-3@RegularExplodeStep&quot;, &quot;COMPONENT&quot;, 0, 0, 0, 
True, 1, Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; boolstatus = swModel.<b>Extension</b>.<b>SelectByID2</b>(&quot;Testimo1-4@RegularExplodeStep&quot;, &quot;COMPONENT&quot;, 0, 0, 0, 
True, 1, Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; 'Select the axis of explode direction<br>
&nbsp;&nbsp;&nbsp; boolstatus = swModel.<b>Extension</b>.<b>SelectByRay</b>(9.95048714770577E-02, 
0.104317306113359, 5.68280010933222E-02, -2.53410890435057E-03, 
-0.389900775392565, 0.920853388786911, 6.25890574839405E-03, 1, True, 2, 0)<br>
&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; num = 3.1415 / 3<br>
&nbsp;&nbsp;&nbsp; Set explStep = config.<b>AddExplodeStep2</b>(0.5, 
-1, True, num, -1, True, False, True, errCode)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Call swMdl.<b>EditRebuild3</b><br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; var = explStep.<b>GetComponents</b>()<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Explode step: &quot; &amp; explStep.<b>Name</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Explode distance (m): &quot; &amp; explStep.<b>ExplodeDistance</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Explode step type as defined in 
swAssemblyExplodeStepType_e: &quot; &amp; explStep.<b>ExplodeStepType</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Rotation angle (rad): &quot; &amp; explStep.<b>RotationAngle</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Reverse rotation direction? &quot; &amp; explStep.<b>ReverseRotationDirection</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Reverse translation direction? &quot; &amp; explStep.<b>ReverseTranslationDirection</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Rotate about each component's origin? &quot; &amp; 
explStep.<b>RotateAboutEachComponentOrigin<br>
&nbsp;&nbsp;&nbsp; </b>Debug.Print &quot;Automatically space components on drag? &quot; &amp; explStep.<b>AutoSpaceComponentsOnDrag</b><br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;Components to move:&quot;<br>
&nbsp;&nbsp;&nbsp; For i = 0 To UBound(var)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set comp = var(i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; &quot; &amp; comp.<b>Name2</b><br>
&nbsp;&nbsp;&nbsp; Next<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">End Sub</p>

</body>

</html>
