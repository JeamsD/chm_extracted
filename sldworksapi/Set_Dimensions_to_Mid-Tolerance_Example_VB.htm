<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Set Dimensions to Mid-Tolerance Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">

<meta name=MS-HKWD content="VBA examples,tolerances">
<meta name=MS-HKWD content="VBA examples,dimensions">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=5222>
<meta name=layout-width content=786>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Set Dimensions to Mid-Tolerance Example (VBA)</h1>

<p>This example:</p>
<ul>
	<li><font face="Verdana" style="font-size: 8pt">shows how to iterate over 
	all dimensions in a part and set each dimension with tolerance to the middle of 
	the 
	tolerance range. </font></li>
	<li><font face="Verdana" style="font-size: 8pt">does not analyze the overall 
	effect of varying tolerances. </font></li>
</ul>
<pre>'---------------------------------------------------
' Preconditions:
' 1. Open a part that has tolerances set.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Creates a derived configuration based on the current
'    configuration.
' 2. Makes the derived configuration the active configuration.
' 3. Sets all dimensions in the derived configuration with tolerances
'    to mid-tolerance.
' 4. Removes all tolerances from the dimensions.
' 5. Examine the Immediate window.
'---------------------------------------------------------------------------
Option Explicit</pre>
<pre>Function GetDimFactor(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swDim As SldWorks.Dimension) As Double
    Const PI                    As Double = 3.14159265
    Const LEN_FACTOR            As Double = 1000#
    Const ANG_FACTOR            As Double = 180# / PI</pre>
<pre>    Select Case swDim.GetType
        Case swDimensionParamTypeDoubleLinear
            GetDimFactor = LEN_FACTOR
        Case swDimensionParamTypeDoubleAngular
            GetDimFactor = ANG_FACTOR
        Case Else
            Debug.Assert False
    End Select
End Function</pre>
<pre>Function GetDimString(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swDim As SldWorks.Dimension) As String
    Const LEN_STR               As String = &quot; mm&quot;
    Const ANG_STR               As String = &quot; deg&quot;</pre>
<pre>    Select Case swDim.GetType
        Case swDimensionParamTypeDoubleLinear
            GetDimString = LEN_STR
        Case swDimensionParamTypeDoubleAngular
            GetDimString = ANG_STR
        Case Else
            Debug.Assert False
    End Select
End Function</pre>
<pre>Sub SetDimensionToMidTolerance(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swDim As SldWorks.Dimension)
    Dim nRetval                 As Long
    Dim nDimFactor              As Double
    Dim sDimStr                 As String
    Dim vTolVal                 As Variant
    Dim nOldVal                 As Double
    Dim nNewVal                 As Double
    Dim bRet                    As Boolean
    If swDimensionDriving &lt;&gt; swDim.<b>DrivenState</b> Or swDim.<b>ReadOnly</b> Then
        Exit Sub
    End If</pre>
<pre>    ' Might have tolerance values stored from
    ' previous tolerance type, so check current
    ' tolerance type first
    If swTolNONE = swDim.<b>GetToleranceType</b> Then
        Exit Sub
    End If</pre>
<pre>    ' Mid-tolerance cannot make sense for a MIN/MAX or symmetric tolerance
    If swTolMIN = swDim.<b>GetToleranceType</b> Or swTolMAX = swDim.<b>GetToleranceType </b>Or swTolSYMMETRIC = swDim.<b>GetToleranceType</b> Then
        Exit Sub
    End If</pre>
<pre>    vTolVal = swDim.<b>GetToleranceValues</b>
    If IsEmpty(vTolVal) Then
        Exit Sub
    End If</pre>
<pre>    nDimFactor = GetDimFactor(swApp, swModel, swDim)
    sDimStr = GetDimString(swApp, swModel, swDim)</pre>
<pre>    nOldVal = swDim.<b>GetSystemValue2</b>(&quot;&quot;)
    nNewVal = nOldVal + (vTolVal(0) + vTolVal(1)) / 2#
    Debug.Print &quot;    --&gt;&quot;
    Debug.Print &quot;      Old Value    = &quot; &amp; nOldVal * nDimFactor &amp; sDimStr
    Debug.Print &quot;      New Value    = &quot; &amp; nNewVal * nDimFactor &amp; sDimStr
    nRetval = swDim.<b>SetSystemValue3</b>(nNewVal, swSetValue_InThisConfiguration, Empty): Debug.Assert swSetValue_Successful = nRetval
    
</pre>
<pre>    ' Changed to mid tolerance, so remove tolerance;
    ' otherwise, change dimension when run again
    bRet = swDim.<b>SetToleranceType</b>(swTolNONE): Debug.Assert bRet
End Sub</pre>
<pre>Sub ProcessDimension(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swDim As SldWorks.Dimension)
    Dim nDimFactor              As Double
    Dim sDimStr                 As String
    Dim vTolVal                 As Variant
    Dim bRet                    As Boolean</pre>
<pre>    nDimFactor = GetDimFactor(swApp, swModel, swDim)
    sDimStr = GetDimString(swApp, swModel, swDim)</pre>
<pre>    Debug.Print &quot;    &quot; &amp; swDim.FullName
    Debug.Print &quot;      Value        = &quot; &amp; swDim.<b>GetSystemValue2</b>(&quot;&quot;) * nDimFactor &amp; sDimStr
    Debug.Print &quot;      Driven       = &quot; &amp; swDim.<b>DrivenState</b>
    Debug.Print &quot;      ReadOnly     = &quot; &amp; swDim.<b>ReadOnly</b></pre>
<pre>    vTolVal = swDim.<b>GetToleranceValues</b>
    If IsEmpty(vTolVal) Then
        Debug.Print &quot;      No tolerance information&quot;
        Exit Sub
    End If</pre>
<pre>    Debug.Print &quot;      TolType      = &quot; &amp; swDim.<b>GetToleranceType</b>
    Debug.Print &quot;      FitType      = &quot; &amp; swDim.<b>GetToleranceFitValues</b>
    Debug.Print &quot;      MaxTol       = &quot; &amp; vTolVal(1) * nDimFactor &amp; sDimStr
    Debug.Print &quot;      MinTol       = &quot; &amp; vTolVal(0) * nDimFactor &amp; sDimStr
End Sub</pre>
<pre>Sub ProcessMassProps(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2)
    Dim swDocExt                As SldWorks.ModelDocExtension
    Dim swMass                  As SldWorks.MassProperty</pre>
<pre>    Set swDocExt = swModel.<b>Extension</b>
    Set swMass = swDocExt.<b>CreateMassProperty</b>
    Debug.Print &quot;    Mass             = &quot; &amp; swMass.<b>Mass</b> * 1000# &amp; &quot; g&quot;
    Debug.Print &quot;    Surface Area     = &quot; &amp; swMass.<b>SurfaceArea</b> * 1000000# &amp; &quot; mm^2&quot;
    Debug.Print &quot;    Volume           = &quot; &amp; swMass.<b>Volume</b> * 1000000000# &amp; &quot; mm^3&quot;
    Debug.Print &quot;    Density          = &quot; &amp; swMass.<b>Density</b> &amp; &quot; kg/m^3&quot;
    Debug.Print &quot;    CenterOfMass     = (&quot; &amp; swMass.<b>CenterOfMass</b>(0) * 1000# &amp; &quot;, &quot; &amp; swMass.<b>CenterOfMass</b>(1) * 1000# &amp; &quot;, &quot; &amp; swMass.<b>CenterOfMass</b>(2) * 1000# &amp; &quot;) mm&quot;
End Sub</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp                   As SldWorks.SldWorks
    Dim swModel                 As SldWorks.ModelDoc2
    Dim swConf                  As SldWorks.Configuration
    Dim swMidConf               As SldWorks.Configuration
    Dim swConfMgr               As SldWorks.ConfigurationManager
    Dim swFeat                  As SldWorks.Feature
    Dim swDispDim               As SldWorks.DisplayDimension
    Dim swDim                   As SldWorks.Dimension
    Dim bRet                    As Boolean</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swConf = swModel.<b>GetActiveConfiguration</b>
    Set swConfMgr = swModel.<b>ConfigurationManager</b>
    Set swMidConf = swConfMgr.<b>AddConfiguration</b>(swConf.Name &amp; &quot; - mid tolerance&quot;, &quot;mid tolerance&quot;, &quot;mid tolerance&quot;, 1, swConf.<b>Name</b>, &quot;mid tolerance&quot;): Debug.Assert Not swMidConf Is Nothing
    Set swFeat = swModel.<b>FirstFeature</b>
    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b>
    Debug.Print &quot;  Nominal Tolerance:&quot;
    ProcessMassProps swApp, swModel
    Debug.Print &quot;  -----------------------------&quot;</pre>
<pre>    Do While Not swFeat Is Nothing
        Debug.Print &quot;  &quot; &amp; swFeat.<b>Name</b>
        Set swDispDim = swFeat.<b>GetFirstDisplayDimension</b>
        Do While Not swDispDim Is Nothing
            Set swDim = swDispDim.<b>GetDimension</b>
            ProcessDimension swApp, swModel, swDim
            SetDimensionToMidTolerance swApp, swModel, swDim
            Set swDispDim = swFeat.<b>GetNextDisplayDimension</b>(swDispDim)
        Loop
        Set swFeat = swFeat.<b>GetNextFeature</b>
    Loop</pre>
<pre>    bRet = swModel.<b>ForceRebuild3</b>(False): Debug.Assert bRet
    </pre>
<pre>    Debug.Print &quot;  Middle Tolerance:&quot;
    ProcessMassProps swApp, swModel
    Debug.Print &quot;  -----------------------------&quot;

End Sub</pre>
<pre> </pre>

</body>

</html>
