<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Rotate Assembly Component on Axis Using IDragOperator::Drag Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,components">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2673>
<meta name=layout-width content=786>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Rotate Assembly Component on Axis Using IDragOperator::Drag Example 
 (VBA)</h1>

<p>This example shows how to rotate an assembly component about an assembly 
 axis using IDragOperator::Drag. </p>
<p><b>NOTE: </b>The code shows how to use a MathUtility object to directly create a 
transformation matrix (object) that represents rotation about a point and an 
axis, without having to know details of the OpenGL transformations.</p>
<pre>'------------------------------------------------------------------
' Preconditions: Verify that the specified assembly document exists.
'
' Postconditions:
' 1. Opens the specified assembly document, which is fully resolved.
' 2. Selects a floating component.
' 3. Watch the selected component in the graphics area rotate
'    90° about the assembly's x axis.
'
' <b>NOTE</b>: Because this assembly is used elsewhere, do not save any changes.
'------------------------------------------------------------------
Option Explicit</pre>
<pre>Const PI                As Double = 3.14159
Const RadPerDeg         As Double = PI / 180#</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swModelDocExt As SldWorks.ModelDocExtension
    Dim swAssy As SldWorks.AssemblyDoc
    Dim swDragOp As SldWorks.DragOperator
    Dim swSelMgr As SldWorks.SelectionMgr
    Dim swComp As SldWorks.Component2
    Dim swXform As SldWorks.MathTransform
    Dim swMathUtil As SldWorks.MathUtility
    Dim swOriginPt As SldWorks.MathPoint
    Dim swX_Axis As SldWorks.MathVector
    Dim fileName As String
    Dim errors As Long
    Dim warnings As Long
    Dim status As Boolean
    Dim nPts(2) As Double
    Dim vData As Variant
    Dim nNow As Single
    Dim i  As Long
    Dim bRet As Boolean</pre>
<pre>    Set swApp = Application.SldWorks
    fileName = &quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\api\assem2.sldasm&quot;
    Set swModel = swApp.<b>OpenDoc6</b>(fileName, swDocumentTypes_e.swDocASSEMBLY, swOpenDocOptions_e.swOpenDocOptions_Silent, &quot;&quot;, errors, warnings)
    Set swModelDocExt = swModel.<b>Extension</b>
    status = swModelDocExt.<b>SelectByID2</b>(&quot;Part3^Assem2-1@assem2&quot;, &quot;COMPONENT&quot;, 0, 0, 0, False, 0, Nothing, 0)
    Set swAssy = swModel

    Set swDragOp = swAssy.<b>GetDragOperator</b>
    Set swSelMgr = swModel.<b>SelectionManager</b>
    Set swComp = swSelMgr.<b>GetSelectedObjectsComponent2</b>(1)
    Set swMathUtil = swApp.<b>GetMathUtility</b></pre>
<pre>    nPts(0) = 0#
    nPts(1) = 0#
    nPts(2) = 0#
    vData = nPts
    Set swOriginPt = swMathUtil.<b>CreatePoint</b>(vData)</pre>
<pre>    nPts(0) = 1#
    nPts(1) = 0#
    nPts(2) = 0#
    vData = nPts
    Set swX_Axis = swMathUtil.<b>CreateVector</b>(vData)

    ' This is an incremental rotation,
    ' so angle is always the same
    Set swXform = swMathUtil.<b>CreateTransformRotateAxis</b>(swOriginPt, swX_Axis, 1# * RadPerDeg)</pre>
<pre>    bRet = swDragOp.<b>AddComponent</b>(swComp, False)</pre>
<pre>    swDragOp.<b>CollisionDetectionEnabled</b> = False
    swDragOp.<b>DynamicClearanceEnabled</b> = False</pre>
<pre>    ' Axial rotation
    swDragOp.<b>TransformType</b> = 1</pre>
<pre>    ' Solve by relaxation
    swDragOp.<b>DragMode</b> = 2</pre>
<pre>    bRet = swDragOp.<b>BeginDrag</b></pre>
<pre>    For i = 0 To 90
        ' Returns false if drag fails
        bRet = swDragOp.<b>Drag</b>(swXform)
        ' Wait for 0.1 secs
        nNow = Timer
        While Timer &lt; nNow + 0.1
            ' Process event loop
            DoEvents
        Wend
    Next i</pre>
<pre>    bRet = swDragOp.<b>EndDrag</b></pre>
<pre>End Sub</pre>

</body>

</html>
