<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Check Bodies for Faults Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2645>
<meta name=layout-width content=723>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">
<META NAME="MS-HKWD" CONTENT="VBA examples,bodies">
<META NAME="MS-HKWD" CONTENT="VBA examples,faults">
</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Check Bodies for Faults Example (VBA)</h1>

<p>This example shows how to check the solid and sheet bodies in a part for faults.</p>
<pre>'--------------------------------------------------
' Preconditions:
' 1. Open a part document.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Checks the bodies in the part document.
' 2. Examine the Immediate window.
'--------------------------------------------------
Option Explicit
</pre>
<pre>Sub ProcessFaultEntity(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swFaultEnt As SldWorks.FaultEntity)
    Dim nCount As Long
    Dim swEnt As SldWorks.Entity
    Dim bRet As Boolean
    Dim i  As Long</pre>
<pre>    nCount = swFaultEnt.<b>Count</b>: If 0 = nCount Then Exit Sub 'Else print the error code for each fault
    For i = 0 To nCount - 1
        Set swEnt = swFaultEnt.<b>Entity</b>(i)
        If Not swEnt Is Nothing Then
            bRet = swEnt.<b>Select4</b>(True, Nothing): Debug.Assert bRet
        End If
        Debug.Print &quot;    Fault[&quot; &amp; i &amp; &quot;] = &quot; &amp; swFaultEnt.<b>ErrorCode</b>(i)
    Next i
End Sub</pre>
<pre>Sub main()
    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swPart As SldWorks.PartDoc
    Dim vBodyArr As Variant
    Dim vBody As Variant
    Dim swBody As SldWorks.Body2
    Dim nRetval1 As Long
    Dim nRetval2 As Long
    Dim swFaultEnt  As SldWorks.FaultEntity
    Dim i As Long
    Dim bRet As Boolean    </pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swPart = swModel</pre>
<pre>    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b></pre>
<pre>    vBodyArr = swPart.<b>GetBodies2</b>(swAllBodies, True): Debug.Assert Not IsEmpty(vBodyArr)
    For Each vBody In vBodyArr
        Set swBody = vBody
        Set swFaultEnt = swBody.<b>Check3</b>
        Debug.Print &quot;  Body[&quot; &amp; swBody.<b>GetType</b> &amp; &quot;] --&gt; &quot; &amp; swBody.<b>GetSelectionId</b>
        nRetval1 = swBody.<b>Check</b> 'Obsolete method
        nRetval2 = swBody.<b>Check2</b> 'Obsolete method
        Debug.Print &quot;    IBody2::Check (1 if valid; 0 if not) = &quot; &amp; nRetval1
        Debug.Print &quot;    IBody2::Check2(Number of faults) = &quot; &amp; nRetval2
        ProcessFaultEntity swApp, swModel, swFaultEnt
    Next vBody</pre>
<pre>End Sub
</pre>

</body>

</html>
