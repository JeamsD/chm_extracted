<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get x,y,z Locations of Points in Sketch Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,points">
<meta name=MS-HKWD content="VBA examples,sketches">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1849>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Get x,y,z Locations of Points in Sketch Example (VBA)</h1>

<p>This example shows how to get the x, y, and z locations of the points 
 in the selected sketch.</p>

<pre>'---------------------------------------------
' Preconditions:
' 1. Open a part.
' 2. Select a sketch.
' 3. Open the Immediate window.
'
' Postconditions:
' 1. Gets the IDs of the sketch points in the
'    sketch and their model and sketch point
'    x, y, and z locations.
' 2. Examine the Immediate window.
'----------------------------------------------
Option Explicit</pre>
<pre>Sub ProcessSketchPoint(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swSkPt As SldWorks.SketchPoint)
    Dim vID As Variant
    Dim swSketch As SldWorks.Sketch
    Dim swMathUtil As SldWorks.MathUtility
    Dim swXform As SldWorks.MathTransform
    Dim nPt(2) As Double
    Dim vPt As Variant
    Dim swMathPt As SldWorks.MathPoint</pre>
<pre>    Set swSketch = swSkPt.<b>GetSketch</b>
    vID = swSkPt.<b>GetID</b>
    Debug.Print &quot;    ID = [&quot; &amp; vID(0) &amp; &quot;,&quot; &amp; vID(1) &amp; &quot;]&quot;
    If swSketch.<b>Is3D</b> Then
        ' Point is already is in model space
        Debug.Print &quot;      Point (model)    = (&quot; &amp; swSkPt.<b>X</b> * 1000# &amp; &quot;, &quot; &amp; swSkPt.<b>Y</b> * 1000# &amp; &quot;, &quot; &amp; swSkPt.<b>Z</b> * 1000# &amp; &quot;) mm&quot;
    Else
        nPt(0) = swSkPt.<b>X</b>:  nPt(1) = swSkPt.<b>Y</b>:  nPt(2) = swSkPt.<b>Z</b>
        vPt = nPt
        Set swXform = swSketch.<b>ModelToSketchTransform</b>
        Set swXform = swXform.<b>Inverse</b>
        Set swMathUtil = swApp.<b>GetMathUtility</b>
        Set swMathPt = swMathUtil.<b>CreatePoint</b>((vPt))
        Set swMathPt = swMathPt.<b>MultiplyTransform</b>(swXform)
        Debug.Print &quot;      Point (model)    = (&quot; &amp; swMathPt.<b>ArrayData</b>(0) * 1000# &amp; &quot;, &quot; &amp; swMathPt.<b>ArrayData</b>(1) * 1000# &amp; &quot;, &quot; &amp; swMathPt.<b>ArrayData</b>(2) * 1000# &amp; &quot;) mm&quot;
        Debug.Print &quot;      Point (sketch)   = (&quot; &amp; swSkPt.<b>X</b> * 1000# &amp; &quot;, &quot; &amp; swSkPt.<b>Y</b> * 1000# &amp; &quot;, &quot; &amp; swSkPt.<b>Z</b> * 1000# &amp; &quot;) mm&quot;
    End If
End Sub</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swSelMgr As SldWorks.SelectionMgr
    Dim swFeat As SldWorks.Feature
    Dim swSketch As SldWorks.Sketch
    Dim vSkPtArr As Variant
    Dim vSkPt As Variant
    Dim swSkPt As SldWorks.SketchPoint
    Dim i As Long
    Dim bRet As Boolean</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swSelMgr = swModel.<b>SelectionManager</b>
    Set swFeat = swSelMgr.<b>GetSelectedObject6</b>(1, 0)
    Set swSketch = swFeat.<b>GetSpecificFeature2</b>
    Debug.Print &quot;Feature = &quot; &amp; swFeat.<b>Name</b>
    Debug.Print &quot;  Sketch Points:&quot;</pre>
<pre>    vSkPtArr = swSketch.<b>GetSketchPoints2</b>: If IsEmpty(vSkPtArr) Then Exit Sub
    For Each vSkPt In vSkPtArr
        Set swSkPt = vSkPt
        ProcessSketchPoint swApp, swModel, swSkPt
    Next vSkPt</pre>
<pre>End Sub

</pre>

</body>

</html>
