<html>

<head>
<title>Insert Magnetic Line Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples,magnetic lines">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Insert Magnetic Line Example (VBA)</h1>
<p>This example shows how to insert a magnetic line in a drawing sheet.</p>

<p class="APICODE">
'----------------------------------------------------------------------------<br>
' Preconditions:<br>
' 1. Open <i>public_documents</i><b>\samples\tutorial\api\Assem20.slddrw</b>.<br>
' 2. Open the Immediate window.<br>
'<br>
' Postconditions:&nbsp; At each Stop statement, observe the Immediate window<br>
' and drawing, then press F5:<br>
' 1. Inserts a magnetic line.<br>
' 2. Attaches two notes to the magnetic line.<br>
' 3. Detaches one note from the magnetic line.<br>
'<br>
' NOTE: Because the drawing is used elsewhere, do not save changes.<br>
' ---------------------------------------------------------------------------</p>
<p class="APICODE">Dim swApp As SldWorks.SldWorks<br>
Dim Part As SldWorks.ModelDoc2<br>
Dim swDraw As SldWorks.DrawingDoc<br>
Dim swNote As SldWorks.Note<br>
Dim anno As SldWorks.Annotation<br>
Dim MathUtil As SldWorks.MathUtility<br>
Dim StartPoint As SldWorks.MathPoint<br>
Dim EndPoint As SldWorks.MathPoint<br>
Dim NewLocation As SldWorks.MathPoint<br>
Dim MagLine As SldWorks.MagneticLine<br>
Dim startPointArray As Variant<br>
Dim startPointCoords() As Double<br>
Dim endPointArray As Variant<br>
Dim endPointCoords() As Double<br>
Dim myDrawingSheet As SldWorks.Sheet<br>
Dim vAnnPos As Variant<br>
Dim boolstatus As Boolean<br>
Dim swSelMgr As SldWorks.SelectionMgr</p>
<p class="APICODE">Option Explicit<br>
Sub main()</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swApp = Application.SldWorks<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set Part = swApp.ActiveDoc<br>
&nbsp;&nbsp;&nbsp; Set swDraw = Part<br>
&nbsp;&nbsp;&nbsp; Set swSelMgr = Part.SelectionManager<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; boolstatus = 
Part.Extension.SelectByID2(&quot;DetailItem350@Drawing View1&quot;, &quot;NOTE&quot;, 
0.1999417828571, 0.1868875085714, 0, False, 0, Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; Set swNote = swSelMgr.GetSelectedObject6(1, 0)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set MathUtil = swApp.GetMathUtility()<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ReDim startPointCoords(0 To 2) As Double<br>
&nbsp;&nbsp;&nbsp; startPointCoords(0) = 0.00792759673091<br>
&nbsp;&nbsp;&nbsp; startPointCoords(1) = 0.01114535920683<br>
&nbsp;&nbsp;&nbsp; startPointCoords(2) = 0<br>
&nbsp;&nbsp;&nbsp; startPointArray = startPointCoords<br>
&nbsp;&nbsp;&nbsp; Set StartPoint = MathUtil.CreatePoint((startPointArray))<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ReDim endPointCoords(0 To 2) As Double<br>
&nbsp;&nbsp;&nbsp; endPointCoords(0) = 0.2681801120698<br>
&nbsp;&nbsp;&nbsp; endPointCoords(1) = 0.2077950154354<br>
&nbsp;&nbsp;&nbsp; endPointCoords(2) = 0<br>
&nbsp;&nbsp;&nbsp; endPointArray = endPointCoords<br>
&nbsp;&nbsp;&nbsp; Set EndPoint = MathUtil.CreatePoint((endPointArray))<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set myDrawingSheet = Part.GetCurrentSheet()<br>
&nbsp;&nbsp;&nbsp; Stop<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set MagLine = myDrawingSheet.<b>InsertMagneticLine</b>(StartPoint, 
EndPoint)<br>
&nbsp;&nbsp;&nbsp; MagLine.<b>EqualSpacing</b> = True<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Number of magnetic lines on this sheet: &quot; &amp; 
myDrawingSheet.<b>GetMagneticLinesCount</b><br>
&nbsp;&nbsp;&nbsp; Stop<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;First note attached to 
magnetic line? &quot; &amp; MagLine.<b>AddNote</b>(swNote, 0.000001)&nbsp;&nbsp; ' If 
EqualSpacing is True then Position is ignored<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Number of notes attached to the magnetic line: &quot; 
&amp; MagLine.<b>GetNotesCount</b><br>
&nbsp;&nbsp;&nbsp; Stop<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Angle in radians of the 
magnetic line: &quot; &amp; MagLine.<b>Angle</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Length in meters of the magnetic line: &quot; &amp; 
MagLine.<b>Length</b><br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; boolstatus = 
Part.Extension.SelectByID2(&quot;DetailItem352@Drawing View3&quot;, &quot;NOTE&quot;, 
0.1944023085714, 0.1194905714286, 0, False, 0, Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; Set swNote = swSelMgr.GetSelectedObject6(1, 0)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Second note attached to magnetic line? &quot; &amp; 
MagLine.<b>AddNote</b>(swNote, 0.000001)&nbsp; ' This fails because note belongs 
to a different view<br>
&nbsp;&nbsp;&nbsp; Set anno = swNote.GetAnnotation<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Number of notes attached to the magnetic line: &quot; 
&amp; MagLine.<b>GetNotesCount</b><br>
&nbsp;&nbsp;&nbsp; Stop<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; boolstatus = 
Part.Extension.SelectByID2(&quot;DetailItem351@Drawing View1&quot;, &quot;NOTE&quot;, 
0.1944023085714, 0.1194905714286, 0, False, 0, Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; Set swNote = swSelMgr.GetSelectedObject6(1, 0)<br>
&nbsp;&nbsp;&nbsp; Set anno = swNote.GetAnnotation<br>
&nbsp;&nbsp;&nbsp; vAnnPos = anno.GetPosition<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Second note attached to magnetic line? &quot; &amp; 
MagLine.<b>AddNote</b>(swNote, 0.000001)&nbsp; ' This succeeds because note 
belongs to same view as previously added note<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Number of notes attached to the magnetic line: &quot; 
&amp; MagLine.<b>GetNotesCount</b><br>
&nbsp;&nbsp;&nbsp; Stop<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Detach a note from the magnetic line<br>
&nbsp;&nbsp;&nbsp; Set NewLocation = MathUtil.CreatePoint((vAnnPos))<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Note detached from magnetic line? &quot; &amp; MagLine.<b>RemoveNote</b>(swNote, 
NewLocation)&nbsp; ' Move the note to its original position<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Number of notes attached to the magnetic line: &quot; 
&amp; MagLine.<b>GetNotesCount</b></p>
<p class="APICODE">End Sub</p>

</body>

</html>
