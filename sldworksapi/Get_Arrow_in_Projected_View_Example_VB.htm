<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Arrow in Projected View Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,projection arrows">
<meta name=MS-HKWD content="VBA examples,projected views">
<meta name=MS-HKWD content="VBA examples,arrows">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2002>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Get Arrow in Projected View Example (VBA)</h1>

<p>This example shows how to get the arrow in a projected view.</p>
<pre>'---------------------------------------------------------
' Preconditions:
' 1. Open a drawing that has a projected view that contains 
'    an arrow with a label.
' 2. Select that projected view.
' 3. Open the Immediate window.
'
' Postconditions:
' 1. Gets information about the projected view's arrow.
' 2. Examine the Immediate window.
'--------------------------------------------------------
Option Explicit
</pre>
<pre>Sub ProcessTextFormat(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swTextFormat As SldWorks.TextFormat)   
 
    Debug.Print &quot;    BackWards                    = &quot; &amp; swTextFormat.<b>BackWards</b>
    Debug.Print &quot;    Bold                         = &quot; &amp; swTextFormat.<b>Bold</b>
    Debug.Print &quot;    CharHeight                   = &quot; &amp; swTextFormat.<b>CharHeight</b>
    Debug.Print &quot;    CharHeightInPts              = &quot; &amp; swTextFormat.<b>CharHeightInPts</b>
    Debug.Print &quot;    CharSpacingFactor            = &quot; &amp; swTextFormat.<b>CharSpacingFactor</b>
    Debug.Print &quot;    Escapement                   = &quot; &amp; swTextFormat.<b>Escapement</b>
    Debug.Print &quot;    IsHeightSpecifiedInPts       = &quot; &amp; swTextFormat.<b>IsHeightSpecifiedInPts</b>
    Debug.Print &quot;    Italic                       = &quot; &amp; swTextFormat.<b>Italic</b>
    Debug.Print &quot;    LineLength                   = &quot; &amp; swTextFormat.<b>LineLength</b>
    Debug.Print &quot;    LineSpacing                  = &quot; &amp; swTextFormat.<b>LineSpacing</b>
    Debug.Print &quot;    ObliqueAngle                 = &quot; &amp; swTextFormat.<b>ObliqueAngle</b>
    Debug.Print &quot;    Strikeout                    = &quot; &amp; swTextFormat.<b>Strikeout</b>
    Debug.Print &quot;    TypeFaceName                 = &quot; &amp; swTextFormat.<b>TypeFaceName</b>
    Debug.Print &quot;    Underline                    = &quot; &amp; swTextFormat.<b>Underline</b>
    Debug.Print &quot;    UpsideDown                   = &quot; &amp; swTextFormat.<b>UpsideDown</b>
    Debug.Print &quot;    Vertical                     = &quot; &amp; swTextFormat.<b>Vertical</b>
    Debug.Print &quot;    WidthFactor                  = &quot; &amp; swTextFormat.<b>WidthFactor
</b>
    Debug.Print &quot;&quot;
End Sub</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp                       As SldWorks.SldWorks
    Dim swModel                     As SldWorks.ModelDoc2
    Dim swSelMgr                    As SldWorks.SelectionMgr
    Dim swDraw                      As SldWorks.DrawingDoc
    Dim swView                      As SldWorks.View
    Dim swProjArr                   As SldWorks.ProjectionArrow
    Dim swBaseView                  As SldWorks.View
    Dim vCoord                      As Variant
    Dim swTextFormat                As SldWorks.TextFormat
    Dim bRet                        As Boolean    
</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swDraw = swModel
    Set swSelMgr = swModel.<b>SelectionManager</b>
    Set swView = swSelMgr.<b>GetSelectedObject6</b>(1, -1)
    Set swProjArr = swView.<b>GetProjectionArrow</b>
    Set swBaseView = swProjArr.<b>GetView</b>
    Set swTextFormat = swProjArr.<b>GetTextFormat</b></pre>
<pre>    vCoord = swProjArr.<b>GetCoordinates</b></pre>
<pre>    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b>
    Debug.Print &quot;  &quot; &amp; swView.<b>Name </b>&amp;<b> &quot;</b> --&gt; &quot; &amp; swBaseView.<b>Name</b>
    Debug.Print &quot;  Coordinates              = (&quot; &amp; vCoord(0) * 1000# &amp; &quot;, &quot; &amp; vCoord(1) * 1000# &amp; &quot;, &quot; &amp; vCoord(2) * 1000# &amp; &quot;) mm&quot;
    Debug.Print &quot;  Label                    = &quot; &amp; swProjArr.<b>GetLabel</b>
    Debug.Print &quot;  Use document text format = &quot; &amp; swProjArr.<b>GetUseDocTextFormat</b></pre>
<pre>    ProcessTextFormat swApp, swModel, swTextFormat</pre>
<pre>End Sub</pre>

</body>

</html>
