<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Put Assembly Components in Drawing View on Different Layers Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,views">
<meta name=MS-HKWD content="VBA examples,components">
<meta name=MS-HKWD content="VBA examples,layers">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2598>
<meta name=layout-width content=786>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Put Assembly Components in Drawing View on Different Layers Example 
 (VBA)</h1>

<p>This example shows how to put all assembly components in a drawing view 
 on different layers.</p>

<pre>'------------------------------------------------------------
' Preconditions:
' 1. Open a drawing document of an assembly with multiple
'    components.
' 2. Select a drawing view.
' 3. Open the Immediate window.
'
' Postconditions:
' 1. Creates a new drawing layer for each assembly component.
' 2. Puts each component on its own layer.
' 3. To verify, right-click the drawing view selected in
'    Preconditions step 2 and click <b>Change Layer</b> &gt; down-arrow
'    button on the Change document layer dialog.
' 4. Examine the Immediate window.
'
' NOTE: Illegal characters are replaced with legal characters
' when creating a new drawing layer.
'-------------------------------------------------------------
Option Explicit
</pre>
<pre>Private Sub ChangeComponentLayer(swApp As SldWorks.SldWorks, swDraw As SldWorks.DrawingDoc, swDrawComp As SldWorks.DrawingComponent, sLayerName As String)</pre>
<pre>    Dim bRet As Boolean</pre>
<pre>    ' Form a legal layer name by replacing backslash
    '(/) and at sign (@) symbols with underscores
    sLayerName = Replace(sLayerName, &quot;/&quot;, &quot;_&quot;)
    sLayerName = Replace(sLayerName, &quot;@&quot;, &quot;_&quot;)</pre>
<pre>    bRet = swDraw.<b>CreateLayer</b>(sLayerName, &quot;layer for &quot; &amp; sLayerName, 0, swLineCONTINUOUS, swLW_NORMAL, True): Debug.Assert bRet
    swDrawComp.<b>Layer</b> = sLayerName</pre>
<pre>End Sub</pre>
<pre> </pre>
<pre>Sub ProcessDrawingComponent(swApp As SldWorks.SldWorks, swDraw As SldWorks.DrawingDoc, swDrawComp As SldWorks.DrawingComponent, sPadStr As String)</pre>
<pre>    Dim vDrawCompChildArr As Variant
    Dim vDrawCompChild As Variant
    Dim swDrawCompChild As SldWorks.DrawingComponent</pre>
<pre>    Debug.Print sPadStr &amp; swDrawComp.<b>Name</b>
    ChangeComponentLayer swApp, swDraw, swDrawComp, swDrawComp.Name</pre>
<pre>    vDrawCompChildArr = swDrawComp.<b>GetChildren</b>
    If Not IsEmpty(vDrawCompChildArr) Then
        For Each vDrawCompChild In vDrawCompChildArr
            Set swDrawCompChild = vDrawCompChild
            ProcessDrawingComponent swApp, swDraw, swDrawCompChild, sPadStr + &quot;  &quot;
        Next
    End If</pre>
<pre>End Sub</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swDraw As SldWorks.DrawingDoc
    Dim swSelMgr As SldWorks.SelectionMgr
    Dim swView As SldWorks.View
    Dim swDrawComp As SldWorks.DrawingComponent
    Dim bRet As Boolean</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swDraw = swModel
    Set swSelMgr = swModel.<b>SelectionManager</b>
    Set swView = swSelMgr.<b>GetSelectedObject6</b>(1, -1)
    Set swDrawComp = swView.<b>RootDrawingComponent</b></pre>
<pre>    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b>
    Debug.Print &quot;  &quot; &amp; swView.<b>Name</b> &amp; &quot;  [&quot; &amp; swView.<b>Type</b> &amp; &quot;]&quot;</pre>
<pre>    ProcessDrawingComponent swApp, swDraw, swDrawComp, &quot;    &quot;</pre>
<pre>End Sub

</pre>

</body>

</html>
