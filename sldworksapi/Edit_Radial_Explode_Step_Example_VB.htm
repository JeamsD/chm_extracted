<html>

<head>
<title>Edit Radial Explode Step Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples,assemblies">
<meta name=MS-HKWD content="VBA examples,explode steps">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Edit Radial Explode Step Example (VBA)</h1>
<p>This example shows how to edit a radial explode step in an explode view.</p>

<p class="APICODE">
'-----------------------------------------------------------------------------<br>
' Preconditions: <br>
' 1. Open <font face="Courier New" size="2">
<i>public_documents</i></font><b>\samples\tutorial\api\RadialExplodeStep.sldasm</b>.<br>
' 2. Open an Immediate window.<br>
'<br>
' Postconditions:<br>
' 1. Creates and explode view and gets the first explode step.<br>
' 2. Gets the components to move.<br>
' 3. Prints the current properties of the explode step.<br>
' 4. Modifies the explode step properties.<br>
' 5. Re-sets the components to move.<br>
' 6. Re-sets the explode and diverge direction entities.<br>
' 7. Inspect the Immediate window and the graphics area.<br>
'<br>
' Note: Because the model is used elsewhere, do not save any changes.<br>
'----------------------------------------------------------------------------</p>
<p class="APICODE">Option Explicit<br>
Dim swApp As SldWorks.SldWorks<br>
Dim swModel As SldWorks.AssemblyDoc<br>
Dim swMdl As SldWorks.ModelDoc2<br>
Dim explStep As SldWorks.ExplodeStep<br>
Dim config As SldWorks.Configuration<br>
Dim comp As SldWorks.Component2<br>
Dim var As Variant<br>
Dim i As Long<br>
Dim transDir As SldWorks.Feature<br>
Dim divergeDir As SldWorks.Feature<br>
Dim num As Double<br>
Dim selComp(2) As SldWorks.Component2<br>
Dim sel3 As SldWorks.Feature<br>
Dim sel4 As SldWorks.Feature<br>
Dim transDir1 As SldWorks.Edge<br>
Dim divergeDir1 As SldWorks.Feature<br>
Dim boolstatus As Boolean</p>
<p class="APICODE">Sub main()</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swApp = Application.SldWorks<br>
&nbsp;&nbsp;&nbsp; Set swModel = swApp.<b>ActiveDoc</b><br>
&nbsp;&nbsp;&nbsp; Set config = swModel.<b>ConfigurationManager</b>.<b>ActiveConfiguration</b><br>
&nbsp;&nbsp;&nbsp; Set swMdl = swModel<br>
<br>
&nbsp;&nbsp;&nbsp; Call swModel.<b>AutoExplode<br>
</b><br>
&nbsp;&nbsp;&nbsp; Set explStep = config.<b>GetExplodeStep</b>(0)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Pre-Modification&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; var = explStep.<b>GetComponents</b>()<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Components to move:&quot;<br>
&nbsp;&nbsp;&nbsp; For i = 0 To UBound(var)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set comp = var(i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; &quot; &amp; comp.<b>Name2</b><br>
&nbsp;&nbsp;&nbsp; Next<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Diverge from axis? &quot; &amp; 
explStep.<b>DivergeFromAxis</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Explode step: &quot; &amp; explStep.<b>Name</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Explode distance (m): &quot; &amp; explStep.<b>ExplodeDistance</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Explode step type as defined in 
swAssemblyExplodeStepType_e: &quot; &amp; explStep.<b>ExplodeStepType</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Rotation angle (rad): &quot; &amp; explStep.<b>RotationAngle</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Reverse rotation direction? &quot; &amp; explStep.<b>ReverseRotationDirection</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Reverse translation direction? &quot; &amp; explStep.<b>ReverseTranslationDirection</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Rotate about each component's origin? &quot; &amp; 
explStep.<b>RotateAboutEachComponentOrigin</b><br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; Set divergeDir = explStep.<b>DivergeDirection</b><br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; swMdl.<b>ClearSelection2</b> (True)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; num = 3.1415 / 4<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; explStep.<b>DivergeFromAxis</b> = Not 
explStep.<b>DivergeFromAxis</b><br>
&nbsp;&nbsp;&nbsp; explStep.<b>ExplodeDistance</b> = 0.2<br>
&nbsp;&nbsp;&nbsp; explStep.<b>RotationAngle</b> = num<br>
&nbsp;&nbsp;&nbsp; explStep.<b>ReverseRotationDirection</b> = Not explStep.<b>ReverseRotationDirection</b><br>
&nbsp;&nbsp;&nbsp; explStep.<b>ReverseTranslationDirection</b> = Not explStep.<b>ReverseTranslationDirection</b><br>
&nbsp;&nbsp;&nbsp; explStep.<b>RotateAboutEachComponentOrigin</b> = Not 
explStep.<b>RotateAboutEachComponentOrigin</b><br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; swMdl.<b>ClearSelection2</b> (True)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; boolstatus = swMdl.<b>Extension</b>.<b>SelectByID2</b>(&quot;Part2-1@RadialExplodeStep&quot;, &quot;COMPONENT&quot;, 0, 0, 0, True, 1, 
Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; boolstatus = swMdl.<b>Extension</b>.<b>SelectByID2</b>(&quot;Part2-2@RadialExplodeStep&quot;, &quot;COMPONENT&quot;, 0, 0, 0, True, 1, 
Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; boolstatus = swMdl.<b>Extension</b>.<b>SelectByID2</b>(&quot;Part2-3@RadialExplodeStep&quot;, &quot;COMPONENT&quot;, 0, 0, 0, True, 1, 
Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set selComp(0) = swMdl.<b>SelectionManager</b>.<b>GetSelectedObject6</b>(1, 
-1)<br>
&nbsp;&nbsp;&nbsp; Set selComp(1) = swMdl.<b>SelectionManager</b>.<b>GetSelectedObject6</b>(2, 
-1)<br>
&nbsp;&nbsp;&nbsp; Set selComp(2) = swMdl.<b>SelectionManager</b>.<b>GetSelectedObject6</b>(3, 
-1)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Call explStep.<b>SetComponents</b>(selComp)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; boolstatus = swMdl.<b>Extension</b>.<b>SelectByID2</b>(&quot;Axis5&quot;, 
&quot;AXIS&quot;, 0, 0, 0, True, 2 + 32, Nothing, 0) ' Explode direction entity<br>
&nbsp;&nbsp;&nbsp; boolstatus = swMdl.<b>Extension</b>.<b>SelectByID2</b>(&quot;Axis4&quot;, 
&quot;AXIS&quot;, 0, 0, 0, True, 64, Nothing, 0) ' Diverge direction entity<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set sel3 = swMdl.<b>SelectionManager</b>.<b>GetSelectedObject6</b>(1, 
-1)<br>
&nbsp;&nbsp;&nbsp; Set sel4 = swMdl.<b>SelectionManager</b>.<b>GetSelectedObject6</b>(2, 
-1)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; explStep.<b>SetExplodeDirection</b> sel3, 
-1<br>
&nbsp;&nbsp;&nbsp; explStep.<b>DivergeDirection</b> = sel4<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Post-Modification&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; var = explStep.<b>GetComponents</b>()<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Components to move:&quot;<br>
&nbsp;&nbsp;&nbsp; For i = 0 To UBound(var)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set comp = var(i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; &quot; &amp; comp.<b>Name2</b><br>
&nbsp;&nbsp;&nbsp; Next<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Diverge from axis? &quot; &amp; 
explStep.<b>DivergeFromAxis</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Explode step: &quot; &amp; explStep.<b>Name</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Explode distance (m): &quot; &amp; explStep.<b>ExplodeDistance</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Explode step type as defined in 
swAssemblyExplodeStepType_e: &quot; &amp; explStep.<b>ExplodeStepType</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Rotation angle (rad): &quot; &amp; explStep.<b>RotationAngle</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Reverse rotation direction? &quot; &amp; explStep.<b>ReverseRotationDirection</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Reverse translation direction? &quot; &amp; explStep.<b>ReverseTranslationDirection</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Rotate about each component's origin? &quot; &amp; 
explStep.<b>RotateAboutEachComponentOrigin</b><br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; Set divergeDir = explStep.<b>DivergeDirection</b></p>
<p class="APICODE">End Sub</p>

</body>

</html>
