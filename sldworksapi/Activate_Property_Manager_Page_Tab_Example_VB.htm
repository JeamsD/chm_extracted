<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Activate Property Manager Page Tab Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=5299>
<meta name=layout-width content=1214>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">

 <META NAME="MS-HKWD" CONTENT="VBA examples, PropertyManager pages">

</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Activate PropertyManager Page Tab Example (VBA)</h1>

<p><a name="Top"></a>The following code example demonstrates how SOLIDWORKS 
 add-ins can use IPropertyManagerPageTab.Activate to programmatically select 
 a tab on a SOLIDWORKS PropertyManager page. </p>
<pre>'----------------------------------------------------------------------------
' Preconditions:
' 1. Copy and paste <a href="#Main">Main</a> into your macro.
' 2. Click <b>Insert &gt; Class Module</b> and copy and paste <a href="#Class1">Class1 </a>into the module.
' 3. Add a reference to <b>SOLIDWORKS </b><i>&lt;version&gt;</i> <b>exposed type libraries</b>
'    <b>for add-in use</b>.
' 4. Open an assembly that has multiple components.
'
' Postconditions:
' 1. Creates a PropertyManager page called<b> Materials and Dimensions</b>
'    with two tabs: 
'    * Materials
'    * Dimensions
' 2. Selects the Materials tab.
' 3. Examine the PropertyManager page.
'----------------------------------------------------------------------------
<a name="Main"></a>'Main
Option Explicit</pre>
<pre>Public swApp As SldWorks.SldWorks
Public Part As SldWorks.ModelDoc2
Public SelMgr As SldWorks.SelectionMgr
Public pm As Class1
Sub main()</pre>
<pre>    Set swApp = Application.SldWorks
    Set Part = swApp.<b>ActiveDoc</b>
    Set SelMgr = Part.<b>SelectionManager</b>
    </pre>
<pre>    'Create a new instance of the PropertyManager class
    'Calls the Class_Initialize procedure of the class
    Set pm = New Class1
    pm.<b>Show</b></pre>
<pre>End Sub</pre>
<div align="center">
	<pre><a href="#Top">Back to top</a></pre>
</div>
<pre><a name="Class1"></a>'Class1
Option Explicit</pre>
<pre>'Required for PropertyManager page controls
Implements PropertyManagerPage2Handler6
 
</pre>
<pre>'General objects required for the PropertyManager page
Dim pm_Page As PropertyManagerPage2
Dim pm_Page_Tab As PropertyManagerPageTab
Dim pm_Page_Tab_2 As PropertyManagerPageTab
Dim pm_Group As PropertyManagerPageGroup
Dim pm_Selection As PropertyManagerPageSelectionbox
Dim pm_Label As PropertyManagerPageLabel
Dim pm_Combo As PropertyManagerPageCombobox</pre>
<pre>'Each object in the page needs a unique ID
Const GroupID As Integer = 1
Const LabelID As Integer = 2
Const SelectionID As Integer = 3
Const ComboID As Integer = 4
Const Tab1ID As Integer = 1
Const Tab2ID As Integer = 2</pre>
<pre>Dim ClickedCancel As Boolean
Dim density As String
Dim material As String</pre>
<pre>Sub Show()
    pm_Page.<b>Show</b>
End Sub
Private Sub Class_Initialize()
    Dim PageTitle As String
    Dim caption As String
    Dim tip As String
    Dim options As Long
    Dim longerrors As Long
    Dim controlType As Integer
    Dim alignment As Integer</pre>
<pre>    'Set the variables for the page
    PageTitle = &quot;Materials and Dimensions&quot;
    options = swPropertyManager_OkayButton + swPropertyManager_CancelButton + swPropertyManagerOptions_LockedPage + swPropertyManagerOptions_PushpinButton</pre>
<pre>    'Create the PropertyManager page
    Set pm_Page = swApp.<b>CreatePropertyManagerPage</b>(PageTitle, options, Me, longerrors)</pre>
<pre>    'Make sure that the page was created properly
    If longerrors = swPropertyManagerPage_Okay Then
        ' Create page tabs
        Set pm_Page_Tab = pm_Page.<b>AddTab</b>(Tab1ID, &quot;Materials&quot;, &quot;&quot;, 0)
        Set pm_Page_Tab_2 = pm_Page.<b>AddTab</b>(Tab2ID, &quot;Dimensions&quot;, &quot;&quot;, 0)</pre>
<pre>        ' Activate the first tab
        pm_Page_Tab.<b>Activate</b></pre>
<pre>        'Begin adding the controls to the page tab</pre>
<pre>        'Create the group box
        caption = &quot;Materials&quot;
        options = swGroupBoxOptions_Visible + swGroupBoxOptions_Expanded
        Set pm_Group = pm_Page_Tab.<b>AddGroupBox</b>(GroupID, caption, options)</pre>
<pre>        'Create selection box
          controlType = swControlType_Selectionbox
          caption = &quot;&quot;  ' No caption for selection boxes
          alignment = swControlAlign_Indent
          options = swControlOptions_Visible + swControlOptions_Enabled
          tip = &quot;Select an edge, face, vertex, solid body, or a component&quot;
          Set pm_Selection = pm_Group.<b>AddControl</b>(SelectionID, controlType, caption, alignment, options, tip)
          Dim filters(6) As Long
          filters(0) = swSelEDGES
          filters(1) = swSelREFEDGES
          filters(2) = swSelFACES
          filters(3) = swSelVERTICES
          filters(4) = swSelSOLIDBODIES
          filters(5) = swSelCOMPONENTS
          filters(6) = swSelCOMPSDONTOVERRIDE</pre>
<pre>          pm_Selection.<b>SingleEntityOnly</b> = False
          pm_Selection.<b>AllowMultipleSelectOfSameEntity</b> = True
          pm_Selection.<b>Height</b> = 50
          pm_Selection.<b>SetSelectionFilters</b> filters
    Else  'If the page is not created
        MsgBox &quot;An error while attempting to create the &quot; &amp; &quot;PropertyManager Page&quot;, vbCritical
    End If</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>AfterActivation</b>()</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>AfterClose</b>()</pre>
<pre>    Set pm = Nothing</pre>
<pre>End Sub</pre>
<pre>Private Function PropertyManagerPage2Handler6_<b>OnActiveXControlCreated</b>(ByVal Id As Long, ByVal Status As Boolean) As Long</pre>
<pre>End Function</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnButtonPress</b>(ByVal Id As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnCheckboxCheck</b>(ByVal Id As Long, ByVal Checked As Boolean)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnClose</b>(ByVal Reason As Long)</pre>
<pre>    If Reason = swPropertyManagerPageClose_Cancel Then
        'Cancel button was clicked
        ClickedCancel = True
    ElseIf Reason = swPropertyManagerPageClose_Okay Then
        'OK button was clicked
        ClickedCancel = False
    End If</pre>
<pre>'Store the density and material name values based
'on the combo-box selection
End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnComboboxEditChange</b>d(ByVal Id As Long, ByVal Text As String)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnComboboxSelectionChanged</b>(ByVal Id As Long, ByVal Item As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnGroupCheck</b>(ByVal Id As Long, ByVal Checked As Boolean)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnGroupExpand</b>(ByVal Id As Long, ByVal Expanded As Boolean)</pre>
<pre>End Sub</pre>
<pre>Private Function PropertyManagerPage2Handler6_<b>OnHelp</b>() As Boolean</pre>
<pre>End Function</pre>
<pre>Private Function PropertyManagerPage2Handler6_<b>OnKeystroke</b>(ByVal Wparam As Long, ByVal Message As Long, ByVal Lparam As Long, ByVal Id As Long) As Boolean</pre>
<pre>End Function</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnListboxSelectionChanged</b>(ByVal Id As Long, ByVal Item As Long)</pre>
<pre>End Sub</pre>
<pre>Private Function PropertyManagerPage2Handler6_<b>OnNextPage</b>() As Boolean</pre>
<pre>End Function</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnNumberboxChanged</b>(ByVal Id As Long, ByVal Value As Double)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnOptionCheck</b>(ByVal Id As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnPopupMenuItem</b>(ByVal Id As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnPopupMenuItemUpdate</b>(ByVal Id As Long, retval As Long)</pre>
<pre>End Sub</pre>
<pre>Private Function PropertyManagerPage2Handler6_<b>OnPreview</b>() As Boolean</pre>
<pre>End Function</pre>
<pre>Private Function PropertyManagerPage2Handler6_<b>OnPreviousPage</b>() As Boolean</pre>
<pre>End Function</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnRedo</b>()</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnSelectionboxCalloutCreated</b>(ByVal Id As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnSelectionboxCalloutDestroyed</b>(ByVal Id As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnSelectionboxFocusChange</b>d(ByVal Id As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnSelectionboxListChanged</b>(ByVal Id As Long, ByVal Count As Long)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnSliderPositionChanged</b>(ByVal Id As Long, ByVal Value As Double)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnSliderTrackingCompleted</b>(ByVal Id As Long, ByVal Value As Double)</pre>
<pre>End Sub</pre>
<pre>Private Function PropertyManagerPage2Handler6_<b>OnSubmitSelection</b>(ByVal Id As Long, ByVal Selection As Object, ByVal SelType As Long, ItemText As String) As Boolean</pre>
<pre>     PropertyManagerPage2Handler6_OnSubmitSelection = True</pre>
<pre>End Function</pre>
<pre>Private Function PropertyManagerPage2Handler6_<b>OnTabClicked</b>(ByVal Id As Long) As Boolean</pre>
<pre>End Function</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnTextboxChanged</b>(ByVal Id As Long, ByVal Text As String)</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnUndo</b>()</pre>
<pre>End Sub</pre>
<pre>Private Sub PropertyManagerPage2Handler6_<b>OnWhatsNew</b>()</pre>
<pre>End Sub</pre>
<div align="center">
	<pre><a href="#Top">Back to top</a>
</pre>
</div>
<p>&nbsp;</p>

</body>

</html>
