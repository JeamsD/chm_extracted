<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Traverse Assembly at Component and Feature Levels Using Recursion Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,assemblies">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2281>
<meta name=layout-width content=1395>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Traverse Assembly at Component and Feature Levels Using Recursion Example 
 (VBA)</h1>

<p>This example shows how to traverse an assembly at the component and 
 feature levels using recursion.</p>

<p class=APICODE>
'--------------------------------------------------------------------------<br>
' Preconditions: <br>
' 1. Open an assembly document containing nested 
subassemblies.<br>
' 2. Open the Immediate window.<br>
'<br>
' Postconditions: <br>
' 1. Traverses the assembly.<br>
' 2. Examine the Immediate window.<br>
'---------------------------------------------------------------------------</p>

<pre>Option Explicit</pre>
<pre>Sub TraverseFeatureFeatures(swFeat As SldWorks.Feature, nLevel As Long)
</pre>
<pre>    Dim swSubFeat                   As SldWorks.Feature
    Dim swSubSubFeat                As SldWorks.Feature
    Dim swSubSubSubFeat             As SldWorks.Feature
    Dim sPadStr                     As String
    Dim i                           As Long</pre>
<pre>    For i = 0 To nLevel
        sPadStr = sPadStr + &quot;  &quot;
    Next i</pre>
<pre>    While Not swFeat Is Nothing
        Debug.Print sPadStr + swFeat.<b>Name</b> + &quot; [&quot; + swFeat.<b>GetTypeName</b> + &quot;]&quot;</pre>
<pre>        Set swSubFeat = swFeat.<b>GetFirstSubFeature</b>
        While Not swSubFeat Is Nothing
            Debug.Print sPadStr + &quot;  &quot; + swSubFeat.<b>Name</b> + &quot; [&quot; + swSubFeat.<b>GetTypeName</b> + &quot;]&quot;</pre>
<pre>            Set swSubSubFeat = swSubFeat.<b>GetFirstSubFeature</b>
            While Not swSubSubFeat Is Nothing
                Debug.Print sPadStr + &quot;    &quot; + swSubSubFeat.<b>Name</b> + &quot; [&quot; + swSubSubFeat.<b>GetTypeName</b> + &quot;]&quot;</pre>
<pre>                Set swSubSubSubFeat = swSubSubFeat.<b>GetFirstSubFeature</b>
                While Not swSubSubSubFeat Is Nothing
                    Debug.Print sPadStr + &quot;      &quot; + swSubSubSubFeat.<b>Name</b> + &quot; [&quot; + swSubSubSubFeat.<b>GetTypeName</b> + &quot;]&quot;</pre>
<pre>                    Set swSubSubSubFeat = swSubSubSubFeat.<b>GetNextSubFeature</b>()                    </pre>
<pre>                Wend</pre>
<pre>                Set swSubSubFeat = swSubSubFeat.<b>GetNextSubFeature</b>()</pre>
<pre>            Wend</pre>
<pre>            Set swSubFeat = swSubFeat.<b>GetNextSubFeature</b>()</pre>
<pre>        Wend</pre>
<pre>        Set swFeat = swFeat.<b>GetNextFeature</b></pre>
<pre>    Wend</pre>
<pre>End Sub

</pre>
<pre>Sub TraverseComponentFeatures(swComp As SldWorks.Component2, nLevel As Long)</pre>
<pre>    Dim swFeat As SldWorks.Feature    </pre>
<pre>    Set swFeat = swComp.<b>FirstFeature</b>
    TraverseFeatureFeatures swFeat, nLevel</pre>
<pre>End Sub


</pre>
<pre>Sub TraverseComponent(swComp As SldWorks.Component2, nLevel As Long)</pre>
<pre>    Dim vChildComp                  As Variant
    Dim swChildComp                 As SldWorks.Component2
    Dim sPadStr                     As String
    Dim i                           As Long
    </pre>
<pre>    For i = 0 To nLevel - 1
        sPadStr = sPadStr + &quot;  &quot;
    Next i    </pre>
<pre>    vChildComp = swComp.<b>GetChildren</b>
    For i = 0 To UBound(vChildComp)
        Set swChildComp = vChildComp(i)        </pre>
<pre>        Debug.Print sPadStr &amp; &quot;+&quot; &amp; swChildComp.<b>Name2</b> &amp; &quot; &lt;&quot; &amp; swChildComp.<b>ReferencedConfiguration</b> &amp; &quot;&gt;&quot;        </pre>
<pre>        TraverseComponentFeatures swChildComp, nLevel
        TraverseComponent swChildComp, nLevel + 1

    Next i

End Sub</pre>
<pre>Sub TraverseModelFeatures(swModel As SldWorks.ModelDoc2, nLevel As Long)</pre>
<pre>    Dim swFeat As SldWorks.Feature    </pre>
<pre>    Set swFeat = swModel.<b>FirstFeature</b>
    TraverseFeatureFeatures swFeat, nLevel

End Sub</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp                       As SldWorks.SldWorks
    Dim swModel                     As SldWorks.ModelDoc2
    Dim swConfMgr                   As SldWorks.ConfigurationManager
    Dim swConf                      As SldWorks.Configuration
    Dim swRootComp                  As SldWorks.Component2
    Dim StartTime                   As Double
    Dim FinishTime                  As Double
    Dim TotalTime                   As Double
    </pre>
<pre>    Set swApp = CreateObject(&quot;SldWorks.Application&quot;)
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swConfMgr = swModel.<b>ConfigurationManager</b>
    Set swConf = swConfMgr.<b>ActiveConfiguration</b>
    Set swRootComp = swConf.<b>GetRootComponent3</b>(True)    </pre>
<pre>    StartTime = Timer ' Start time    </pre>
<pre>    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b>    </pre>
<pre>    TraverseModelFeatures swModel, 1    </pre>
<pre>    If swModel.<b>GetType</b> = SwConst.swDocASSEMBLY Then
        TraverseComponent swRootComp, 1

    End If    </pre>
<pre>    FinishTime = Timer ' End time
    TotalTime = FinishTime - StartTime ' Elapsed time
    Debug.Print (&quot;Time = &quot; &amp; TotalTime &amp; &quot; sec&quot;)
    </pre>
<pre>End Sub</pre>

</body>

</html>
