<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Measure Selected Entities Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,measure">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=3311>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Measure Selected Entities Example (VBA)</h1>

<p>This example shows how to use the measure tool.</p>

<pre>'-----------------------------------------------------------------
' Preconditions:
' 1. Verify that the specified part document exists.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Opens the specified part document as read only.
' 2. Selects two faces and measures them.
' 3. Examine the Immediate window.
'-----------------------------------------------------------------</pre>
<pre>Option Explicit</pre>
<pre>Dim swApp As SldWorks.SldWorks
Dim swModel As SldWorks.ModelDoc2
Dim swModelDocExt As SldWorks.ModelDocExtension
Dim swMeasure As SldWorks.Measure
Dim status As Boolean
Dim errors As Long
Dim warnings As Long
Dim fileName As String</pre>
<pre>Sub main()</pre>
<pre>    Set swApp = Application.SldWorks
    fileName = &quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\dimxpert\coupling_auto_geo.sldprt&quot;
    Set swModel = swApp.<b>OpenDoc6</b>(fileName, swDocumentTypes_e.swDocPART, swOpenDocOptions_e.swOpenDocOptions_ReadOnly, &quot;&quot;, errors, warnings)
    Set swModelDocExt = swModel.<b>Extension</b>
    status = swModelDocExt.<b>SelectByID2</b>(&quot;&quot;, &quot;FACE&quot;, -3.82117299216134E-03, -3.2246917626253E-03, -1.53854043344381E-03, False, 0, Nothing, 0)
    status = swModelDocExt.<b>SelectByID2</b>(&quot;&quot;, &quot;FACE&quot;, 5.47600669648318E-03, 2.52191841298099E-03, 5.0000000000523E-03, True, 0, Nothing, 0)</pre>
<pre>    Set swMeasure = swModelDocExt.<b>CreateMeasure</b>
    'Can set this to 0
    ' 0 = center to center
    ' 1 = minimum distance
    ' 2 = maximum distance
    swMeasure.<b>ArcOption</b> = 0
    </pre>
<pre>    status = swMeasure.<b>Calculate</b>(Nothing)
    If (status) Then    </pre>
<pre>        If (Not (swMeasure.<b>Length</b> = -1)) Then
            Debug.Print &quot;Length: &quot; &amp; swMeasure.<b>Length</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>Area</b> = -1)) Then
           Debug.Print &quot;Area: &quot; &amp; swMeasure.<b>Area</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>ArcLength</b> = -1)) Then
            Debug.Print &quot;Arc length: &quot; &amp; swMeasure.<b>ArcLength</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>ChordLength</b> = -1)) Then
           Debug.Print &quot;Chord length: &quot; &amp; swMeasure.<b>ChordLength</b>
        End If   </pre>
<pre>        If (Not (swMeasure.<b>Diameter</b> = -1)) Then
           Debug.Print &quot;Diameter: &quot; &amp; swMeasure.<b>Diameter</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>Radius</b> = -1)) Then
            Debug.Print &quot;Radius: &quot; &amp; swMeasure.<b>Radius</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>Perimeter</b> = -1)) Then
            Debug.Print &quot;Perimeter: &quot; &amp; swMeasure.<b>Perimeter</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>X</b> = -1)) Then
            Debug.Print &quot;X coordinate: &quot; &amp; swMeasure.<b>X</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>Y</b> = -1)) Then
            Debug.Print &quot;Y coordinate: &quot; &amp; swMeasure.<b>Y</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>Z</b> = -1)) Then
            Debug.Print &quot;Z coordinate: &quot; &amp; swMeasure.<b>Z</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>DeltaX</b> = -1)) Then
            Debug.Print &quot;DeltaX: &quot; &amp; swMeasure.<b>DeltaX</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>DeltaY</b> = -1)) Then
            Debug.Print &quot;DeltaY: &quot; &amp; swMeasure.<b>DeltaY</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>DeltaZ</b> = -1)) Then
            Debug.Print &quot;DeltaZ: &quot; &amp; swMeasure.<b>DeltaZ</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>Angle</b> = -1)) Then
            Debug.Print &quot;Angle: &quot; &amp; swMeasure.<b>Angle</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>CenterDistance</b> = -1)) Then
            Debug.Print &quot;Center distance: &quot; &amp; swMeasure.<b>CenterDistance</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>NormalDistance</b> = -1)) Then
            Debug.Print &quot;Normal distance: &quot; &amp; swMeasure.<b>NormalDistance</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>Distance</b> = -1)) Then
            Debug.Print &quot;Distance: &quot; &amp; swMeasure.<b>Distance</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>TotalLength</b> = -1)) Then
            Debug.Print &quot;Total length: &quot; &amp; swMeasure.<b>TotalLength</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>TotalArea</b> = -1)) Then
            Debug.Print &quot;Total area: &quot; &amp; swMeasure.<b>TotalArea</b>
        End If    </pre>
<pre>        If (swMeasure.<b>IsParallel</b>) Then
            Debug.Print &quot;Is parallel: &quot; &amp; swMeasure.<b>IsParallel</b>
        End If    </pre>
<pre>        If (swMeasure.<b>IsIntersect</b>) Then
            Debug.Print &quot;Is intersect: &quot; &amp; swMeasure.<b>IsIntersect</b>
        End If    </pre>
<pre>        If (swMeasure.<b>IsPerpendicular</b>) Then
            Debug.Print &quot;Is perpendicular: &quot; &amp; swMeasure.<b>IsPerpendicular</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>Projection</b> = -1)) Then
            Debug.Print &quot;Projection: &quot; &amp; swMeasure.<b>Projection</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>Normal</b> = -1)) Then
            Debug.Print &quot;Normal: &quot; &amp; swMeasure.<b>Normal</b>
        End If    </pre>
<pre>        If (Not (swMeasure.<b>SpericalCenterDistance</b> = -1)) Then
            Debug.Print &quot;Spherical center distance: &quot; &amp; swMeasure.<b>SpericalCenterDistance</b>
        End If    </pre>
<pre>        If (swMeasure.<b>IsConcentricSpheres</b>) Then
            Debug.Print &quot;Are concentric spheres: &quot; &amp; swMeasure.<b>IsConcentricSpheres</b>
        End If    </pre>
<pre>    Else    </pre>
<pre>        Debug.Print &quot;Invalid combination of selected entities.&quot;    </pre>
<pre>    End If    </pre>
<pre>    swModel.<b>ClearSelection2</b> True    
</pre>
<pre>End Sub</pre>

</body>

</html>
