<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Sketch Slot Using Sketch Point and Segment Example (VB.NET)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VB.NET examples,sketch slots">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1790>
<meta name=layout-width content=951>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Get Sketch Slot Using Sketch Point and Segment Example (VB.NET)</h1>

<p>This example shows you how to get a sketch slot using a sketch point 
 and a sketch segment.</p>

<pre><font color="#008000">'--------------------------------------------------------
' Preconditions:
' 1. Open a new part document.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Creates a sketch slot.
' 2. Gets the length of the sketch slot.
' 3. Selects a sketch point on the sketch slot 
'    and accesses the sketch slot using that
'    sketch point.
' 4. Gets the length of the sketch slot.
' 5. Selects a sketch segment on the sketch slot 
'    and accesses the sketch slot using that
'    sketch segment.
' 6. Gets the length of the sketch slot.
' 7. Examine the Immediate window.
'-------------------------------------------------------</font>
Imports SolidWorks.Interop.sldworks
Imports SolidWorks.Interop.swconst
Imports System
Imports System.Diagnostics</pre>

<p class=APICODE><br>
Partial Class SolidWorksMacro</p>

<p class=APICODE><br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swModel As ModelDoc2<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swExt As ModelDocExtension<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swSelMgr As SelectionMgr<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 boolstatus As Boolean<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swSketchManager As SketchManager<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swSketchSlot As SketchSlot<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swSketchPoint As SketchPoint<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swSketchSegment As SketchSegment</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Public 
 Sub main()</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swModel 
 = swApp.<span style="font-weight: bold;">ActiveDoc<br>
</span><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swExt 
 = swModel.<span style="font-weight: bold;">Extension<br>
</span><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swSelMgr 
 = swModel.<span style="font-weight: bold;">SelectionManager<br>
</span><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swSketchManager 
 = swModel.<span style="font-weight: bold;">SketchManager</span></p>

<p class=APICODE><br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->' 
 Select a plane and open a sketch</p>
<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->boolstatus 
 = swExt.<span style="font-weight: bold;">SelectByID2</span>(&quot;Front 
 Plane&quot;, &quot;PLANE&quot;, 0, 0, 0, False, 0, Nothing, 0)<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swModel.<span 
 style="font-weight: bold;">InsertSketch</span>()</p>

<p class=APICODE><br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->' 
 Insert a sketch of sketch slot<!--kadov_tag{{<spaces>}}--><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; swSketchSlot = swSketchManager.<b>CreateSketchSlot</b>(swSketchSlotCreationType_e.swSketchSlotCreationType_line, 
swSketchSlotLengthType_e.swSketchSlotLengthType_CenterCenter, 0.05, -0.05, 0, 0, 
0.05, 0, 0, 0, 0, 0, 1, False)<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Debug.Print(&quot;Length: 
 &quot; &amp; swSketchSlot.<span style="font-weight: bold;">Length</span>)<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Debug.Print(&quot; 
 &quot;)<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swModel.<span 
 style="font-weight: bold;">InsertSketch</span>()<br>
<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->' 
 Get a sketch point on the sketch slot<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->boolstatus 
 = swExt.<span style="font-weight: bold;">SelectByID2</span>(&quot;Point1@Sketch1&quot;, 
 &quot;EXTSKETCHPOINT&quot;, 0.05, 0.025, 0, False, 0, Nothing, 0)<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swSketchPoint 
 = swSelMgr.<span style="font-weight: bold;">GetSelectedObject6</span>(1, 
 -1)<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->' 
 Get sketch slot<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swSketchSlot 
 = swSketchPoint.<span style="font-weight: bold;">GetSketchSlot<br>
</span><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Debug.Print(&quot;Length: 
 &quot; &amp; swSketchSlot.<span style="font-weight: bold;">Length</span>)<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Debug.Print(&quot; 
 &quot;)</p>

<p class=APICODE><br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->' 
 Get a sketch segment on the sketch slot<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->boolstatus 
 = swExt.<span style="font-weight: bold;">SelectByID2</span>(&quot;Line1@Sketch1&quot;, 
 &quot;EXTSKETCHSEGMENT&quot;, -0.03969355327396, -0.025, 0, False, 0, 
 Nothing, 0)<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swSketchSegment 
 = swSelMgr.<span style="font-weight: bold;">GetSelectedObject6</span>(1, 
 -1)<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->' 
 Get sketch slot<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swSketchSlot 
 = swSketchSegment.<span style="font-weight: bold;">GetSketchSlot</span><!--kadov_tag{{<spaces>}}--><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Debug.Print(&quot;Length: 
 &quot; &amp; swSketchSlot.<span style="font-weight: bold;">Length</span>)<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Debug.Print(&quot; 
 &quot;)</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->End 
 Sub</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->''' 
 &lt;summary&gt;<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->''' 
 The SldWorks swApp variable is pre-assigned for you.<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->''' 
 &lt;/summary&gt;<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Public 
 swApp As SldWorks</p>

<p class=APICODE><br>
End Class</p>

<p>&nbsp;</p>

</body>

</html>
