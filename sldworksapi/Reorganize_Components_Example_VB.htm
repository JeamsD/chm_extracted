<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Reorganize Components Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples, components">
<meta name=MS-HKWD content="VBA examples, assemblies">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2232>
<meta name=layout-width content=830>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Reorganize Components Example (VBA)</h1>

<p><a name="top"></a>This example shows how to reorder components in an 
assembly.</p>
<pre>'----------------------------------------------------------------------------&nbsp;
' Preconditions:
' 1. Copy and paste <a href="#Module">this code</a> in the main module.
' 2. Click <b>Insert &gt; Class module</b> and copy and paste <a href="#Class1">this code</a> in that module.&nbsp;
' 3. Open&nbsp;<i>public_documents</i><b>\samples\tutorial\assemblyvisualize\food_processor.sldasm</b>.&nbsp;
' 4. Open the Immediate window.
'&nbsp;
'&nbsp;Postconditions:&nbsp;
'&nbsp;1.&nbsp;Run the macro.
' 2. Interactively select both <b>shaft washer</b> components in the FeatureManager design tree.
' 3. Press F5.
' 4. Interactively select the <b>blade shaft</b> subassembly in the FeatureManager design tree.
' 5. Press F5.
' 6. Expand and examine the <b>blade shaft</b> subassembly in the FeatureManager design tree to verify
'    that both <b>shaft washer</b> components moved to the subassembly.
' 7. Examine the Immediate window.
'
' NOTE: Because the assembly is used elsewhere, do not save changes.
'&nbsp;----------------------------------------------------------------------------&nbsp;
</pre>
<pre><a name="Module"></a>'Module
Option Explicit</pre>
<pre>Dim myClass As Class1</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim myModel As SldWorks.ModelDoc2
    Dim myAssem As SldWorks.AssemblyDoc
    Dim selMgr As SldWorks.SelectionMgr
    Dim selCount As Long, selType As Long
    Dim selObj As Object
    Dim selSource() As SldWorks.Component2
    Dim vSource As Variant
    Dim selTarget As SldWorks.Component2
    Dim boolstatus As Boolean</pre>
<pre>    Set swApp = Application.SldWorks
    Set myModel = swApp.<b>ActiveDoc</b>
    Set myAssem = myModel</pre>
<pre>    Set myClass = New Class1
    Set myClass.msrcAssemblyDoc = myAssem</pre>
<pre>    ' Interactively select components to move
    ' The selected components must be from the
    ' same level of an assembly
    ' Press F5
    Stop</pre>
<pre>    Set selMgr = myModel.<b>SelectionManager</b>
    selCount = selMgr.<b>GetSelectedObjectCount2</b>(0)
    If (selCount = 0) Then
        Exit Sub
    End If</pre>
<pre>    ReDim selSource(0 To selCount - 1)
    Dim i As Long
    For i = 1 To selCount
        selType = selMgr.<b>GetSelectedObjectType3</b>(i, 0)
        If (selType = SwConst.swSelCOMPONENTS) Then
            Set selObj = selMgr.<b>GetSelectedObject6</b>(i, 0)
            Set selSource(i - 1) = selObj
        End If
    Next i</pre>
<pre>    vSource = selSource    </pre>
<pre>    myModel.<b>ClearSelection2</b> True</pre>
<pre>    ' Interactively select a top-level assembly or
    ' sub-assembly where to move the
    ' previously selected components
    ' Press F5
    Stop</pre>
<pre>    selCount = selMgr.<b>GetSelectedObjectCount2</b>(0)
    If (selCount &gt; 0) Then
        selType = selMgr.<b>GetSelectedObjectType3</b>(1, 0)
        If selType = SwConst.swSelCOMPONENTS Then
            Set selObj = selMgr.<b>GetSelectedObject6</b>(1, 0)
            If Not selObj Is Nothing Then
                Set selTarget = selObj
            Else
                Set selTarget = myAssem.<b>GetEditTargetComponent</b>
            End If
        End If
    End If</pre>
<pre>    myModel.ClearSelection2 True</pre>
<pre>    If Not (selTarget Is Nothing) Then
        boolstatus = myAssem.<b>ReorganizeComponents</b>((vSource), selTarget)
        ' AssemblyDoc ComponentReorganizeNotify event is fired
        If boolstatus = False Then
            Debug.Print &quot;Reordering components failed.&quot;
        Else
            Debug.Print &quot;Reordering components succeeded.&quot;
        End If
    End If</pre>
<pre>End Sub</pre>
<p align="center"><a href="#top">Back to top</a></p>
<p align="left"><font face="Courier New" size="2"><a name="Class1"></a>'Class1<br>
Option Explicit</font></p>
<pre>Public WithEvents msrcAssemblyDoc   As SldWorks.AssemblyDoc
Public Function msrcAssemblyDoc_<b>ComponentReorganizeNotify</b>(ByVal sourceName As String, ByVal targetName As String) As Long
    Debug.Print &quot;IAssemblyDocEvent ComponentReorganizeNotify&quot;
    Debug.Print &quot;  Source component is: &quot; &amp; sourceName
    Debug.Print &quot;  Target component is: &quot; &amp; targetName
    msrcAssemblyDoc_ComponentReorganizeNotify = 1
End Function</pre>
<p align="left">&nbsp;</p>
<p align="center"><a href="#top">Back to top</a></p>
<p align="center">&nbsp;</p>
<p align="center">&nbsp;</p>

</body>

</html>
