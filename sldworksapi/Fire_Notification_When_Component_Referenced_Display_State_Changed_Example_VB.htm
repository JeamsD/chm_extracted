<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Fire Notification When Component Referenced Display State Changed Example VB</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,display states">
<meta name=MS-HKWD content="VBA examples,components">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1184>
<meta name=layout-width content=926>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Fire Notification When Component Referenced Display State Changes Example 
 (VBA)</h1>

<p>This example shows how to fire a notification when a component's referenced 
display state is changed in an assembly.</p>

<pre>'---------------------------------------------------------------
' Preconditions:
' 1. Copy and paste <a href="#Main">this code</a> in the main module.
' 2. Click <b>Insert &gt; Class Module</b> and copy and paste <a href="#Class">this code</a>
'    in the class module.
' 3. Open an assembly document that has
'    a component with multiple referenced
'    display states.
' 4. Run this macro (press F5)
' 5. Change the referenced display state of
'    a component (right-click the component, click the
'    <b>Component Properties</b> button, select a different
'    referenced display state, and click <b>OK</b>).
'
' Postconditions:
' 1. Displays a message box informing you that the referenced
'    display state of a component has changed.
' 2. Click <b>OK</b> to close the message box.
'---------------------------------------------------------------
<a name=Main></a>'Main module</pre>
<pre>Option Explicit</pre>
<pre>Dim swApp As SldWorks.SldWorks
Dim swModel As SldWorks.ModelDoc2
Dim swAssem As SldWorks.AssemblyDoc
Dim swAssemEvents As Class1</pre>
<pre>Sub main()</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>    </pre>
<pre>    'Set up events
    Set swAssem = swModel
    Set swAssemEvents = New Class1
    Set swAssemEvents.swAssem = swApp.<b>ActiveDoc</b></pre>
<pre>End Sub</pre>

<p class=APICODE>&nbsp;</p>

<h5><span style="font-weight: 400"><font face="Courier New" size="2"><a name=Class></a>
'Class module</font></span></h5>

<p class=APICODE>Option Explicit</p>

<p class=APICODE>&nbsp;</p>

<p class=APICODE>Public WithEvents swAssem As SldWorks.AssemblyDoc</p>

<p class=APICODE>&nbsp;</p>

<p class=APICODE>'Send message after user changes referenced display state 
 of a component in an assembly</p>

<p class=APICODE>Private Function swAssem_<span style="font-weight: bold;">ComponentReferredDisplayStateChangeNotify</span>(ByVal 
 componentModel As Object, ByVal compName As String, ByVal oldDSId As Long, 
 ByVal oldDSName As String, ByVal newDSID As Long, ByVal newDSName As String) 
 As Long</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->MsgBox 
 &quot;The component's referenced display state has changed.&quot;</p>

<p class=APICODE>End Function</p>

</body>

</html>
