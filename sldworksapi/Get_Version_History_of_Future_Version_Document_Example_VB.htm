<html>

<head>
<title>Get Version History of Future Version Document Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples,version number">
<meta name=MS-HKWD content="VBA examples,history">
<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Get Version History of Future Version Document Example (VBA)</h1>
<p>This example shows how to get the version history of a future version document.</p>

<p class=APICODE>'---------------------------------------------------------------------------- 
<br>
' Preconditions: <br>
' 1. Copy a future version part document to this macro's directory. <br>
' 2.&nbsp;Replace <i>Part1.sldprt</i> in the macro with 
the name <br>
'&nbsp;&nbsp;&nbsp; of your future version part.<br>
' 3. Open an Immediate window. <br>
' <br>
' Postconditions:&nbsp; <br>
' 1. Does not throw swFileLoadError_e.swFutureVersion.<br>
' 2. Inspect the Immediate window for the version history of the document.<br>
' 
---------------------------------------------------------------------------</p>
<p class="APICODE">Option Explicit</p>
<p class="APICODE">Sub Main()</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Dim swApp 
As SldWorks.SldWorks<br>
&nbsp;&nbsp;&nbsp; Dim swDocument 
As SldWorks.ModelDoc2<br>
&nbsp;&nbsp;&nbsp; Dim swExtension 
As SldWorks.ModelDocExtension<br>
&nbsp;&nbsp;&nbsp; Dim lErrors 
As Long<br>
&nbsp;&nbsp;&nbsp; Dim lWarnings 
As Long<br>
&nbsp;&nbsp;&nbsp; Dim lOptions 
As Long<br>
&nbsp;&nbsp;&nbsp; Dim strFileName 
As String<br>
&nbsp;&nbsp;&nbsp; Dim vVersionHistory 
As Variant<br>
&nbsp;&nbsp;&nbsp; Dim strBaseVersion 
As String<br>
&nbsp;&nbsp;&nbsp; Dim strCurrentVersion As 
String<br>
&nbsp;&nbsp;&nbsp; Dim strHotFixes 
As String<br>
&nbsp;&nbsp;&nbsp; Dim strRevisionNumber As 
String<br>
&nbsp;&nbsp;&nbsp; Dim lDateCode 
As Long<br>
&nbsp;&nbsp;&nbsp; Dim strDateCode 
As String<br>
&nbsp;&nbsp;&nbsp; Dim strDateCodeYear 
As String<br>
&nbsp;&nbsp;&nbsp; Dim strDateCodeDay 
As String<br>
&nbsp;&nbsp;&nbsp; Dim strFormatVersion As String<br>
&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swApp = Application.<b>SldWorks</b><br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; strFormatVersion = swApp.<b>GetLatestSupportedFileVersion</b><br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; strRevisionNumber = swApp.<b>RevisionNumber</b><br>
&nbsp;&nbsp;&nbsp; swApp.<b>GetBuildNumbers2</b> strBaseVersion, 
strCurrentVersion, strHotFixes<br>
&nbsp;&nbsp;&nbsp; lDateCode = swApp.<b>DateCode</b><br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; strDateCode = CStr(lDateCode)<br>
&nbsp;&nbsp;&nbsp; strDateCodeYear = Left$(strDateCode, 4)<br>
&nbsp;&nbsp;&nbsp; strDateCodeDay = Mid$(strDateCode, Len(strDateCodeYear) + 1)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; strDateCode = strDateCodeYear &amp; &quot;/&quot; &amp; 
strDateCodeDay<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Format version = &quot; &amp; 
strFormatVersion<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;RevisionNumber = &quot; &amp; strRevisionNumber<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;BaseVersion&nbsp;&nbsp;&nbsp; = &quot; &amp; 
strBaseVersion<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;CurrentVersion = &quot; &amp; strCurrentVersion<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;HotFixes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; 
&amp; strHotFixes<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;DateCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; 
&amp; lDateCode<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; DateCode&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; 
strDateCode<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swDocument = swApp.<b>ActiveDoc</b><br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; If (swDocument Is Nothing) Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strFileName = swApp.<b>GetCurrentMacroPathFolder</b> 
&amp; &quot;\<i>Part1.sldprt</i>&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lOptions = 0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lOptions = lOptions Or 
swOpenDocOptions_e.swOpenDocOptions_Silent<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set swDocument = swApp.<b>OpenDoc6</b>(strFileName, 
swDocPART, lOptions, &quot;&quot;, lErrors, lWarnings)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;lErrors = &quot; &amp; lErrors<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Starting with SW2012 SP5, loading 
future file versions is supported,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' so the future version error no longer occurs.<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; future version 
error = &quot; &amp; ((lErrors And swFileLoadError_e.swFutureVersion) = 
swFileLoadError_e.swFutureVersion)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;lWarnings = &quot; &amp; 
lWarnings<br>
&nbsp;&nbsp;&nbsp; End If<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; If (swDocument Is Nothing) Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;No model&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exit Sub<br>
&nbsp;&nbsp;&nbsp; End If<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; strFileName = swDocument.<b>GetPathName</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;File = &quot; &amp; strFileName<br>
&nbsp;&nbsp;&nbsp; Set swExtension = swDocument.<b>Extension</b><br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' The version history of a future version 
document is the same as <br>
&nbsp;&nbsp;&nbsp; ' that of the part/assembly template that is used to load 
it<br>
&nbsp;&nbsp;&nbsp; ' into the older version of SOLIDWORKS. 
IModelDoc2::VersionHistory<br>
&nbsp;&nbsp;&nbsp; ' returns the version history of the part template,<br>
&nbsp;&nbsp;&nbsp; ' not the version history of the future version document. Get 
the version<br>
&nbsp;&nbsp;&nbsp; ' history of a future version document from its file on disk<br>
&nbsp;&nbsp;&nbsp; ' using SldWorks::VersionHistory.<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Is future version = &quot; &amp; 
swExtension.<b>IsFutureVersion</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; If (Not (swExtension.<b>IsFutureVersion</b> 
= False)) Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vVersionHistory = swApp.<b>VersionHistory</b>(strFileName)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If (Not IsEmpty(vVersionHistory)) 
Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print 
&quot;Version history from file:&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
PrintVersionHistory vVersionHistory<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If<br>
&nbsp;&nbsp;&nbsp; End If<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; vVersionHistory = swDocument.<b>VersionHistory</b><br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; If (Not IsEmpty(vVersionHistory)) Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;Version history from 
document:&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PrintVersionHistory vVersionHistory<br>
&nbsp;&nbsp;&nbsp; End If<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;view-only&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swDocument.<b>IsOpenedViewOnly</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;read-only&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; 
swDocument.<b>IsOpenedReadOnly</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;blocking state = &quot; &amp; 
BlockingState2String(swDocument.<b>GetBlockingState</b>)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">End Sub</p>
<p class="APICODE">Private Sub PrintVersionHistory(ByVal vVersionHistory As 
Variant)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Dim vSplitResults&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Variant<br>
&nbsp;&nbsp;&nbsp; Dim strFormatVersion&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As String<br>
&nbsp;&nbsp;&nbsp; Dim strDateCodes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As String<br>
&nbsp;&nbsp;&nbsp; Dim vDateCode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Variant<br>
&nbsp;&nbsp;&nbsp; Dim vHistoryEntry&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Variant</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; For Each vHistoryEntry In vVersionHistory<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; 
&quot; &amp; vHistoryEntry<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vSplitResults = Split(vHistoryEntry, 
&quot;[&quot;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strFormatVersion = vSplitResults(0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strDateCodes = 
Replace(vSplitResults(1), &quot;]&quot;, &quot;&quot;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vSplitResults = Split(strDateCodes, 
&quot;,&quot;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; 
format version = &quot; &amp; strFormatVersion<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; For Each vDateCode 
In vSplitResults<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
datecode = &quot; &amp; vDateCode<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Next vDateCode<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Next vHistoryEntry</p>
<p class="APICODE">End Sub</p>
<p class="APICODE">Private Function BlockingState2String(ByVal nBlockingState As 
SwConst.swBlockingStates_e) As String</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Select Case (nBlockingState)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Case swBlockingStates_e.swEditorBlock<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BlockingState2String = &quot;editor block&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Case 
swBlockingStates_e.swEditSketchBlock<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BlockingState2String = &quot;edit sketch block&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Case 
swBlockingStates_e.swFullBlock<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BlockingState2String = &quot;full block&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Case 
swBlockingStates_e.swModifyBlock<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BlockingState2String = &quot;modify block&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Case 
swBlockingStates_e.swNoBlock<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BlockingState2String = &quot;no block&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Case 
swBlockingStates_e.swPartialModifyBlock<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BlockingState2String = &quot;partial modify block&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Case 
swBlockingStates_e.swSystemBlock<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BlockingState2String = &quot;system block&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Case 
swBlockingStates_e.swViewOnlyBlock<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BlockingState2String = &quot;view only block&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Case Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
BlockingState2String = &quot;&lt;unknown blocking state&gt;&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; End Select<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">End Function</p>

<p>&nbsp;</p>

</body>

</html>
