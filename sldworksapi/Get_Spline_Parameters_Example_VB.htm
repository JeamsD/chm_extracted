<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Spline Parameters Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="Splines,parameters">
<meta name=MS-HKWD content="VBA examples,splines">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=4351>
<meta name=layout-width content=786>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Get Spline Parameters Example (VBA)</h1>

<p>This example shows how to get the parameters of a spline.</p>

<pre>'----------------------------------------------
' Preconditions:
' 1. Open a part containing a sketch of a spline.
' 2. Select the sketch of the spline.
'
' Postconditions:
' 1. Gets the parameters of the spline.
' 2. Examine the Immediate window.
'-----------------------------------------------
Option Explicit</pre>
<pre>Public Enum swSketchSegments_e
    swSketchLINE = 0
    swSketchARC = 1
    swSketchELLIPSE = 2
    swSketchSPLINE = 3
    swSketchTEXT = 4
    swSketchPARABOLA = 5
End Enum</pre>
<pre>' Define two types
Type DoubleRec
    dValue As Double
End Type</pre>
<pre>Type Int2Rec
    'Assume C int has 4 bytes
    iLower As Long
    iUpper As Long
End Type</pre>
<pre>'Extract two integer values from a single double value
'by assigning a DoubleRec to the double value and then
'copying the value to Int2Rec and
'extracting the integer values
Function ExtractFields(dValue As Double, iLower As Long, iUpper As Long)</pre>
<pre>    Dim dr                  As DoubleRec
    Dim i2r                 As Int2Rec</pre>
<pre>    'Set the double value
    dr.dValue = dValue</pre>
<pre>    'Copy the values
    LSet i2r = dr</pre>
<pre>    'Extract the values
    iLower = i2r.iLower
    iUpper = i2r.iUpper</pre>
<pre>End Function</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp                   As SldWorks.SldWorks
    Dim swModel                 As SldWorks.ModelDoc2
    Dim swSelMgr                As SldWorks.SelectionMgr
    Dim swFeat                  As SldWorks.Feature
    Dim swSketch                As SldWorks.Sketch
    Dim vSkSeg                  As Variant
    Dim swSkSeg                 As SldWorks.SketchSegment
    Dim swSkSpline              As SldWorks.SketchSpline
    Dim vSplineParam            As Variant
    Dim vSplinePt               As Variant
    Dim swSkPt                  As SldWorks.SketchPoint
    Dim nSplineParam0           As Double
    Dim nSplineParam1           As Double
    Dim nDim                    As Long
    Dim nOrder                  As Long
    Dim nCtrlPoints             As Long
    Dim nPeriodic               As Long
    Dim nNumKnots               As Long
    Dim nStyleLayerParam0       As Double
    Dim nStyleLayerParam1       As Double
    Dim nStyleLayerParam2       As Double
    Dim nColor                  As Long
    Dim nLineStyle              As Long
    Dim nLineWidth              As Long
    Dim nLayer                  As Long
    Dim nLayerOverride          As Long
    Dim nDummy                  As Long
    Dim nIndex                  As Long
    Dim nOffset                 As Long
    Dim i                       As Long
    Dim j                       As Long</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swSelMgr = swModel.<b>SelectionManager</b>
    Set swFeat = swSelMgr.<b>GetSelectedObject5</b>(1)
    Set swSketch = swFeat.<b>GetSpecificFeature2</b></pre>
<pre>    Debug.Print swFeat.<b>Name</b></pre>
<pre>    vSplineParam = swSketch.<b>GetSplineParams2</b>
    nIndex = 0</pre>
<pre>    Do While nIndex &lt; UBound(vSplineParam)
        nOffset = nIndex</pre>
<pre>        ' Get spline data from first two packed elements
        nSplineParam0 = vSplineParam(nOffset + 0): nIndex = nIndex + 1
        nSplineParam1 = vSplineParam(nOffset + 1): nIndex = nIndex + 1
        ExtractFields nSplineParam0, nDim, nOrder
        ExtractFields nSplineParam1, nCtrlPoints, nPeriodic</pre>
<pre>        If 1 = nPeriodic Then
            nNumKnots = nCtrlPoints + 1
        Else
            nNumKnots = nCtrlPoints + nOrder
        End If</pre>
<pre>        Debug.Print &quot;  Dim          = &quot; &amp; nDim
        Debug.Print &quot;  Order        = &quot; &amp; nOrder
        Debug.Print &quot;  CtrlPoints   = &quot; &amp; nCtrlPoints
        Debug.Print &quot;  Periodic     = &quot; &amp; nPeriodic
        Debug.Print &quot;  NumKnots     = &quot; &amp; nNumKnots
        Debug.Print &quot;&quot;</pre>
<pre>        ' Get control point data
        ' Dimension is always 3 or 4
        Debug.Assert 3 = nDim Or 4 = nDim
        For i = 2 + nOffset To 2 + nOffset + nCtrlPoints * nDim - 3 Step nDim
            Debug.Print &quot;  CtrlPt[&quot; &amp; i &amp; &quot;] = (&quot; &amp; vSplineParam(i + 0) * 1000# &amp; &quot;, &quot; &amp; vSplineParam(i + 1) * 1000# &amp; &quot;, &quot; &amp; vSplineParam(i + 2) * 1000# &amp; &quot;) mm&quot;
            If 4 = nDim Then
                Debug.Print &quot;    Weight[&quot; &amp; i &amp; &quot;] = &quot; &amp; vSplineParam(i + 3)
            End If
            nIndex = nIndex + nDim
        Next i
        Debug.Print &quot;&quot;
        For i = 2 + nOffset + nCtrlPoints * nDim To 2 + nOffset + nCtrlPoints * nDim + nNumKnots - 1
            ' Knot weights must be non-descending
            Debug.Print &quot;  Knot[&quot; &amp; i &amp; &quot;] = &quot; &amp; vSplineParam(i)
            nIndex = nIndex + 1
        Next i
        Debug.Print &quot;&quot;</pre>
<pre>        ' Get style from packed elements - only supported for drawings
        nStyleLayerParam0 = vSplineParam(2 + nOffset + nNumKnots + nCtrlPoints * nDim + 0): nIndex = nIndex + 0
        nStyleLayerParam1 = vSplineParam(2 + nOffset + nNumKnots + nCtrlPoints * nDim + 1): nIndex = nIndex + 1
        nStyleLayerParam2 = vSplineParam(2 + nOffset + nNumKnots + nCtrlPoints * nDim + 2): nIndex = nIndex + 1
        ExtractFields nStyleLayerParam0, nColor, nLineStyle
        ExtractFields nStyleLayerParam1, nLineWidth, nLayer
        ExtractFields nStyleLayerParam2, nLayerOverride, nDummy</pre>
<pre>        Debug.Print &quot;  Color            = &quot; &amp; nColor
        Debug.Print &quot;  LineStyle        = &quot; &amp; nLineStyle
        Debug.Print &quot;  LineWidth        = &quot; &amp; nLineWidth
        Debug.Print &quot;  Layer            = &quot; &amp; nLayer
        Debug.Print &quot;  LayerOverride    = &quot; &amp; nLayerOverride
        Debug.Print &quot;  &quot;
        nIndex = nIndex + 1
    Loop</pre>
<pre>    vSkSeg = swSketch.<b>GetSketchSegments</b>
    For i = 0 To UBound(vSkSeg)
        Set swSkSeg = vSkSeg(i)</pre>
<pre>        If swSketchSPLINE = swSkSeg.<b>GetType</b> Then
            Set swSkSpline = swSkSeg</pre>
<pre>            ' Spline passes through these points
            ' first, and the last spline points are the same
            ' as the first and last control points
            vSplinePt = swSkSpline.<b>GetPoints2</b>
            For j = 0 To UBound(vSplinePt)
                Set swSkPt = vSplinePt(j)
                Debug.Print &quot;  SketchSplinePt[&quot; &amp; j &amp; &quot;] = (&quot; &amp; swSkPt.X * 1000# &amp; &quot;, &quot; &amp; swSkPt.Y * 1000# &amp; &quot;, &quot; &amp; swSkPt.Z * 1000# &amp; &quot;) mm&quot;
            Next j
        End If
        Debug.Print &quot;&quot;
    Next i</pre>
<pre>End Sub

</pre>

</body>

</html>
