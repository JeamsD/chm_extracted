<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Create Base-Flange Feature Using Gauge Table Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<META NAME="MS-HKWD" CONTENT="VBA examples,base flange">
<META NAME="MS-HKWD" CONTENT="VBA examples,features">
<META NAME="MS-HKWD" CONTENT="VBA examples,sheet metal">
<META NAME="MS-HKWD" CONTENT="VBA examples,gauge table">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2338>
<meta name=layout-width content=740>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Create Base-Flange Feature Using Gauge Table Example (VBA)</h1>

<p>This examples shows how to create a sheet metal part with a base-flange feature using a gauge 
 table.</p>
<pre>'-----------------------------------------------------------------
' Preconditions:
' 1. Verify that the specified part template and sheet
'    metal gauge table files exist.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Creates a part document containing a sketch.
' 2. Sets some values for the base flange feature.
' 3. Gets and prints the sheet metal gauge table thickness names
'    and available bend radii to the Immediate window.
' 4. Using the sketch, creates a sheet metal part with
'    a base flange feature.
' 5. Examine the FeatureManager design tree and Immediate window.
'-----------------------------------------------------------------
Option Explicit</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swFeatMgr As SldWorks.FeatureManager
    Dim swModelDocExt As SldWorks.ModelDocExtension
    Dim swSketchManager As SldWorks.SketchManager
    Dim featDef As SldWorks.BaseFlangeFeatureData
    Dim sketchLines As Variant
    Dim thicknessNames As Variant
    Dim radii As Variant
    Dim override As Boolean
    Dim boolstatus As Boolean
    Dim feat As Object
    Dim i As Long
    Dim j As Long</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>NewDocument</b>(&quot;C:\ProgramData\SolidWorks\SolidWorks 2015\templates\Part.prtdot&quot;, 0, 0, 0)    </pre>
<pre>    swModel.<b>ClearSelection2</b> True    </pre>
<pre>    Set swModelDocExt = swModel.<b>Extension</b>
    boolstatus = swModelDocExt.<b>SetUserPreferenceToggle</b>(swUserPreferenceToggle_e.swSketchAddConstToRectEntity, swUserPreferenceOption_e.swDetailingNoOptionSpecified, False)
    boolstatus = swModelDocExt.<b>SetUserPreferenceToggle</b>(swUserPreferenceToggle_e.swSketchAddConstLineDiagonalType, swUserPreferenceOption_e.swDetailingNoOptionSpecified, True)
    Set swSketchManager = swModel.<b>SketchManager</b>
    sketchLines = swSketchManager.<b>CreateCornerRectangle</b>(0, 0, 0, 0.107090305712461, -6.06697840413517E-02, 0)
    swSketchManager.<b>InsertSketch</b> True</pre>
<pre>    Set swFeatMgr = swModel.<b>FeatureManager</b>
    Set featDef = swFeatMgr.<b>CreateDefinition</b>(swFmBaseFlange)
    featDef.<b>BendRadius</b> = 0.02
    featDef.<b>D1OffsetDistance</b> = 0.04
    featDef.<b>D1OffsetType</b> = 1
    featDef.<b>D1ReverseOffset</b> = True
    featDef.<b>D2OffsetDistance</b> = 0.001
    featDef.<b>D2OffsetType</b> = 1
    featDef.<b>D2ReverseOffset</b> = True
    featDef.<b>OffsetDirections</b> = 1
    featDef.<b>ReverseDirection</b> = False
    featDef.<b>ReverseThickness</b> = False</pre>
<pre>    ' All of the following values depend on the previous values;
    ' you must set these values in sequence
    featDef.<b>UseGaugeTable</b> = True    </pre>
<pre>    ' Set the path to the sheet metal gauge tables
    featDef.<b>GaugeTablePath</b> = &quot;c:\Program Files\SOLIDWORKS Corp\SOLIDWORKS\lang\english\Sheet Metal Gauge Tables\sample table - steel - english units.xls&quot;</pre>
<pre>    thicknessNames = featDef.<b>GetTableThicknesses</b>()</pre>
<pre>    If (IsEmpty(thicknessNames)) Then
        MsgBox &quot;Invalid path to sheet metal gauge table file.&quot;
        End
    End If</pre>
<pre>    Debug.Print &quot;Sheet metal gauge table thickness names and available bend radii:&quot;
    For i = 0 To UBound(thicknessNames)
        Debug.Print &quot;  &quot; &amp; thicknessNames(i)
        radii = featDef.<b>GetTableRadii</b>(thicknessNames(i))
        For j = 0 To UBound(radii)
            Debug.Print &quot;    &quot; &amp; radii(j)
        Next
    Next i</pre>
<pre>    ' Use the values from the previously called method to set the following values
    Debug.Print &quot;&quot;
    featDef.<b>ThicknessTableName</b> = thicknessNames(3)
    Debug.Print &quot;Table thickness name for this sheet metal part: &quot; &amp; thicknessNames(3)
    'Convert meters to inches by multiplying value by 39.37
    Debug.Print &quot;  Thickness: &quot; &amp; (featDef.<b>TableThickness</b> * 39.37) &amp; &quot; inches&quot;
    </pre>
<pre>    ' Get updated radii for new table, which was previously set
    radii = featDef.<b>GetTableRadii</b>(thicknessNames(3))
    featDef.<b>TableRadius</b> = radii(3)
    'Convert meters to inches by multiplying value by 39.37
    Debug.Print &quot;  Bend radius: &quot; &amp; (radii(3) * 39.37) &amp; &quot; inches&quot;</pre>
<pre>    ' Set override values
    override = False
    If (override = True) Then
        featDef.<b>OverrideRadius</b> = True
        featDef.<b>OverrideThickness</b> = True
        featDef.<b>OverrideKFactor</b> = True
    Else
        featDef.<b>OverrideRadius</b> = False
        featDef.<b>OverrideThickness</b> = False
        featDef.<b>OverrideKFactor</b> = False
    End If</pre>
<pre>    ' If above override value is true, then use following properties to set override value
    If (override = True) Then
        featDef.<b>Thickness</b> = &quot;0.06&quot;
        featDef.<b>BendRadius</b> = 0.012
        featDef.<b>KFactor</b> = 0.75
    End If
   </pre>
<pre>    swModel.<b>ShowNamedView2</b> &quot;*Trimetric&quot;, 8
    boolstatus = swModelDocExt.<b>SelectByID2</b>(&quot;Sketch1&quot;, &quot;SKETCH&quot;, 0, 0, 0, False, 0, Nothing, 0)</pre>
<pre>    ' Create the feature
    Set feat = swFeatMgr.<b>CreateFeature</b>(featDef)</pre>
<pre>End Sub</pre>

</body>

</html>
