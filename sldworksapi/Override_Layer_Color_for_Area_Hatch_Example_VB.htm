<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Override Layer Color for Area Hatch Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=date content="10 11, 2002 4:22:02 PM">
<meta name=MS-HKWD content="VBA examples,layers">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=525>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Override Layer Color for Area Hatch Example (VBA)</h1>

<p>This example shows how to set the color of an area hatch to override the 
color a layer.</p>
<pre>'----------------------------------------------------------------------------
' Preconditions:
' 1. Verify that the specified drawing exists.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Opens the drawing.
' 2. Hatches a face in the drawing.
' 3. Sets the color of the hatch to override the color the layer.
' 4. Inspect the Immediate window.
' 5. Click outside the drawing view and inspect the hatch.
'
' NOTE: Because the drawing is used elsewhere, do not save changes.
'---------------------------------------------------------------------------</pre>
<pre>Dim swApp As SldWorks.SldWorks
Dim swModel As SldWorks.ModelDoc2
Dim swSelMgr As SldWorks.SelectionMgr
Dim swView As SldWorks.View
Dim swSketch As SldWorks.Sketch
Dim vSketchHatch As Variant
Dim swSketchHatch As SldWorks.SketchHatch
Dim swFace As SldWorks.Face2
Dim vID As Variant
Dim i As Long
Dim bRet As Boolean
Dim longstatus As Long, longwarnings As Long</pre>
<pre>Option Explicit</pre>
<pre>Sub main()</pre>
<pre>    Set swApp = Application.SldWorks    
</pre>
<pre>    Set swModel = swApp.<b>OpenDoc6</b>(&quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\api\box.slddrw&quot;, swDocumentTypes_e.swDocDRAWING, 0, &quot;&quot;, longstatus, longwarnings)
    swApp.<b>ActivateDoc2</b> &quot;box - Sheet1&quot;, False, longstatus
    Set swModel = swApp.<b>ActiveDoc</b>   
</pre>
<pre>    bRet = swModel.<b>ActivateView</b>(&quot;Drawing View1&quot;)    
</pre>
<pre>    bRet = swModel.Extension.<b>SelectByID2</b>(&quot;&quot;, &quot;FACE&quot;, 0.246685509728212, 0.236217308689246, 1.49999999999864E-02, True, 0, Nothing, 0)
    swModel.<b>InsertHatchedFace</b>
    swModel.<b>ClearSelection2</b> True    
</pre>
<pre>    bRet = swModel.<b>Extension</b>.<b>SelectByID2</b>(&quot;Drawing View1&quot;, &quot;DRAWINGVIEW&quot;, 0, 0, 0, False, 0, Nothing, 0)    
</pre>
<pre>    Set swSelMgr = swModel.<b>SelectionManager</b>
    Set swView = swSelMgr.<b>GetSelectedObject6</b>(1, -1)
    Set swSketch = swView.<b>GetSketch</b>
    swModel.<b>EditSketch</b></pre>
<pre>    swModel.<b>ClearSelection2</b> True</pre>
<pre>    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b>
    Debug.Print &quot;  &quot; &amp; swView.<b>Name</b></pre>
<pre>    vSketchHatch = swSketch.<b>GetSketchHatches</b></pre>
<pre>    If Not IsEmpty(vSketchHatch) Then</pre>
<pre>        For i = 0 To UBound(vSketchHatch)</pre>
<pre>            Set swSketchHatch = vSketchHatch(i)
            Set swFace = swSketchHatch.<b>GetFace</b></pre>
<pre>            bRet = swSketchHatch.<b>Select4</b>(True, Nothing)
            vID = swSketchHatch.<b>GetID</b></pre>
<pre>            Debug.Print &quot;    Hatch ID(&quot; &amp; i &amp; &quot;): [&quot; &amp; vID(0) &amp; &quot;,&quot; &amp; vID(1) &amp; &quot;]&quot;
            Debug.Print &quot;      Angle: &quot; &amp; swSketchHatch.<b>Angle</b>
            Debug.Print &quot;      Color: &quot; &amp; swSketchHatch.<b>Color</b>
            Debug.Print &quot;      Layer: &quot; &amp; swSketchHatch.<b>Layer</b>
            Debug.Print &quot;      Layer override (bitmask)? &quot; &amp; swSketchHatch.<b>LayerOverride</b>
            Debug.Print &quot;      Pattern: &quot; &amp; swSketchHatch.<b>Pattern</b>
            Debug.Print &quot;      Scale: &quot; &amp; swSketchHatch.<b>Scale2</b>
            Debug.Print &quot;      Solid fill? &quot; &amp; swSketchHatch.<b>SolidFill</b>
            Debug.Print &quot; &quot;
            </pre>
<pre>            'Override layer color; change to red
            Dim overRide As Long
            swSketchHatch.<b>Color</b> = RGB(255, 0, 0)
            overRide = swSketchHatch.<b>LayerOverride</b>
            ' Extract the first bit and get its value
            If (overRide And 1) Then
                Debug.Print &quot;      Hatch color overrode layer color!&quot;
            Else
                Debug.Print &quot;      Hatch color did not override layer color!&quot;
            End If</pre>
<pre>        Next i</pre>
<pre>    End If</pre>
<pre>End Sub</pre>

</body>

</html>
