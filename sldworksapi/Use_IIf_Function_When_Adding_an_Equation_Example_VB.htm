<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Use IIf Function When Adding an Equation Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">

<meta name=MS-HKWD content="VBA examples,IIf function">
<meta name=MS-HKWD content="VBA examples,equations">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1036>
<meta name=layout-width content=1395>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Use IIf Function When Adding an Equation Example (VBA)</h1>

<p>This example shows how to use the Visual Basic IIf function when adding 
 an equation.</p>
<pre>'-----------------------------------------------------------------------
' Preconditions:
' 1. Open <i>public_documents</i><b>\samples\tutorial\api\cover_with_dimensions.sldprt</b>.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Adds an equation using the Visual Basic IIf function.
' 2. Examine the Immediate window.
'
' NOTE: Because the part is used elsewhere, do not save changes.
'-----------------------------------------------------------------------
Option Explicit</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swEqnMgr As SldWorks.EquationMgr
    Dim i As Long
    Dim nCount As Long
    Dim bRet As Boolean</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swEqnMgr = swModel.<b>GetEquationMgr</b>
    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b>
    nCount = swEqnMgr.<b>GetCount</b>
    </pre>
<pre>    ' List the existing equations and their calculated values
    For i = 0 To nCount - 1
        Debug.Print &quot;  Eqn(&quot; &amp; i &amp; &quot;) = &quot; &amp; swEqnMgr.<b>Equation</b>(i)
        Debug.Print &quot;    Value = &quot; &amp; swEqnMgr.<b>Value</b>(i)
    Next i
   </pre>
<pre>   ' Add and solve an equation that uses the Visual Basic IIf function
   ' Delay evaluating the equation by passing false into the third
   ' argument of Add2
    swEqnMgr.<b>Add2</b> i, (&quot;&quot;&quot;TXD2@Scheme15&quot;&quot; = (IIf(&quot;&quot;TXD1@Scheme15&quot;&quot;&gt;20, 25, 20))+3&quot;), False
    Debug.Print &quot;  Eqn(&quot; &amp; i &amp; &quot;) = &quot; &amp; swEqnMgr.<b>Equation</b>(i)</pre>
<pre>    ' Evaluate all equations
    Dim ret As Integer
    ret = swEqnMgr.<b>EvaluateAll</b>
    Debug.Print &quot;    Value = &quot; &amp; swEqnMgr.<b>Value</b>(i)
    Debug.Print &quot;    Index of equation = &quot; &amp; swEqnMgr.<b>Status</b></pre>
<pre>End Sub</pre>

</body>

</html>
