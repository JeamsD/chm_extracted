<html>

<head>
<title>Pack and Go an Assembly (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples,"Pack and Go>

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Pack and Go an Assembly (VBA)</h1>
<p>This example shows how to get the names of the path and files of an assembly 
document, add a prefix and suffix to the names,&nbsp;and save the files to a different path using the Pack and Go 
interface.</p>
<p class="APICODE">
'---------------------------------------------------------------------------<br>
' Preconditions:<br>
' 1. Specified assembly exists.<br>
' 2. The folder, <b>c:\temp</b>, exists.<br>
' 3. Open the Immediate window.<br>
' 4. Run the macro.<br>
'<br>
' Postconditions:<br>
' 1. Prints names of the current path and filenames<br>
'&nbsp;&nbsp;&nbsp; of the assembly documents to the Immediate window.<br>
' 2. Prints names of the default path and filenames to which to<br>
'&nbsp;&nbsp;&nbsp; save assembly documents to Immediate window.<br>
' 3. Specifies the Pack and Go destination folder.<br>
' 4. Specifies that all files get saved to the root directory of the<br>
'&nbsp;&nbsp;&nbsp; Pack and Go destination folder.<br>
' 5. Adds prefix and suffix to user-named filenames.<br>
' 6. Prints names of user-specified path and user-named filenames to<br>
'&nbsp;&nbsp;&nbsp; Immediate window.<br>
' 7. Creates user-named files in user-specified path using Pack and Go.<br>
' 8. Examine <b>c:\temp</b> to verify.<br>
'---------------------------------------------------------------------------</p>
<p class="APICODE"><br>
Option Explicit</p>
<p class="APICODE">Dim swApp As SldWorks.SldWorks<br>
Dim swModelDoc As SldWorks.ModelDoc2<br>
Dim swModelDocExt As SldWorks.ModelDocExtension<br>
Dim swPackAndGo As SldWorks.PackAndGo<br>
Dim openFile As String<br>
Dim pgFileNames As Variant<br>
Dim pgFileStatus As Variant<br>
Dim pgGetFileNames As Variant<br>
Dim pgDocumentStatus As Variant<br>
Dim status As Boolean<br>
Dim warnings As Long<br>
Dim errors As Long<br>
Dim i As Long<br>
Dim namesCount As Long<br>
Dim myPath As String<br>
Dim statuses As Variant<br>
</p>
<p class="APICODE">Sub main()</p>
<blockquote>
	<p class="APICODE">Set swApp = Application.SldWorks</p>
	<p class="APICODE">' Open assembly<br>
	openFile = &quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\advdrawings\handle.sldasm&quot;<br>
	Set swModelDoc = swApp.<b>OpenDoc6</b>(openFile, swDocASSEMBLY, swOpenDocOptions_Silent, &quot;&quot;, errors, warnings)<br>
	Set swModelDocExt = swModelDoc.<b>Extension</b></p>
	<p class="APICODE">' Get Pack and Go object<br>
	Debug.Print &quot;Pack and Go&quot;<br>
	Set swPackAndGo = swModelDocExt.<b>GetPackAndGo</b></p>
	<p class="APICODE">' Get number of documents in assembly<br>
	namesCount = swPackAndGo.<b>GetDocumentNamesCount</b><br>
	Debug.Print &quot;&nbsp; Number of model documents: &quot; &amp; namesCount</p>
	<p class="APICODE">' Include any drawings, SOLIDWORKS Simulation results, 
	and SOLIDWORKS Toolbox components<br>
	swPackAndGo.<b>IncludeDrawings </b>= True<br>
	Debug.Print &quot;&nbsp; Include drawings: &quot; &amp; swPackAndGo.<b>IncludeDrawings<br>
	</b>swPackAndGo.<b>IncludeSimulationResults </b>= True<br>
	Debug.Print &quot;&nbsp; Include SOLIDWORKS Simulation results: &quot; &amp; swPackAndGo.<b>IncludeSimulationResults<br>
	</b>swPackAndGo.<b>IncludeToolboxComponents</b> = True<br>
	Debug.Print &quot;&nbsp; Include SOLIDWORKS Toolbox components: &quot; &amp; swPackAndGo.<b>IncludeToolboxComponents</b></p>
	<p class="APICODE">' Get current paths and filenames of the assembly's documents<br>
	status = swPackAndGo.<b>GetDocumentNames</b>(pgFileNames)<br>
	Debug.Print &quot;&quot;<br>
	Debug.Print &quot;&nbsp; Current path and filenames: &quot;<br>
	If (Not (IsEmpty(pgFileNames))) Then<br>
&nbsp;&nbsp;&nbsp; For i = 0 To UBound(pgFileNames)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; The path and filename is: &quot; &amp; pgFileNames(i)<br>
&nbsp;&nbsp;&nbsp; Next i<br>
	End If</p>
	<p class="APICODE">' Get current save-to paths and filenames of the assembly's documents<br>
	status = swPackAndGo.<b>GetDocumentSaveToNames</b>(pgFileNames, pgFileStatus)<br>
	Debug.Print &quot;&quot;<br>
	Debug.Print &quot;&nbsp; Current default save-to filenames: &quot;<br>
	If (Not (IsEmpty(pgFileNames))) Then<br>
&nbsp;&nbsp;&nbsp; For i = 0 To UBound(pgFileNames)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp; The path and filename is: &quot; &amp; pgFileNames(i)<br>
&nbsp;&nbsp;&nbsp; Next i<br>
	End If</p>
	<p class="APICODE">' Set folder where to save the files<br>
	myPath = &quot;C:\temp\&quot;<br>
	status = swPackAndGo.<b>SetSaveToName</b>(True, myPath)<br>
	</p>
	<p class="APICODE">' Flatten the Pack and Go folder structure; save all 
	files to the root directory<br>
	swPackAndGo.<b>FlattenToSingleFolder</b> = True</p>
	<p class="APICODE">' Add a prefix and suffix to the new Pack and Go filenames<br>
	swPackAndGo.<b>AddPrefix</b> = &quot;SW_&quot;<br>
	swPackAndGo.<b>AddSuffix</b> = &quot;_PackAndGo&quot;<br>
	</p>
	<p class="APICODE">&nbsp;' Verify document paths and filenames after adding prefix and suffix<br>
	ReDim pgGetFileNames(namesCount - 1)<br>
	ReDim pgDocumentStatus(namesCount - 1)<br>
	status = swPackAndGo.<b>GetDocumentSaveToNames</b>(pgGetFileNames, pgDocumentStatus)<br>
	Debug.Print &quot;&quot;<br>
	Debug.Print &quot;&nbsp; My Pack and Go path and filenames after adding prefix and suffix: &quot;<br>
	For i = 0 To (namesCount - 1)<br>
&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; My path and filename is: &quot; &amp; pgGetFileNames(i)<br>
	Next i<br>
	</p>
	<p class="APICODE">' Pack and Go<br>
	statuses = swModelDocExt.<b>SavePackAndGo</b>(swPackAndGo)<br>
	</p>
</blockquote>
<p class="APICODE">End Sub</p>
<p>&nbsp;</p>

</body>

</html>
