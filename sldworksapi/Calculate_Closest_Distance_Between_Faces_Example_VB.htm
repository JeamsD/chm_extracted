<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Calculate Closest Distance Between Faces Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2554>
<meta name=layout-width content=723>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">


 <META NAME="MS-HKWD" CONTENT="VBA examples,faces">
</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Calculate Closest Distance Between Faces Example (VBA)</h1>

<p>This example shows how to calculate the closest distance between two 
 faces.</p>

<p><b>NOTE: </b>The SOLIDWORKS user interface can measure the distance between 
two selected faces. The corresponding method for this functionality is 
IModelDoc2::ClosestDistance. If any of the faces is cylindrical, then the 
measurement point is taken from the axis of the cylinder. This is by design and 
the intended behavior. However, in some circumstances, this measurement might 
not be appropriate. For example, the minimum amount of material between two 
holes is normally measured between the cylindrical faces and not between the 
axes. This sample code shows how to detect such situations and to calculate the 
distance between faces.</p>
<pre>'-----------------------------------------------
' Preconditions:
' 1. Open a part or fully resolved assembly.
' 2. Select two faces that do not intersect.
' 3. Open the Immediate window.
'
' Postconditions:
' 1. Inserts a 3D sketch using the results from
'    the user-interface Measure tool.
' 2. Inserts a 3D sketch showing closest distance
'    between faces.
' 3. Examine the Immediate window, FeatureManager
'    tree, and graphics area.
'-----------------------------------------------
Option Explicit</pre>
<pre>Sub CreateLine(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, vPt1 As Variant, vPt2 As Variant)
    Dim swSketchSeg  As SldWorks.SketchSegment
    Dim bRet As Boolean    </pre>
<pre>    swModel.<b>SetAddToDB</b> True
    swModel.<b>Insert3DSketch2</b> False
    Set swSketchSeg = swModel.<b>CreateLine2</b>(vPt1(0), vPt1(1), vPt1(2), vPt2(0), vPt2(1), vPt2(2))
    swModel.<b>SetAddToDB</b> False
    swModel.<b>Insert3DSketch2</b> True
    bRet = swModel.<b>EditRebuild3</b>
End Sub</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swSelMgr As SldWorks.SelectionMgr
    Dim swFace1 As SldWorks.Face2
    Dim swFace2 As SldWorks.Face2
    Dim swSurf1 As SldWorks.Surface
    Dim swSurf2 As SldWorks.Surface
    Dim vPoint1 As Variant
    Dim vPoint2 As Variant
    Dim vClosestPt1 As Variant
    Dim vClosestPt2 As Variant
    Dim nDist As Double</pre>
<pre>    Set swApp = CreateObject(&quot;SldWorks.Application&quot;)
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swSelMgr = swModel.<b>SelectionManager</b>
    Set swFace1 = swSelMgr.<b>GetSelectedObject6</b>(1, -1)
    Set swFace2 = swSelMgr.<b>GetSelectedObject6</b>(2, -1)
    Set swSurf1 = swFace1.<b>GetSurface</b>
    Set swSurf2 = swFace2.<b>GetSurface</b></pre>
<pre>    'Get the result of the measure command
    'Need the points returned
    nDist = swModel.<b>ClosestDistance</b>(swFace1, swFace2, vPoint1, vPoint2)
    Debug.Print &quot; ClosestDistance = &quot; &amp; nDist * 1000# &amp; &quot; mm&quot;</pre>
<pre>    CreateLine swApp, swModel, vPoint1, vPoint2</pre>
<pre>    'Use the points returned by the user-interface Measure tool
    'to get the nearest point actually on the faces in question.
    If swSurf1.IsCylinder Then
        'Measure has returned the center point,
        'so use the point on the other surface
        vClosestPt1 = swFace1.<b>GetClosestPointOn</b>(vPoint2(0), vPoint2(1), vPoint2(2))
    Else
        'Probably on the surface, but just to be sure
        vClosestPt1 = swFace1.<b>GetClosestPointOn</b>(vPoint1(0), vPoint1(1), vPoint1(2))
    End If</pre>
<pre>    If swSurf2.IsCylinder Then
        'Measure tool returned the center point, so use
        'the point on the other surface
        vClosestPt2 = swFace2.<b>GetClosestPointOn</b>(vPoint1(0), vPoint1(1), vPoint1(2))
    Else
        'Probably on the surface, but just to be sure
        vClosestPt2 = swFace2.<b>GetClosestPointOn</b>(vPoint2(0), vPoint2(1), vPoint2(2))
    End If</pre>
<pre>    nDist = Sqr((vClosestPt1(0) - vClosestPt2(0)) ^ 2 + (vClosestPt1(1) - vClosestPt2(1)) ^ 2 + (vClosestPt1(2) - vClosestPt2(2)) ^ 2)
    Debug.Print &quot; Distance = &quot; &amp; nDist * 1000# &amp; &quot; mm&quot;</pre>
<pre>    CreateLine swApp, swModel, vClosestPt1, vClosestPt2</pre>
<pre>End Sub</pre>

</body>

</html>
