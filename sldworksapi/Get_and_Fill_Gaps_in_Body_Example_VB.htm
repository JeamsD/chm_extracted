<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get and Fill Gaps in Body Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,fill-surface feature">
<meta name=MS-HKWD content="VBA examples,gaps">
<meta name=MS-HKWD content="VBA examples,diagnose">
<meta name=MS-HKWD content="VBA examples,features">
<meta name=MS-HKWD content="VBA examples,bodies">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2305>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Get and Fill Gaps in Body Example (VBA)</h1>

<p>This example shows how to get and fill the gaps in a body.</p>

<pre>'---------------------------------------------------------------
' Preconditions:
' 1. Open a model document that contains at least one body
'    with one or more gaps.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Identifies the number of gaps in each
'    body and fills each gap with a fill-surface
'    feature.
' 2. Examine the Immediate window and the FeatureManager
'    design tree.
'---------------------------------------------------------------</pre>
<pre>Option Explicit</pre>
<pre>Sub ProcessBody(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swBody As SldWorks.Body2)</pre>
<pre>    Dim nRetval1 As Long
    Dim nRetval2 As Long
    Dim swDiagnose As SldWorks.DiagnoseResult
    Dim vCoEdgeArr As Variant
    Dim vCoEdge As Variant
    Dim swCoEdge As SldWorks.CoEdge
    Dim swEdge As SldWorks.Edge
    Dim swEnt As SldWorks.Entity
    Dim swSelMgr As SldWorks.SelectionMgr
    Dim swSelData As SldWorks.SelectData
    Dim swFeatMgr As SldWorks.FeatureManager
    Dim swFeat As SldWorks.Feature
    Dim swFaultEnt as SldWorks.FaultEntity
    Dim nNumGap As Long
    Dim i As Long
    Dim bRet As Boolean</pre>
<pre>    Set swSelMgr = swModel.<b>SelectionManager</b>
    Set swSelData = swSelMgr.<b>CreateSelectData</b>
    Set swFeatMgr = swModel.<b>FeatureManager</b>
    Set swDiagnose = swBody.<b>Diagnose</b>
    Set swFaultEnt = swBody.<b>Check3</b>
    nRetval1 = swFaultEnt.<b>Count</b>
    Set swFaultEnt = swBody.<b>Check3</b>
    nRetval2 = swFaultEnt.<b>Count</b>
    swSelData.<b>Mark</b> = 257
    nNumGap = swDiagnose.<b>GetGapsCount</b>
        </pre>
<pre>    Debug.Print &quot;    Body check1                        = &quot; &amp; nRetval1
    Debug.Print &quot;      Body check2 (Number of faults)   = &quot; &amp; nRetval2
    Debug.Print &quot;    Number of gaps                     = &quot; &amp; nNumGap
    </pre>
<pre>    For i = 1 To nNumGap
        swModel.<b>ClearSelection2</b> True
        vCoEdgeArr = swDiagnose.<b>GetCoEdgesAtGap</b>(i - 1)
        For Each vCoEdge In vCoEdgeArr
            Set swCoEdge = vCoEdge
            Set swEdge = swCoEdge.<b>GetEdge</b>
            Set swEnt = swEdge
            bRet = swEnt.<b>Select4</b>(True, swSelData)
        Next vCoEdge
        Set swFeat = swFeatMgr.<b>InsertFillSurface2</b>(3, swOptimizeSurface, swSelData, swContact, Nothing, Nothing)
    Next i
</pre>
<pre>End Sub</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swPart As SldWorks.PartDoc
    Dim vBodyArr As Variant
    Dim vBody As Variant
    Dim swBody As SldWorks.Body2
    Dim i As Long
    
    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swPart = swModel
    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b>
    For i = 0 To 5
        vBodyArr = swPart.<b>GetBodies2</b>(i, False)
        If Not IsEmpty(vBodyArr) Then
            Debug.Print &quot;  NumBody[&quot; &amp; i &amp; &quot;] = &quot; &amp; UBound(vBodyArr) + 1
            For Each vBody In vBodyArr
                Set swBody = vBody
                ProcessBody swApp, swModel, swBody
            Next vBody
        End If
    Next i</pre>
<pre>End Sub</pre>

</body>

</html>
