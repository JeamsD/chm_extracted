<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Add Component and Mate Example (C++ COM)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta NAME=MS-HAID CONTENT=EXAddComponentAndMateCPLUSPLUS>
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=3644>
<meta name=layout-width content=630>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1><a name=Top></a>Add Component and Mate Example (C++ COM)</h1>

<p>This example shows how to add a component and mate to an assembly.</p>

<ul style="list-style: disc;"
	type=disc>
	
	<li class=kadov-p><p style="font-weight: bold;"><a href="#AddMate">AddMate.cpp</a></p></li>
	
	<li class=kadov-p><p style="font-weight: bold;"><a href="#stdafx"
														style="font-weight: bold;">stdafx.h</a></p></li>
	
	<li class=kadov-p><p style="font-weight: bold;"><a href="#stdcpp">stdafx.cpp</a></p></li>
</ul>

<h3><a name=AddMate></a>AddMate.cpp</h3>

<p class=apiCode>////////////////////////////////////////////////////////////</p>

<p class=apiCode>//</p>

<p class=apiCode>// Preconditions: The specified assembly (<span style="font-weight: bold;">lens_mount.sldasm</span>) 
 and component </p>

<p class=apiCode>// <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->(<span 
 style="font-weight: bold;">camtest.sldprt</span>) files exist.</p>

<p class=apiCode>//</p>

<p class=apiCode>// <span style="font-weight: bold;">NOTE:</span> The assembly 
 and component files are installed when you </p>

<p class=apiCode>// <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->install 
 SOLIDWORKS and are intended for the SOLIDWORKS Toolbox </p>

<p class=apiCode>// <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->tutorial, 
 so do not save the assembly after running the program. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode>//</p>

<p class=apiCode>// Postconditions: The component and a mate, called <span 
 style="font-weight: bold;">top_coinc_camtest-1</span>, </p>

<p class=apiCode>// <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->are 
 added to the assembly.</p>

<p class=apiCode>//</p>

<p class=apiCode>///////////////////////////////////////////////////////////</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>#include &quot;stdafx.h&quot;</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>using namespace std;</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>int _tmain(int argc, _TCHAR* argv[])</p>

<p class=apiCode>{</p>

<p class=apiCode
	style="margin-left: 49px;">//Initialize COM</p>

<p class=apiCode
	style="margin-left: 49px;">CoInitialize(NULL);</p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">//Use ATL smart pointers</p>

<p class=apiCode
	style="margin-left: 49px;">CComPtr&lt;ISldWorks&gt; swApp;</p>

<p class=apiCode
	style="margin-left: 49px;">CComPtr&lt;IModelDoc2&gt; swModel;</p>

<p class=apiCode
	style="margin-left: 49px;">CComPtr&lt;IModelDocExtension&gt; swDocExt;</p>

<p class=apiCode
	style="margin-left: 49px;">CComPtr&lt;IAssemblyDoc&gt; swAssy;</p>

<p class=apiCode
	style="margin-left: 49px;">CComPtr&lt;IComponent2&gt; swComponent;</p>

<p class=apiCode
	style="margin-left: 49px;">CComPtr&lt;IFeature&gt; mateFeature;</p>

<p class=apiCode
	style="margin-left: 49px;">CComPtr&lt;IModelDoc2&gt; tmpObj;</p>

<p class=apiCode
	style="margin-left: 49px;">CComPtr&lt;IMate2&gt; swMate;</p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">long lErrors;</p>

<p class=apiCode
	style="margin-left: 49px;">long lWarnings;</p>

<p class=apiCode
	style="margin-left: 49px;">long lMateError;</p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">HRESULT hres = NOERROR;</p>

<p class=apiCode
	style="margin-left: 49px;">VARIANT_BOOL retVal = VARIANT_FALSE;</p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">//Connect to currently running instance 
 of SOLIDWORKS</p>

<p class=apiCode
	style="margin-left: 49px;">hres = swApp.CoCreateInstance(__uuidof(SldWorks), 
 NULL, CLSCTX_LOCAL_SERVER);</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">//Open the assembly document</p>

<p class=apiCode
	style="margin-left: 49px;">CComBSTR sAssemblyName(L&quot;C:\\Users\\Public\\Documents\\SOLIDWORKS\\SOLIDWORKS 2018\\samples\\tutorial\\toolbox\\lens_mount.sldasm&quot;);</p>

<p class=apiCode
	style="margin-left: 49px;">CComBSTR sDefaultConfiguration(L&quot;Default&quot;);</p>

<p class=apiCode
	style="margin-left: 49px;">swApp-&gt;<span style="font-weight: bold;">OpenDoc6</span>(sAssemblyName, 
 swDocASSEMBLY, swOpenDocOptions_Silent, sDefaultConfiguration, &amp;lErrors, 
 &amp;lWarnings, &amp;swModel);</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">swModel = NULL;</p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">//Open the component (part) document </p>

<p class=apiCode
	style="margin-left: 49px;">CComBSTR sCompName(L&quot;C:\\Users\\Public\\Documents\\SOLIDWORKS\\SOLIDWORKS 2018\\samples\\tutorial\\toolbox\\camtest.sldprt&quot;);</p>

<p class=apiCode
	style="margin-left: 49px;">swApp-&gt;<span style="font-weight: bold;">OpenDoc6</span>(sCompName, 
 swDocPART, swOpenDocOptions_Silent, sDefaultConfiguration, &amp;lErrors, 
 &amp;lWarnings, &amp;tmpObj);</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">//Re-activate the assembly document</p>

<p class=apiCode
	style="margin-left: 49px;">swApp-&gt;<span style="font-weight: bold;">IActivateDoc3</span>(sAssemblyName, 
 true, &amp;lErrors, &amp;swModel);</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">swAssy = swModel;</p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">//Add the component to the assembly</p>

<p class=apiCode
	style="margin-left: 49px;">swAssy-&gt;<span style="font-weight: bold;">AddComponent4</span>(sCompName, 
 sDefaultConfiguration, -1, -1, -1, &amp;swComponent);</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">//Concatenate strings for name of mate</p>

<p class=apiCode
	style="margin-left: 49px;">CComBSTR sMateName(L&quot;top_coinc_&quot;);</p>

<p class=apiCode
	style="margin-left: 49px;">CComBSTR sCompMateName (L&quot;&quot;);</p>

<p class=apiCode
	style="margin-left: 49px;">swComponent-&gt;<span style="font-weight: bold;">get_Name2</span>(&amp;sCompMateName);</p>

<p class=apiCode
	style="margin-left: 49px;">sMateName.AppendBSTR(sCompMateName);</p>

<p class=apiCode
	style="margin-left: 49px;">CComBSTR sFullCompMateName = sMateName;</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">//Concatenate strings for name of first 
 selection: Top plane of component</p>

<p class=apiCode
	style="margin-left: 49px;">CComBSTR sFirstSelection(L&quot;Top@&quot;);</p>

<p class=apiCode
	style="margin-left: 49px;">sFirstSelection.AppendBSTR(sCompMateName);</p>

<p class=apiCode
	style="margin-left: 49px;">CComBSTR sAtSign(L&quot;@&quot;);</p>

<p class=apiCode
	style="margin-left: 49px;">sFirstSelection.AppendBSTR(sAtSign);</p>

<p class=apiCode
	style="margin-left: 49px;">CComBSTR sAssemblyFilename(L&quot;lens_mount&quot;);</p>

<p class=apiCode
	style="margin-left: 49px;">sFirstSelection.AppendBSTR(sAssemblyFilename);</p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">//Second selection: Front plane of assembly</p>

<p class=apiCode
	style="margin-left: 49px;">CComBSTR sSecondSelection(L&quot;Front@&quot;);</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">//Adjust the view so that you can see the 
 assembly and the added component</p>

<p class=apiCode
	style="margin-left: 49px;">CComBSTR sNamedView(L&quot;*Trimetric&quot;);</p>

<p class=apiCode
	style="margin-left: 49px;">swModel-&gt;<span style="font-weight: bold;">ShowNamedView2</span>(sNamedView, 
 -1);</p>

<p class=apiCode
	style="margin-left: 49px;">swModel-&gt;<span style="font-weight: bold;">ViewZoomtofit2</span>();</p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">swModel-&gt;<span style="font-weight: bold;">ClearSelection2</span>(true);</p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">swModel-&gt;<span style="font-weight: bold;">get_Extension</span>(&amp;swDocExt);</p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">//Select the planes to mate</p>

<p class=apiCode
	style="margin-left: 49px;">CComBSTR sPlane(L&quot;PLANE&quot;);</p>

<p class=apiCode
	style="margin-left: 49px;">swDocExt-&gt;<span style="font-weight: bold;">SelectByID2</span>(sFirstSelection, 
 sPlane, 0, 0, 0, true, 1, NULL, swSelectOptionDefault, &amp;retVal);</p>

<p class=apiCode
	style="margin-left: 49px;">swDocExt-&gt;<span style="font-weight: bold;">SelectByID2</span>(sSecondSelection, 
 sPlane, 0, 0, 0, true, 1, NULL, swSelectOptionDefault, &amp;retVal);</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode
	style="margin-left: 49px;">//Mate the selected entitities</p>

<p class=apiCode
	style="margin-left: 49px;">swAssy-&gt;<span style="font-weight: bold;">AddMate3</span>(swMateCOINCIDENT, 
 swMateAlignALIGNED, false, 0, 0, 0, 0, 0, 0, 0, 0, false, &amp;lMateError, 
 &amp;swMate);</p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">//Set the name of the mate feature</p>

<p class=apiCode
	style="margin-left: 49px;">mateFeature = swMate;</p>

<p class=apiCode
	style="margin-left: 49px;">mateFeature-&gt;<span style="font-weight: bold;">put_Name</span>(sFullCompMateName);</p>

<p class=apiCode
	style="margin-left: 49px;">&nbsp;</p>

<p class=apiCode
	style="margin-left: 49px;">return 0;</p>

<p class=apiCode>}</p>

<p class=apiCode>&nbsp;</p>

<p style="text-align: center;"
	align=center><a href="#Top">Back to top</a></p>

<h3><a name=stdafx></a>stdafx.h</h3>

<p class=apiCode>/// stdafx.h : include file for standard system include 
 files,</p>

<p class=apiCode>// or project-specific include files that are used frequently, 
 but</p>

<p class=apiCode>// are changed infrequently</p>

<p class=apiCode>//</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>#pragma once</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>#define WIN32_LEAN_AND_MEAN // Exclude rarely-used stuff 
 from Windows headers</p>

<p class=apiCode>#include &lt;stdio.h&gt;</p>

<p class=apiCode>#include &lt;tchar.h&gt;</p>

<p class=apiCode>#define _ATL_CSTRING_EXPLICIT_CONSTRUCTORS // some CString 
 constructors will be explicit</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>#include &lt;windows.h&gt;</p>

<p class=apiCode>#include &lt;atlbase.h&gt;</p>

<p class=apiCode>#include &lt;iostream&gt;</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>using namespace std; <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->//Use 
 the standard C++ libraries for text output.</p>

<p class=apiCode>#import &quot;sldworks.tlb&quot; raw_interfaces_only, 
 raw_native_types, no_namespace, named_guids <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->//the 
 SOLIDWORKS type library</p>

<p class=apiCode>#import &quot;swconst.tlb&quot; <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->raw_interfaces_only, 
 raw_native_types, no_namespace, named_guids <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->//the 
 SOLIDWORKS constant type library</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>// TODO: reference additional headers your program requires 
 here</p>

<p class=apiCode>&nbsp;</p>

<p style="text-align: center;"
	align=center><a href="#Top">Back to top</a></p>

<h3><a name=stdcpp></a>stdafx.cpp</h3>

<p class=apiCode>// stdafx.cpp : source file that includes just the standard 
 includes</p>

<p class=apiCode>// AddMates.pch will be the pre-compiled header</p>

<p class=apiCode>// stdafx.obj will contain the pre-compiled type information</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>#include &quot;stdafx.h&quot;</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>// TODO: reference any additional headers you need in 
 STDAFX.H</p>

<p class=apiCode>// and not in this file</p>

<p class=apiCode>&nbsp;</p>

<p style="text-align: center;"
	align=center><a href="#Top">Back to top</a></p>

</body>

</html>
