<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Traverse Assembly and Hide All Sketches Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta NAME=MS-HAID CONTENT=EXTraverseAssemblyHideAllSketches>
<meta name=MS-HKWD content="Hide,sketches">
<meta name=MS-HKWD content="Traverse,assemblies">
<meta name=MS-HKWD content="Sketch (see also ISketch Interface),hide">
<meta name=MS-HKWD content="Iterate,assemblies">
<meta name=MS-HKWD content="Iterate">
<meta name=MS-HKWD content="VBA examples,assemblies">
<meta name=MS-HKWD content="VBA examples,sketches">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=3785>
<meta name=layout-width content=1395>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Traverse Assembly and Hide All Sketches Example (VBA)</h1>

<p>This example shows how to traverse an assembly and hide all sketches.</p>

<pre>'------------------------------------------------------------------
' Preconditions:
' 1. Open an assembly document.
' 2. In the FeatureManager design tree, show some sketches by
'    expanding a component, expanding one or more features
'    in that component, right-clicking each sketch in each of
'    the expanded features, and clicking <b>Show</b> in each
'    context-sensitive menu.
' 3. Examine the graphics area and locate the shown sketches.
' 4. Open the Immediate window.
'
' Postconditions:
' 1. Opens the specified assembly document.
' 2. Hides all shown sketches in the assembly.
' 3. Examine the Immediate window and the graphics area.
'------------------------------------------------------------------
Option Explicit</pre>
<pre>Sub BlankSketchFeature(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swFeat As SldWorks.Feature)
    Dim bRet  As Boolean
    If &quot;ProfileFeature&quot; = swFeat.<b>GetTypeName</b> Then
        bRet = swFeat.<b>Select2</b>(False, 0): Debug.Assert bRet
        swModel.<b>BlankSketch</b>
    End If
End Sub</pre>
<pre>Sub TraverseFeatureFeatures(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swFeat As SldWorks.Feature, nLevel As Long)
    Dim swSubFeat As SldWorks.Feature
    Dim swSubSubFeat As SldWorks.Feature
    Dim swSubSubSubFeat As SldWorks.Feature
    Dim sPadStr As String
    Dim i As Long</pre>
<pre>    For i = 0 To nLevel
        sPadStr = sPadStr + &quot;  &quot;
    Next i</pre>
<pre>    Dim bRet As Boolean</pre>
<pre>    If &quot;Annotations&quot; &lt;&gt; swFeat.<b>Name</b> Then
        bRet = swFeat.<b>Select2</b>(True, 0): Debug.Assert bRet
    End If</pre>
<pre>    While Not swFeat Is Nothing
        Debug.Print sPadStr + swFeat.<b>Name</b> + &quot; [&quot; + swFeat.<b>GetTypeName</b> + &quot;]&quot;
        BlankSketchFeature swApp, swModel, swFeat
        Set swSubFeat = swFeat.<b>GetFirstSubFeature</b>
        While Not swSubFeat Is Nothing
            Debug.Print sPadStr + &quot;  &quot; + swSubFeat.<b>Name</b> + &quot; [&quot; + swSubFeat.<b>GetTypeName</b> + &quot;]&quot;
            BlankSketchFeature swApp, swModel, swSubFeat
            Set swSubSubFeat = swSubFeat.<b>GetFirstSubFeature</b>
            While Not swSubSubFeat Is Nothing
                Debug.Print sPadStr + &quot;    &quot; + swSubSubFeat.<b>Name</b> + &quot; [&quot; + swSubSubFeat.<b>GetTypeName</b> + &quot;]&quot;
                BlankSketchFeature swApp, swModel, swSubSubFeat
                Set swSubSubSubFeat = swSubFeat.<b>GetFirstSubFeature</b>
                While Not swSubSubSubFeat Is Nothing
                    Debug.Print sPadStr + &quot;      &quot; + swSubSubSubFeat.<b>Name</b> + &quot; [&quot; + swSubSubSubFeat.<b>GetTypeName</b> + &quot;]&quot;
                    BlankSketchFeature swApp, swModel, swSubSubSubFeat
                    Set swSubSubSubFeat = swSubSubSubFeat.<b>GetNextSubFeature</b>()
                Wend
                Set swSubSubFeat = swSubSubFeat.<b>GetNextSubFeature</b>()
            Wend
            Set swSubFeat = swSubFeat.<b>GetNextSubFeature</b>()
        Wend
        Set swFeat = swFeat.<b>GetNextFeature</b>
    Wend
End Sub</pre>
<pre>Sub TraverseComponentFeatures(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swComp As SldWorks.Component2, nLevel As Long)
    Dim swFeat As SldWorks.Feature

    Set swFeat = swComp.<b>FirstFeature</b>
    TraverseFeatureFeatures swApp, swModel, swFeat, nLevel
End Sub</pre>
<pre>Sub TraverseComponent(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swComp As SldWorks.Component2, nLevel As Long)
    Dim vChildComp As Variant
    Dim swChildComp As SldWorks.Component2
    Dim swCompConfig As SldWorks.Configuration
    Dim sPadStr As String
    Dim i As Long</pre>
<pre>    For i = 0 To nLevel - 1
        sPadStr = sPadStr + &quot;  &quot;
    Next i</pre>
<pre>    vChildComp = swComp.<b>GetChildren</b>
    For i = 0 To UBound(vChildComp)
        Set swChildComp = vChildComp(i)
        Debug.Print sPadStr &amp; &quot;+&quot; &amp; swChildComp.<b>Name2</b> &amp; &quot; &lt;&quot; &amp; swChildComp.<b>ReferencedConfiguration</b> &amp; &quot;&gt;&quot;
        TraverseComponentFeatures swApp, swModel, swChildComp, nLevel
        TraverseComponent swApp, swModel, swChildComp, nLevel + 1
    Next i
End Sub</pre>
<pre>Sub TraverseModelFeatures(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, nLevel As Long)
    Dim swFeat As SldWorks.Feature

    Set swFeat = swModel.<b>FirstFeature
</b>    TraverseFeatureFeatures swApp, swModel, swFeat, nLevel
End Sub</pre>
<pre>Sub main()
    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swConf As SldWorks.Configuration
    Dim swRootComp As SldWorks.Component2
    Dim nStart As Long
    Dim bRet As Boolean

    Set swApp = Application.SldWorks 
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swConf = swModel.<b>GetActiveConfiguration</b>
    Set swRootComp = swConf.<b>GetRootComponent3</b>(True)</pre>
<pre>    nStart = Timer</pre>
<pre>    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b>    </pre>
<pre>    ' Traverse the assembly and hide all shown sketches
    TraverseModelFeatures swApp, swModel, 1
    TraverseComponent swApp, swModel, swRootComp, 1    </pre>
<pre>    Debug.Print &quot;&quot;
    Debug.Print &quot;Time to traverse the assembly = &quot; &amp; Timer - nStart &amp; &quot; seconds&quot;
    </pre>
<pre>End Sub
</pre>

</body>

</html>
