<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Fire Events When Display State Changes Example (VB.NET)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="Display,states">
<meta name=MS-HKWD content="VB.NET examples,display states">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1697>
<meta name=layout-width content=951>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Fire Events When Display State Changes Example (VB.NET)</h1>

<p>This example shows how to fire the events related to changing display 
 states of a configuration in an assembly document. </p>

<pre>'---------------------------------------------------------------
' Preconditions: 
' 1. Open an assembly document that has a configuration with multiple
'    display states.
' 2. Run this macro in debug mode.
' 3. Change the display state of the active configuration in SOLIDWORKS
'    (click the ConfigurationManager tab and double-click
'    a different display state).
'
' Postconditions:
' 1. Displays a message box informing you that the display state is about to
'    change.
' 2. After the display state changes, displays another message informing you
'    that the display state has changed.
'
' NOTE: This example also fires these events when you change
' configurations in an assembly document.
'---------------------------------------------------------------
Option Explicit On</pre>

<p class=APICODE>Imports SolidWorks.Interop.sldworks<br>
Imports SolidWorks.Interop.swconst<br>
Imports System<br>
Imports System.Diagnostics<br>
Imports System.Collections<br>
<br>
Partial Class SolidWorksMacro</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Public 
 WithEvents swAssem As AssemblyDoc</p>

<p class=APICODE><br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Public 
 Sub Main()</p>

<p class=APICODE>&nbsp;</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swModel As ModelDoc2<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 openAssem As Hashtable</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swModel 
 = swApp.<span style="font-weight: bold;">ActiveDoc<br>
<br>
</span><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->'Set 
 up events<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swAssem 
 = swModel<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->openAssem 
 = New Hashtable<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->AttachEventHandlers()<br>
<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->End 
 Sub</p>

<p class=APICODE>&nbsp;</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Sub 
 AttachEventHandlers()<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->AttachSWEvents()<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->End 
 Sub</p>

<p class=APICODE>&nbsp;</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Sub 
 AttachSWEvents()<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->AddHandler 
 swAssem.<span style="font-weight: bold;">ActiveDisplayStateChangePreNotify</span>, 
 AddressOf Me.swAssem_<span style="font-weight: bold;">ActiveDisplayStateChangePreNotify<br>
</span><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->AddHandler 
 swAssem.<span style="font-weight: bold;">ActiveDisplayStateChangePostNotify</span>, 
 AddressOf Me.swAssem_<span style="font-weight: bold;">ActiveDisplayStateChangePostNotify<br>
</span><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->End 
 Sub</p>

<p class=APICODE>&nbsp;</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Private 
 Function swAssem_<span style="font-weight: bold;">ActiveDisplayStateChangePreNotify</span>() 
 As Integer<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->'Send 
 message when user changes display state in the ConfigurationManager<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->MsgBox(&quot;The 
 active configuration's display state is about to change.&quot;)<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->End 
 Function</p>

<p class=APICODE>&nbsp;</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Private 
 Function swAssem_<span style="font-weight: bold;">ActiveDisplayStateChangePostNotify</span>(ByVal 
 DisplayStateName As String) As Integer<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->'Send 
 message after user changes display state in the ConfigurationManager<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->MsgBox(&quot;The 
 active configuration's display state has changed.&quot;)<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->End 
 Function</p>

<p class=APICODE>&nbsp;</p>

<p class=APICODE><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->''' 
 &lt;summary&gt;<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->''' 
 The SldWorks swApp variable is pre-assigned for you.<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->''' 
 &lt;/summary&gt;<br>
<!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Public 
 swApp As SldWorks</p>

<p class=APICODE>End Class</p>

</body>

</html>
