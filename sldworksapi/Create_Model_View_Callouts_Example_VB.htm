<html>

<head>
<title>Create a Callout in a Model View Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples,callouts">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Create a Callout in a Model View Example (VBA)</h1>
<p>This example shows how to create a callout in a model view.</p>

<pre>'----------------------------------------------------------------------------
' Preconditions: &nbsp;
' 1. Open a part document.
' 2. Select:
' <b>   Tools &gt; References &gt; SOLIDWORKS &lt;version&gt; exposed type 
'    libraries for add-in use</b>.
' 3. Copy <a href="#class1">Class1</a> to a class module named CalloutHandler.
'
' Postconditions:
' 1. A callout with one row is created in the first model view.
' 2. Press F5 three more times to add a callout to three other model views.
'
' NOTE: Because the model is used elsewhere,
' do not save changes when closing it.
' ---------------------------------------------------------------------------</pre>
<p class="APICODE">Option Explicit<br>
Dim swApp As SldWorks.SldWorks<br>
Dim swModelDoc As SldWorks.ModelDoc2<br>
Dim swModelDocExtn As SldWorks.ModelDocExtension<br>
Dim ViewMgr As ModelViewManager<br>
Dim swModelView As ModelView<br>
Dim Viewcallout As SldWorks.Callout<br>
Dim handle As New CalloutHandler</p>
<p class="APICODE">Sub main()</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swApp = Application.SldWorks<br>
&nbsp;&nbsp;&nbsp; Set swModelDoc = swApp.ActiveDoc<br>
&nbsp;&nbsp;&nbsp; Set swModelDocExtn = swModelDoc.Extension</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set ViewMgr = swModelDoc.ModelViewManager<br>
&nbsp;&nbsp;&nbsp; ViewMgr.ViewportDisplay = 
swViewportDisplay_e.swViewportFourView<br>
&nbsp;&nbsp;&nbsp; swModelDoc.GetModelViewCount<br>
&nbsp;&nbsp;&nbsp; Set swModelView = swModelDoc.GetFirstModelView<br>
&nbsp;&nbsp;&nbsp; While (Not swModelView Is Nothing)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set Viewcallout = swModelView.<b>CreateCallout</b>(1, 
handle)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Viewcallout.Label2(0) = &quot;TEST&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Viewcallout.SkipColon = False<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Viewcallout.ValueInactive(0) = True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Call Viewcallout.SetTargetPoint(0, 
0#, 0#, 0#)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Viewcallout.Display (True)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stop<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set swModelView = swModelView.GetNext<br>
&nbsp;&nbsp;&nbsp; Wend</p>
<p class="APICODE">End Sub</p>
<p>'<a name="class1">Class1</a>:</p>

<p class="APICODE">Implements SwCalloutHandler</p>
<p class="APICODE">Private Function SwCalloutHandler_OnStringValueChanged(ByVal 
pManipulator As Object, ByVal RowID As Long, ByVal Text As String) As Boolean</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print (&quot;Text: &quot; &amp; Text)<br>
&nbsp;&nbsp;&nbsp; Debug.Print (&quot;Row: &quot; &amp; RowID)<br>
&nbsp;&nbsp;&nbsp; SwCalloutHandler_OnStringValueChanged = True</p>
<p class="APICODE">End Function</p>

</body>

</html>
