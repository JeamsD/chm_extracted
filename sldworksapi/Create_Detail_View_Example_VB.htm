<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Create Detail View Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta NAME=MS-HAID CONTENT=EXCreateDetailView>
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=881>
<meta name=layout-width content=723>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Create Detail View Example (VBA)</h1>

<p>This example shows how to create a detail view.</p>

<p>A named view is activated and a circle centered about the view's origin 
 is created. A detail view is then created at the origin of the sheet. 
 If you modify the macro to adjust the values to different locations, you 
 can see how the values affect the results. </p>

<p>The 1,1,0 represent 1m,1m,0m in sheet space. Most APIs expect units 
 of meters and radians for length and angle values, respectively.</p>

<p><span style="font-weight: bold;">NOTE:</span> The call to IDrawingDoc::CreateDetailViewAt3 
 uses the x,y,z coordinates relative to the sheet's origin. The sheet's 
 origin is at the lower-left corner of the sheet. The x,y,z coordinates 
 represent the location on the sheet where to place the origin of the parent 
 view.</p>

<p>&nbsp;</p>

<p class=apiCode>'---------------------------------------------</p>

<p class=apiCode>'</p>

<p class=apiCode>' Preconditions: Drawing document is open and contains 
 a Drawing View1.</p>

<p class=apiCode>'</p>

<p class=apiCode>' Postconditions: A circle is created about the activated 
 view's origin </p>

<p class=apiCode>' <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->and 
 a detail view is then created at the origin of the sheet.</p>

<p class=apiCode>'</p>

<p class=apiCode>'------------------------------------------------</p>

<p class=apiCode>Option Explicit</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>Dim swApp As SldWorks.SldWorks</p>

<p class=apiCode>Dim swModel As SldWorks.ModelDoc2</p>

<p class=apiCode>Dim swDrawingDoc As SldWorks.DrawingDoc</p>

<p class=apiCode>Dim swSelMgr As SldWorks.SelectionMgr</p>

<p class=apiCode>Dim swSketchSegment As SldWorks.SketchSegment</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>Sub main()</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>Set swApp = Application.SldWorks</p>

<p class=apiCode>Set swModel = swApp.<span style="font-weight: bold;">ActiveDoc</span></p>

<p class=apiCode>Set swSelMgr = swModel.<span style="font-weight: bold;">SelectionManager</span></p>

<p class=apiCode>Set swDrawingDoc = swModel</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>swDrawingDoc.<span style="font-weight: bold;">ActivateView</span> 
 &quot;Drawing View1&quot;</p>

<p class=apiCode>Set swSketchSegment = swModel.<span style="font-weight: bold;">CreateCircle2</span>(0, 
 0, 0, 0.005, 0, 0)</p>

<p class=apiCode>swDrawingDoc.<span style="font-weight: bold;">CreateDetailViewAt3</span> 
 0, 0, 0, 0, 1#, 1#, &quot;B&quot;, 1, 0</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode>End Sub</p>

</body>

</html>
