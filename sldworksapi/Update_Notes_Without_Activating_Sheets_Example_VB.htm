<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Update Notes Without Activating Sheets Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,notes">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2444>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Update Notes Without Activating Sheets Example (VBA)</h1>

<p>This example shows how to update the notes in a drawing document without 
 activating the drawing sheets.</p>

<pre>'-----------------------------------------------
' Preconditions:
' 1. Open a drawing document that has multiple
'    sheets that have multiple drawing views.
' 2. Insert a &quot;Note&quot; note in a drawing view
'    on one or more one drawing sheets.
' 3. Open the Immediate window.
'
' Postconditions:
' 1. Traverses:
'    a. features, getting drawing sheets only.
'    b. subfeatures, getting the drawing views.
'    c. annotations in the drawing views, getting
'       the notes and appending the letter Z to
'       the end of all &quot;Note&quot; notes in all drawing views 
'       in all drawing sheets.
' 2. To verify step 1c, examine the Immediate window and
'    open each sheet that contained a &quot;Note&quot; note and
'    click that note.
'-----------------------------------------------
Option Explicit</pre>
<pre>' From swstrings.bas
Public Const swTnDrSheet As String = &quot;DrSheet&quot;
Public Const swTnAbsoluteView As String = &quot;AbsoluteView&quot;
Public Const swTnDetailView As String = &quot;DetailView&quot;
Public Const swTnRelativeView As String = &quot;RelativeView&quot;
Public Const swTnSectionPartView As String = &quot;SectionPartView&quot;
Public Const swTnSectionAssemView As String = &quot;SectionAssemView&quot;
Public Const swTnUnfoldedView As String = &quot;UnfoldedView&quot;
Public Const swTnAuxiliaryView As String = &quot;AuxiliaryView&quot;</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim myModel As SldWorks.ModelDoc2
    Dim myDrawing As SldWorks.DrawingDoc
    Dim curFeature As SldWorks.Feature
    Dim featureTypeName As String
    Dim thisSheet As SldWorks.Sheet</pre>
<pre>    Set swApp = Application.SldWorks
    Set myModel = swApp.<b>ActiveDoc</b>
    Set myDrawing = myModel</pre>
<pre>    Dim boolstatus As Boolean</pre>
<pre>' Loop through the features in the document, looking at the drawings sheets only
    Set curFeature = myModel.<b>FirstFeature</b>
    While Not curFeature Is Nothing
        featureTypeName = curFeature.<b>GetTypeName</b>()
        If (featureTypeName = swTnDrSheet) Then
            Set thisSheet = curFeature.<b>GetSpecificFeature2</b>()
            Debug.Print thisSheet.<b>GetName</b>()
            ' Test the sheet feature by getting and editing
            ' certain notes on any sheet, active or not
            Call test_sheet_feature(curFeature)
            ' Test the sheet feature by using it to activate the sheet.
            ' boolstatus = myDrawing.<b>ActivateSheet</b>(thisSheet.GetName)
        End If
        Set curFeature = curFeature.<b>GetNextFeature</b>
    Wend</pre>
<pre>End Sub
 
</pre>
<pre>Sub test_sheet_feature(thisSheetFeature As SldWorks.Feature)
    Dim curFeature As SldWorks.Feature
    Dim featureTypeName As String
    Dim thisView As SldWorks.View
    Dim viewName As String
    Dim curAnno As SldWorks.Annotation
    Dim annoType As Long
    Dim thisNote As SldWorks.Note
    Dim noteText As String, newNoteText As String, noteText2 As String
    Dim boolstatus As Boolean</pre>
<pre>    ' Continue traversing through the subfeatures of this sheet feature
    ' The drawing views should show up as subfeatures of the sheet feature
    Set curFeature = thisSheetFeature.<b>GetFirstSubFeature</b>()
    While Not curFeature Is Nothing
        featureTypeName = curFeature.<b>GetTypeName</b>()
        If (featureTypeName = swTnAbsoluteView Or featureTypeName = swTnDetailView Or featureTypeName = swTnRelativeView Or featureTypeName = swTnSectionPartView Or featureTypeName = swTnSectionAssemView Or featureTypeName = swTnUnfoldedView Or featureTypeName = swTnAuxiliaryView) Then
            Set thisView = curFeature.<b>GetSpecificFeature2</b>()
        ' Loop through the annotations in this view, specifically looking for notes
            If Not thisView Is Nothing Then
                Debug.Print &quot;  &quot; &amp; thisView.<b>GetName2</b>()
                Set curAnno = thisView.<b>GetFirstAnnotation3</b>()
                While Not curAnno Is Nothing
                    annoType = curAnno.<b>GetType</b>()
                    If annoType = SwConst.swAnnotationType_e.swNote Then
                        Set thisNote = curAnno.<b>GetSpecificAnnotation</b>()
                        If Not thisNote Is Nothing Then
                        ' Do something with this note; make sure that it seems to be completely
                        ' accessible even if the sheet is not the current sheet
                            noteText = thisNote.<b>GetText</b>()
                            If (Left(noteText, 4) = &quot;Note&quot;) Then
                                newNoteText = noteText &amp; &quot;Z&quot;
                                boolstatus = thisNote.<b>SetText</b>(newNoteText)
                            End If
                            noteText2 = thisNote.<b>GetText</b>()
                            Debug.Print &quot;    &quot; &amp; noteText &amp; &quot; - &quot; &amp; noteText2
                        End If
                    End If
                    Set curAnno = curAnno.<b>GetNext3</b>()
                Wend
            End If
        End If
        Set curFeature = curFeature.<b>GetNextSubFeature</b>()
    Wend</pre>
<pre>End Sub</pre>

</body>

</html>
