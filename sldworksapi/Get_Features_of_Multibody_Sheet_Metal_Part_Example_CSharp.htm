<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Features of Multibody Sheet Metal Part Example (C#)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="C# examples,sheet metal">
<meta name=MS-HKWD content="C# examples,feature">
<meta name=MS-HKWD content="C# examples,cut lists">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1724>
<meta name=layout-width content=931>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Get Features of Multibody Sheet Metal Part Example (C#)</h1>

<p>This example shows how to sort a cut-list folder of a multibody sheet metal 
part. </p>

<pre>// ---------------------------------------------------------------------------
// Preconditions:
// 1. Open <strong>C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2020\samples\tutorial\api\weldment_box3.sldprt</strong>.
// 2. Inspect the cut list folder.
// 3. Open the Immediate window.
// 
// Postconditions:
// 1. Gets the number and names of the features in the cut list bodies.
// 2. Sets the cut list sorting options.
// 3. Sorts the cut list.
// 4. Inspect the sorted cut list folder in the Immediate window.
// --------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Security;
using System.Text;
using System.Threading.Tasks;
using Microsoft.VisualBasic;
using SolidWorks.Interop.sldworks;
using SolidWorks.Interop.swconst;
using System.Runtime.InteropServices;</pre>
<pre>using System.Windows;
using System.Windows.Forms;
</pre>
<pre>namespace CutListSort_CSharp
{</pre>
<pre>        partial class SolidWorksMacro
        {
            public void Main()
            {
                ModelDoc2 swModel;
                Feature swFeat;
                BodyFolder swBodyFolder;
                SelectionMgr selMgr;
                Body2 swBody;
                object[] Bodies;
                object[] Features;
                CutListSortOptions CutListSortOptions;
                int i;
                int j;
                bool boolstatus;
</pre>
<pre>                swModel = (ModelDoc2)swApp.<strong>ActiveDoc</strong>;
                selMgr = (SelectionMgr)swModel.<strong>SelectionManager</strong>;</pre>
<pre>                boolstatus = swModel.Extension.<strong>SelectByID2</strong>(&quot;Solid Bodies&quot;, &quot;BDYFOLDER&quot;, 0, 0, 0, false, 0, null/* TODO Change to default(_) if this is not a reference type */, 0);
                swFeat = (Feature)selMgr.<strong>GetSelectedObject6</strong>(1, -1);</pre>
<pre>                swBodyFolder = (BodyFolder)swFeat.<strong>GetSpecificFeature2</strong>();
                swBodyFolder.<strong>SetAutomaticCutList</strong>(true);
                swBodyFolder.<strong>SetAutomaticUpdate</strong>(false);
                Bodies = (object[])swBodyFolder.<strong>GetBodies</strong>();
                Debug.Print(&quot;    Number of bodies: &quot; + swBodyFolder.<strong>GetBodyCount</strong>());
                Debug.Print(&quot;    Cut list type: &quot; + swBodyFolder.<strong>GetCutListType</strong>());
                Debug.Print(&quot;    Generate cut list automatically? &quot; + swBodyFolder.<strong>GetAutomaticCutList</strong>());
                Debug.Print(&quot;    Automatically update cut list? &quot; + swBodyFolder.<strong>GetAutomaticUpdate</strong>());
                for (i = 0; i &lt;= (swBodyFolder.<strong>GetBodyCount</strong>() - 1); i++)
                {
                    swBody = (Body2)Bodies[i];
                    Features = (object[])swBody.<strong>GetFeatures</strong>();
                    Debug.Print(&quot;    Number of features in body #&quot; + i + 1 + &quot;: &quot; + swBody.<strong>GetFeatureCount</strong>());
                    for (j = 0; j &lt;= (swBody.<strong>GetFeatureCount</strong>() - 1); j++)
                        Debug.Print(&quot;       Name of feature: &quot; + ((Feature)Features[j]).<strong>GetTypeName2</strong>());
                }</pre>
<pre>                // Sort the cut list
                CutListSortOptions = (CutListSortOptions)swBodyFolder.<strong>GetCutListSortOptions</strong>();
                CutListSortOptions.<strong>CollectIdenticalBodies</strong> = true;
                boolstatus = swBodyFolder.<strong>SortCutList</strong>(CutListSortOptions, false);
            }
            /// &lt;summary&gt;
            ///     ''' The SldWorks swApp variable is pre-assigned for you.
            ///     ''' &lt;/summary&gt;
            public SldWorks swApp;
        }</pre>
<pre>}</pre>

</body>

</html>
