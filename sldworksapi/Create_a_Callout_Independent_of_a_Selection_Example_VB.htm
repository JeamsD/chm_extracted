<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Create a Callout Independent of a Selection Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="Callout (see also ICallout Interface),independent">
<meta name=MS-HKWD content="VBA examples,callouts">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1512>
<meta name=layout-width content=922>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Create a Callout Independent of a Selection Example (VBA)</h1>

<p>This example shows how to create a callout that is independent of a 
 selection.</p>

<p class="APICODE">
'----------------------------------------------------------------------------<br>
' Preconditions: &nbsp;<br>
'&nbsp;1. Document is open in SOLIDWORKS<br>
'&nbsp;2. Select <b>Tools &gt; References &gt; SOLIDWORKS <i>
&lt;version&gt;</i> exposed type libraries for add-in use</b>.<br>
' 3. Copy <a href="#class1">Class1</a> 
to a class module named Class1.<br>
'<br>
' Postconditions:<br>
'&nbsp;1. A callout is created with the specified properties.<br>
'&nbsp;2. Inspect the Immediate window for its text format properties.<br>
'-----------------------------------------------------------------------------<br>
Option Explicit</p>
<p class="APICODE">Dim swApp As SldWorks.SldWorks<br>
Dim swModel As ModelDoc2<br>
Dim swExt As ModelDocExtension<br>
Dim swSelMgr As SelectionMgr<br>
Dim mathUtil As MathUtility<br>
Dim swTextFormat As TextFormat<br>
Dim handle As New Class1<br>
Dim mp As MathPoint<br>
Dim vPnt(2) As Double<br>
Dim myCallout As Callout</p>
<p class="APICODE">Sub main()</p>
<blockquote>
	<p class="APICODE">Set swApp = Application.SldWorks<br>Set swModel = swApp.ActiveDoc<br>Set swExt = swModel.Extension<br>Set swSelMgr = swModel.SelectionManager<br>Set mathUtil = swApp.GetMathUtility</p>
	<p class="APICODE">vPnt(0) = 0#<br>vPnt(1) = 0#<br>vPnt(2) = 0#<br>Set mp = mathUtil.CreatePoint(vPnt)</p>
	<p class="APICODE">Set myCallout = swExt.<b>CreateCallout</b>(2, handle)<br>myCallout.<b>Value</b>(1) = &quot;&quot;<br>myCallout.<b>IgnoreValue</b>(1) = True<br>myCallout.<b>Label2</b>(1) = &quot;SldWorks API&quot;<br>myCallout.<b>SkipColon</b> = True<br>
	myCallout.<b>FontSize</b> = 10<br>Call myCallout.<b>SetLeader</b>(True, True)<br>Call myCallout.<b>SetTargetPoint</b>(1, 0.001, 0.001, 0)<br>Call myCallout.<b>SetTargetPoint</b>(2, -0.001, 0.001, 0)<br>myCallout.<b>Position</b> = mp<br>myCallout.<b>ValueInactive</b>(0) = True<br>myCallout.<b>TextBox</b> = False<br>myCallout.<b>Display</b> (True)</p>
	<p class="APICODE">Set swTextFormat = myCallout.<b>TextFormat<br>
	</b>ProcessTextFormat swApp, swModel, swTextFormat</p>
</blockquote>
<p class="APICODE">End Sub</p>
<p class="APICODE">Sub ProcessTextFormat(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swTextFormat As SldWorks.TextFormat)&nbsp;&nbsp;
<br>
&nbsp;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; BackWards&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>BackWards</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; Bold&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>Bold</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; CharHeight&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>CharHeight</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; CharHeightInPts&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>CharHeightInPts</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; CharSpacingFactor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>CharSpacingFactor</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; Escapement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>Escapement</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; IsHeightSpecifiedInPts&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>IsHeightSpecifiedInPts</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; Italic&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>Italic</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; LineLength&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>LineLength</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; LineSpacing&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>LineSpacing</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; ObliqueAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>ObliqueAngle</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; Strikeout&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>Strikeout</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; TypeFaceName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>TypeFaceName</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; Underline&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>Underline</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; UpsideDown&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>UpsideDown</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; Vertical&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>Vertical</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp; WidthFactor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &quot; &amp; swTextFormat.<b>WidthFactor<br>
</b>
    <br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;<br>
End Sub</p>
<p class="APICODE"><a name="class1"></a>'<br>
' Class1 module<br>
'<br>
Implements SwCalloutHandler<br>
Private Sub Class_Initialize()<br>
End Sub<br>
Private Function SwCalloutHandler_OnStringValueChanged(ByVal pManipulator As 
Object, ByVal RowID As Long, ByVal Text As String) As Boolean<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print (&quot;Text: &quot; &amp; Text)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print (&quot;Row: &quot; &amp; RowID)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SwCalloutHandler_OnStringValueChanged = True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
End Function</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">&nbsp;</p>

</body>

</html>
