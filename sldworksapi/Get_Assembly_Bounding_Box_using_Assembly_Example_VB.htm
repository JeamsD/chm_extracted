<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Assembly Bounding Box using Assembly Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,bounding box">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1786>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Get Assembly Bounding Box using Assembly Example (VBA)</h1>

<p>This example shows how to get the box bounding an assembly using the 
 assembly.</p>

<pre>'--------------------------------------------
' Preconditions:
' 1. Open an assembly document.
' 2. Open the Immediate window.
' 3. Run the macro.
'
' Postconditions:
' 1. Adds a 3D sketch to the assembly showing the bounding box.
' 2. Examine the graphics area and Immediate window to verify.
'
' NOTE: The bounding box is approximated and oriented
' with the assembly coordinate system.
'----------------------------------------------</pre>
<pre>Option Explicit</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp                   As SldWorks.SldWorks
    Dim swModel                 As SldWorks.ModelDoc2
    Dim swAssy                  As SldWorks.AssemblyDoc
    Dim vBox                    As Variant
    Dim X_max                   As Double
    Dim X_min                   As Double
    Dim Y_max                   As Double
    Dim Y_min                   As Double
    Dim Z_max                   As Double
    Dim Z_min                   As Double
    Dim swSketchMgr             As SldWorks.SketchManager
    Dim swSketchPt(8)           As SldWorks.SketchPoint
    Dim swSketchSeg(12)         As SldWorks.SketchSegment</pre>
<pre>    Set swApp = CreateObject(&quot;SldWorks.Application&quot;)
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swAssy = swModel</pre>
<pre>    vBox = swAssy.<b>GetBox</b>(swBoundingBoxIncludeRefPlanes)</pre>
<pre>    ' Initialize values
    X_max = vBox(3)
    X_min = vBox(0)
    Y_max = vBox(4)
    Y_min = vBox(1)
    Z_max = vBox(5)
    Z_min = vBox(2)</pre>
<pre>    Debug.Print &quot;Assembly Bounding Box (&quot; + swModel.<b>GetPathName</b> + &quot;) = &quot;
    Debug.Print &quot;  (&quot; + Str(X_min * 1000#) + &quot;,&quot; + Str(Y_min * 1000#) + &quot;,&quot; + Str(Z_min * 1000#) + &quot;) mm&quot;
    Debug.Print &quot;  (&quot; + Str(X_max * 1000#) + &quot;,&quot; + Str(Y_max * 1000#) + &quot;,&quot; + Str(Z_max * 1000#) + &quot;) mm&quot;
    </pre>
<pre>    Set swSketchMgr = swModel.<b>SketchManager</b>
    swSketchMgr.<b>Insert3DSketch</b> True
    swSketchMgr.<b>AddToDB</b> = True    </pre>
<pre>    ' Draw points at each corner of bounding box
    Set swSketchPt(0) = swSketchMgr.<b>CreatePoint</b>(X_min, Y_min, Z_min)
    Set swSketchPt(1) = swSketchMgr.CreatePoint(X_min, Y_min, Z_max)
    Set swSketchPt(2) = swSketchMgr.CreatePoint(X_min, Y_max, Z_min)
    Set swSketchPt(3) = swSketchMgr.CreatePoint(X_min, Y_max, Z_max)
    Set swSketchPt(4) = swSketchMgr.CreatePoint(X_max, Y_min, Z_min)
    Set swSketchPt(5) = swSketchMgr.CreatePoint(X_max, Y_min, Z_max)
    Set swSketchPt(6) = swSketchMgr.CreatePoint(X_max, Y_max, Z_min)
    Set swSketchPt(7) = swSketchMgr.CreatePoint(X_max, Y_max, Z_max)

    ' Draw bounding box
    Set swSketchSeg(0) = swSketchMgr.<b>CreateLine</b>(X_min, Y_min, Z_min, X_max, Y_min, Z_min)
    Set swSketchSeg(1) = swSketchMgr.CreateLine(X_max, Y_min, Z_min, X_max, Y_min, Z_max)
    Set swSketchSeg(2) = swSketchMgr.CreateLine(X_max, Y_min, Z_max, X_min, Y_min, Z_max)
    Set swSketchSeg(3) = swSketchMgr.CreateLine(X_min, Y_min, Z_max, X_min, Y_min, Z_min)
    Set swSketchSeg(4) = swSketchMgr.CreateLine(X_min, Y_min, Z_min, X_min, Y_max, Z_min)
    Set swSketchSeg(5) = swSketchMgr.CreateLine(X_min, Y_min, Z_max, X_min, Y_max, Z_max)
    Set swSketchSeg(6) = swSketchMgr.CreateLine(X_max, Y_min, Z_min, X_max, Y_max, Z_min)
    Set swSketchSeg(7) = swSketchMgr.CreateLine(X_max, Y_min, Z_max, X_max, Y_max, Z_max)
    Set swSketchSeg(8) = swSketchMgr.CreateLine(X_min, Y_max, Z_min, X_max, Y_max, Z_min)
    Set swSketchSeg(9) = swSketchMgr.CreateLine(X_max, Y_max, Z_min, X_max, Y_max, Z_max)
    Set swSketchSeg(10) = swSketchMgr.CreateLine(X_max, Y_max, Z_max, X_min, Y_max, Z_max)
    Set swSketchSeg(11) = swSketchMgr.CreateLine(X_min, Y_max, Z_max, X_min, Y_max, Z_min)    </pre>
<pre>    swSketchMgr.<b>AddToDB</b> = False
    swSketchMgr.<b>Insert3DSketch</b> True
    </pre>
<pre>End Sub</pre>

</body>

</html>
