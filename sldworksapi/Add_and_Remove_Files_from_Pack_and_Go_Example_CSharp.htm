<html>

<head>
<title>Add and Remove Files from Pack and Go Example (C#)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="C# examples,Pack and Go">
<meta name=MS-HKWD content="BstrWrapper">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Add and Remove Files from Pack and Go Example (C#)</h1>
<p>This example shows how to add SOLIDWORKS, render reference, and 
non-SOLIDWORKS files to Pack and Go. This example also shows how to remove a 
non-SOLIDWORKS file from Pack and Go.</p>
<p class="APICODE"><font color="#008000">
//-------------------------------------------<br>
// Preconditions:<br>
// 1. Verify that the specified assembly exists.<br>
// 2. Create<b> c:\PackAndGo</b>.<br>
// 3. Open the Immediate window.<br>
//<br>
// Postconditions:<br>
// 1. Gets the names of SOLIDWORKS, render reference, and<br>
//&nbsp;&nbsp;&nbsp; non-SOLIDWORKS files for Pack and Go.<br>
// 2. Gets the the name of non-SOLIDWORKS file to remove.<br>
// 3. Packs up SOLIDWORKS, render reference, and<br>
//&nbsp;&nbsp;&nbsp; non-SOLIDWORKS files and copies them to <b>c:\PackAndGo</b>.<br>
// 4. Examine <b>c:\PackAndGo</b> and the Immediate window.<br>
//-------------------------------------------</font><font size="-1" face="Courier New"><font color="Green"><br>
</font><font color="Blue">using</font><font color="Black"> 
SolidWorks.Interop.sldworks;<br>
</font><font color="Blue">using</font><font color="Black"> 
SolidWorks.Interop.swconst;<br>
</font><font color="Blue">using</font><font color="Black"> System;<br>
</font><font color="Blue">using</font><font color="Black"> System.Diagnostics;<br>
</font><font color="Blue">using</font><font color="Black"> 
System.Runtime.InteropServices;<br>
<br>
</font><font color="Blue">namespace</font><font color="Black"> 
AddExternalDocumentsPackAndGo.csproj<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">partial</font><font color="Black"> </font>
<font color="Blue">class</font><font color="Black"> </font>
<font color="#2b91af">SolidWorksMacro<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">public</font><font color="Black"> </font>
<font color="Blue">void</font><font color="Black"> Main()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelDoc2 swModel = </font><font color="Blue">default</font><font color="Black">(ModelDoc2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ModelDocExtension swModelDocExt = </font><font color="Blue">default</font><font color="Black">(ModelDocExtension);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PackAndGo swPackAndGo = </font><font color="Blue">default</font><font color="Black">(PackAndGo);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">string</font><font color="Black"> openFile 
= </font><font color="Blue">null</font><font color="Black">;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">int</font><font color="Black"> namesCount 
= 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">int</font><font color="Black"> errors = 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">int</font><font color="Black"> warnings = 
0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">bool</font><font color="Black"> status =
</font><font color="Blue">false</font><font color="Black">;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">int</font><font color="Black"> i = 0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">object</font><font color="Black">[] 
renderReferences = </font><font color="Blue">null</font><font color="Black">;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">string</font><font color="Black"> myPath =
</font><font color="Blue">null</font><font color="Black">;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">object</font><font color="Black"> statuses 
= </font><font color="Blue">null</font><font color="Black">;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// Open assembly document<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;openFile = </font><font color="#a31515">
&quot;C:\\Users\\Public\\Documents\\SOLIDWORKS\\SOLIDWORKS 2018\\samples\\tutorial\\EDraw\\claw\\claw-mechanism.sldasm&quot;</font><font color="Black">;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swModel = (ModelDoc2)swApp.<b>OpenDoc6</b>(openFile, (</font><font color="Blue">int</font><font color="Black">)swDocumentTypes_e.swDocASSEMBLY, 
(</font><font color="Blue">int</font><font color="Black">)swOpenDocOptions_e.swOpenDocOptions_Silent,
</font><font color="#a31515">&quot;&quot;</font><font color="Black">, </font>
<font color="Blue">ref</font><font color="Black"> errors, </font>
<font color="Blue">ref</font><font color="Black"> warnings);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swModelDocExt = (ModelDocExtension)swModel.<b>Extension</b>;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// Get Pack and Go object<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot;Pack 
and Go&quot;</font><font color="Black">);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swPackAndGo = (PackAndGo)swModelDocExt.<b>GetPackAndGo</b>();<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// Get number of documents in assembly<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namesCount = swPackAndGo.<b>GetDocumentNamesCount</b>();<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// Get current paths and filenames of the 
assembly's documents<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">object</font><font color="Black"> 
fileNames;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">object</font><font color="Black">[] 
pgFileNames = </font><font color="Blue">new</font><font color="Black"> </font>
<font color="Blue">object</font><font color="Black">[namesCount - 1];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status = swPackAndGo.<b>GetDocumentNames</b>(</font><font color="Blue">out</font><font color="Black"> 
fileNames);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pgFileNames = (</font><font color="Blue">object</font><font color="Black">[])fileNames;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot;&quot;</font><font color="Black">);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot;&nbsp;&nbsp;Add 
SOLIDWORKS files' paths and filenames: &quot;</font><font color="Black">);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">if</font><font color="Black"> ((pgFileNames 
!= </font><font color="Blue">null</font><font color="Black">))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">for</font><font color="Black"> (i = 0; 
i &lt;= pgFileNames.GetUpperBound(0); i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;The 
path and filename is: &quot;</font><font color="Black"> + pgFileNames[i]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// Set document paths and names for Pack 
and Go<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status = swPackAndGo.<b>SetDocumentSaveToNames</b>(pgFileNames);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// Get the render stock references in 
this assembly<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// and print 
them to the Immediate window<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot; 
&quot;</font><font color="Black">);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;renderReferences = (</font><font color="Blue">object</font><font color="Black">[])swModelDocExt.<b>GetRenderStockReferences</b>();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot;&nbsp;&nbsp;Add 
render references:&quot;</font><font color="Black">);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">for</font><font color="Black"> (i = 0; i 
&lt;= renderReferences.GetUpperBound(0); i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;The 
path and filename is: &quot;</font><font color="Black"> + renderReferences[i]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// Add render stock files to Pack and Go<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status = swPackAndGo.<b>AddExternalDocuments</b>(renderReferences);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// Add other non-SOLIDWORKS files to Pack 
and Go<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">object</font><font color="Black">[] 
otherFiles = </font><font color="Blue">new</font><font color="Black"> </font>
<font color="Blue">object</font><font color="Black">[2];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">string</font><font color="Black"> 
otherFile = </font><font color="#a31515">&quot;C:\\Users\\Public\\Documents\\SOLIDWORKS\\SOLIDWORKS 2018\\samples\\tutorial\\edraw\\claw\\claw-mechanism.easm&quot;</font><font color="Black">;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;otherFiles[0] = (</font><font color="Blue">object</font><font color="Black">)otherFile;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;otherFile = </font><font color="#a31515">&quot;C:\\Users\\Public\\Documents\\SOLIDWORKS\\SOLIDWORKS 2018\\samples\\tutorial\\edraw\\claw\\claw-mechanism.emodel_debugonly.xml&quot;</font><font color="Black">;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;otherFiles[1] = (</font><font color="Blue">object</font><font color="Black">)otherFile;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot; 
&quot;</font><font color="Black">);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot;&nbsp;&nbsp;Add 
non-SOLIDWORKS files:&quot;</font><font color="Black">);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">for</font><font color="Black"> (i = 0; i 
&lt;= otherFiles.GetUpperBound(0); i++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;The 
path and filename is: &quot;</font><font color="Black"> + otherFiles[i]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// Add non-SOLIDWORKS file to Pack and Go<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status = swPackAndGo.<b>AddExternalDocuments</b>(ObjectArrayToBStrWrapperArray(otherFiles));<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// Remove one of the non-SOLIDWORKS files 
from Pack and Go<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">object</font><font color="Black">[] 
delOtherFiles = </font><font color="Blue">new</font><font color="Black"> </font>
<font color="Blue">object</font><font color="Black">[1];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delOtherFiles[0] = (</font><font color="Blue">object</font><font color="Black">)otherFiles[0];<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot; 
&quot;</font><font color="Black">);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot;&nbsp;&nbsp;Remove 
non-SOLIDWORKS file:&quot;</font><font color="Black">);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">Debug</font><font color="Black">.Print(</font><font color="#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;The 
path and filename is: &quot;</font><font color="Black"> + delOtherFiles[0]);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status = swPackAndGo.<b>RemoveExternalDocuments</b>(ObjectArrayToBStrWrapperArray(delOtherFiles));<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// Override path where to save documents<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myPath = </font><font color="#a31515">
&quot;c:\\</font></font><font color="#800000">PackAndGo</font><font size="-1" face="Courier New"><font color="#a31515">\\&quot;</font><font color="Black">;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status = swPackAndGo.<b>SetSaveToName</b>(</font><font color="Blue">true</font><font color="Black">, 
myPath);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Green">// Pack and Go both SOLIDWORKS and 
non-SOLIDWORKS files<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;statuses = swModelDocExt.<b>SavePackAndGo</b>(swPackAndGo);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">public</font><font color="Black"> </font>
<font color="#2b91af">BStrWrapper</font><font color="Black">[] 
ObjectArrayToBStrWrapperArray(</font><font color="Blue">object</font><font color="Black">[] 
SwObjects)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">int</font><font color="Black"> arraySize;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arraySize = SwObjects.GetUpperBound(0);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="#2b91af">BStrWrapper</font><font color="Black">[] 
dispwrap = </font><font color="Blue">new</font><font color="Black"> </font>
<font color="#2b91af">BStrWrapper</font><font color="Black">[arraySize + 1];<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">int</font><font color="Black"> arrayIndex;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">for</font><font color="Black"> (arrayIndex 
= 0; arrayIndex &lt; arraySize + 1; arrayIndex++)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dispwrap[arrayIndex] = </font><font color="Blue">new</font><font color="Black">
</font><font color="#2b91af">BStrWrapper</font><font color="Black">((</font><font color="Blue">string</font><font color="Black">)(SwObjects[arrayIndex]));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">return</font><font color="Black"> dispwrap;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Gray">///</font><font color="Green"> </font>
<font color="Gray">&lt;summary&gt;<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Gray">///</font><font color="Green"> 
The SldWorks swApp variable is pre-assigned for you.<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Gray">///</font><font color="Green">
</font><font color="Gray">&lt;/summary&gt;<br>
<br>
</font><font color="Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font><font color="Blue">public</font></font><font color="Black"><font size="-1" face="Courier New"> 
SldWorks swApp;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
}</font></font></p>

</body>

</html>
