<html>

<head>
<title>Set Components and Transforms for Interference Detection Example (VB.NET)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VB.NET examples,assemblies">
<meta name=MS-HKWD content="VB.NET examples,components">
<meta name=MS-HKWD content="VB.NET examples,transforms">
<meta name=MS-HKWD content="VB.NET examples,interference detection">
<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Set Components and Transforms for Interference Detection Example (VB.NET)</h1>
<p><a name="Top"></a>This example shows how to:</p>
<ul>
	<li><font face="Verdana" style="font-size: 8pt">move an assembly component 
	to an interfering position by replacing its transform.</font></li>
	<li><font face="Verdana" style="font-size: 8pt">detect interference.</font></li>
</ul>
<p>This example also shows how to apply absolute transforms to all components in 
order to multiply by identity transforms, which results in the components 
remaining in their current positions during interference detection.</p>
<pre style="font-family: Consolas; font-size: 13; color: black; background: white"><font face="Courier New"><span style="color:green;">'------------------------------------------------------------------------</span>
<span style="color:green;">'&nbsp;Preconditions:</span>
<span style="color:green;">'&nbsp;1.&nbsp;Verify&nbsp;that&nbsp;the&nbsp;specified&nbsp;assembly&nbsp;exists.</span>
<span style="color:green;">'&nbsp;2.&nbsp;Copy&nbsp;and&nbsp;paste&nbsp;<a href="#Main">Main</a>&nbsp;into&nbsp;<b>SolidWorksMacro.vb</b>&nbsp;of&nbsp;your&nbsp;macro.</span>
<span style="color:green;">'&nbsp;3.&nbsp;Click&nbsp;<b>Project&nbsp;&gt;&nbsp;Add&nbsp;Class</b>&nbsp;and&nbsp;copy&nbsp;and&nbsp;paste&nbsp;<a href="#Class">Class</a>&nbsp;into&nbsp;<b>Class1.vb</b>.</span>
<span style="color:green;">'&nbsp;4.&nbsp;Open&nbsp;the&nbsp;Immediate&nbsp;window.</span>
<span style="color:green;">'</span>
<span style="color:green;">'&nbsp;Postconditions:</span>
<span style="color:green;">'&nbsp;1.&nbsp;Opens&nbsp;the&nbsp;specified&nbsp;assembly.</span>
<span style="color:green;">'&nbsp;2.&nbsp;Gets&nbsp;the&nbsp;components&nbsp;of&nbsp;the&nbsp;assembly&nbsp;and&nbsp;their&nbsp;transforms.</span>
<span style="color:green;">'&nbsp;3.&nbsp;Creates&nbsp;a&nbsp;new&nbsp;transform&nbsp;for&nbsp;<b>Part1^AssemInterferenceDetection-2</b>.</span>
<span style="color:green;">'&nbsp;4.&nbsp;Sets&nbsp;the&nbsp;components&nbsp;and&nbsp;their&nbsp;transforms,&nbsp;using&nbsp;the&nbsp;existing</span>
<span style="color:green;">'&nbsp;&nbsp;&nbsp;&nbsp;rotation&nbsp;and&nbsp;the&nbsp;translation&nbsp;from&nbsp;the&nbsp;assembly&nbsp;origin.</span>
<span style="color:green;">'&nbsp;&nbsp;&nbsp;&nbsp;a.&nbsp;Gets&nbsp;the&nbsp;number&nbsp;of&nbsp;interferences.</span>
<span style="color:green;">'&nbsp;&nbsp;&nbsp;&nbsp;b.&nbsp;Examine&nbsp;the&nbsp;graphics&nbsp;area&nbsp;at&nbsp;the&nbsp;Stop&nbsp;statement&nbsp;to&nbsp;visually&nbsp;</span>
<span style="color:green;">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;verify&nbsp;the&nbsp;interferences,&nbsp;then&nbsp;press&nbsp;F5.</span>
<span style="color:green;">'&nbsp;&nbsp;&nbsp;&nbsp;c.&nbsp;Programmatically&nbsp;verifies&nbsp;that&nbsp;the&nbsp;number&nbsp;of&nbsp;interferences</span>
<span style="color:green;">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;as&nbsp;expected.</span>
<span style="color:green;">'&nbsp;&nbsp;&nbsp;&nbsp;d.&nbsp;Gets&nbsp;whether:</span>
<span style="color:green;">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;each&nbsp;returned&nbsp;interference&nbsp;is&nbsp;correct.</span>
<span style="color:green;">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;the&nbsp;components&nbsp;remained&nbsp;in&nbsp;their&nbsp;starting&nbsp;positions&nbsp;during</span>
<span style="color:green;">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interference&nbsp;detection.</span>
<span style="color:green;">'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;the&nbsp;components&nbsp;are&nbsp;at&nbsp;their&nbsp;starting&nbsp;positions.</span>
<span style="color:green;">'&nbsp;5.&nbsp;Examine&nbsp;the&nbsp;Immediate&nbsp;window&nbsp;and&nbsp;graphics&nbsp;area.</span>
<span style="color:green;">'</span>
<span style="color:green;">'&nbsp;NOTE:&nbsp;Because&nbsp;the&nbsp;assembly&nbsp;is&nbsp;used&nbsp;elsewhere,&nbsp;do&nbsp;not&nbsp;save&nbsp;changes.</span>
<span style="color:green;">'-------------------------------------------------------------------------</span>
<span style="color:green;"><a name="Main"></a>'Main</span>
<span style="color:blue;">Imports</span>&nbsp;SolidWorks.Interop.sldworks
<span style="color:blue;">Imports</span>&nbsp;SolidWorks.Interop.swconst
<span style="color:blue;">Imports</span>&nbsp;System.Runtime.InteropServices
<span style="color:blue;">Imports</span>&nbsp;System
<span style="color:blue;">Imports</span>&nbsp;System.Diagnostics
 
<span style="color:blue;">Partial</span>&nbsp;<span style="color:blue;">Class</span>&nbsp;<span style="color:#2b91af;">SolidWorksMacro</span>
 
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;colStartingPositions&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:#2b91af;">Collection</span>
 
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Public</span>&nbsp;<span style="color:blue;">Sub</span>&nbsp;main()
 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;Class1&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">New</span>&nbsp;Class1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class1&nbsp;=&nbsp;<span style="color:blue;">New</span>&nbsp;Class1
 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;expectedNumberofInterferences&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Integer</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expectedNumberofInterferences&nbsp;=&nbsp;2
 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;expectedInterferenceVolumes&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:#2b91af;">Collection</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expectedInterferenceVolumes&nbsp;=&nbsp;<span style="color:blue;">New</span>&nbsp;<span style="color:#2b91af;">Collection
</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expectedInterferenceVolumes.Add(0.09)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expectedInterferenceVolumes.Add(0.01)

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;expectedNumberOfInterferenceComps&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:#2b91af;">Collection</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expectedNumberOfInterferenceComps&nbsp;=&nbsp;<span style="color:blue;">New</span>&nbsp;<span style="color:#2b91af;">Collection
</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expectedNumberOfInterferenceComps.Add(2)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expectedNumberOfInterferenceComps.Add(2)

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;bResult&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Boolean</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;<span style="color:blue;">True
</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;swAssem&nbsp;<span style="color:blue;">As</span>&nbsp;AssemblyDoc
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swAssem&nbsp;=&nbsp;OpenAssembly()

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RecordStartingPositions(swAssem)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SelectAllComponents(swAssem)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;swInfrMgr&nbsp;<span style="color:blue;">As</span>&nbsp;InterferenceDetectionMgr
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swInfrMgr&nbsp;=&nbsp;swAssem.<b>InterferenceDetectionManager
</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swInfrMgr.<b>UseTransform</b>&nbsp;=&nbsp;<span style="color:blue;">True</span>
 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;swComps(0&nbsp;<span style="color:blue;">To</span>&nbsp;2)&nbsp;<span style="color:blue;">As</span>&nbsp;Component2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swComps(0)&nbsp;=&nbsp;swAssem.<b>GetComponentByName</b>(<span style="color:#a31515;">&quot;Part1^AssemInterferenceDetection-1&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swComps(1)&nbsp;=&nbsp;swAssem.<b>GetComponentByName</b>(<span style="color:#a31515;">&quot;Part1^AssemInterferenceDetection-2&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swComps(2)&nbsp;=&nbsp;swAssem.<b>GetComponentByName</b>(<span style="color:#a31515;">&quot;Part1^AssemInterferenceDetection-3&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;swXfms(0&nbsp;<span style="color:blue;">To</span>&nbsp;2)&nbsp;<span style="color:blue;">As</span>&nbsp;MathTransform
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swXfms(0)&nbsp;=&nbsp;swComps(0).<b>Transform2</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swXfms(1)&nbsp;=&nbsp;swComps(1).<b>Transform2</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swXfms(2)&nbsp;=&nbsp;swComps(2).<b>Transform2
</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;">'&nbsp;Replacement&nbsp;transform&nbsp;for&nbsp;Part1^AssemInterferenceDetection-2</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;dXfm(0&nbsp;<span style="color:blue;">To</span>&nbsp;15)&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Double
</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;">'&nbsp;Use&nbsp;existing&nbsp;rotation</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;vXfmCurrent&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Object
</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vXfmCurrent&nbsp;=&nbsp;swXfms(1).<b>ArrayData</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dXfm(0)&nbsp;=&nbsp;vXfmCurrent(0)&nbsp;:&nbsp;dXfm(1)&nbsp;=&nbsp;vXfmCurrent(1)&nbsp;:&nbsp;dXfm(2)&nbsp;=&nbsp;vXfmCurrent(2)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dXfm(3)&nbsp;=&nbsp;vXfmCurrent(3)&nbsp;:&nbsp;dXfm(4)&nbsp;=&nbsp;vXfmCurrent(4)&nbsp;:&nbsp;dXfm(5)&nbsp;=&nbsp;vXfmCurrent(5)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dXfm(6)&nbsp;=&nbsp;vXfmCurrent(6)&nbsp;:&nbsp;dXfm(7)&nbsp;=&nbsp;vXfmCurrent(7)&nbsp;:&nbsp;dXfm(8)&nbsp;=&nbsp;vXfmCurrent(8)

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;">'&nbsp;Translation&nbsp;from&nbsp;assembly&nbsp;origin</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dXfm(9)&nbsp;=&nbsp;0.9&nbsp;:&nbsp;dXfm(10)&nbsp;=&nbsp;0.1&nbsp;:&nbsp;dXfm(11)&nbsp;=&nbsp;0
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dXfm(12)&nbsp;=&nbsp;1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dXfm(13)&nbsp;=&nbsp;0&nbsp;:&nbsp;dXfm(14)&nbsp;=&nbsp;0&nbsp;:&nbsp;dXfm(15)&nbsp;=&nbsp;0&nbsp;:&nbsp;dXfm(1)&nbsp;=&nbsp;0&nbsp;:&nbsp;dXfm(2)&nbsp;=&nbsp;0

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;swMath&nbsp;<span style="color:blue;">As</span>&nbsp;MathUtility
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swMath&nbsp;=&nbsp;swApp.<b>GetMathUtility</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swXfms(1)&nbsp;=&nbsp;swMath.<b>CreateTransform</b>(dXfm)

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;lResult&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Integer</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lResult&nbsp;=&nbsp;swInfrMgr.<b>SetComponentsAndTransforms</b>(swComps,&nbsp;swXfms)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;Transforms&nbsp;applied:&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;lResult&nbsp;=&nbsp;swSetComponentsAndTransformsStatus_e.swSetComponentsAndTransforms_Succeeded&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;True&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Else</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;False:&nbsp;&quot;</span>&nbsp;&amp;&nbsp;lResult&nbsp;&amp;&nbsp;<span style="color:#a31515;">&quot;&nbsp;vs.&nbsp;&quot;</span>&nbsp;&amp;&nbsp;swSetComponentsAndTransformsStatus_e.swSetComponentsAndTransforms_Succeeded)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;<span style="color:blue;">False</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If
</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;actualNumberOfInterferences&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Integer</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actualNumberOfInterferences&nbsp;=&nbsp;swInfrMgr.<b>GetInterferenceCount</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;Number&nbsp;of&nbsp;interferences:&nbsp;&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;&quot;</span>&nbsp;&amp;&nbsp;actualNumberOfInterferences)

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Stop</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;">'&nbsp;Examine&nbsp;the&nbsp;graphics&nbsp;area&nbsp;to&nbsp;verify</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;">'&nbsp;the&nbsp;interferences,&nbsp;then&nbsp;press&nbsp;F5&nbsp;&nbsp;&nbsp;&nbsp;
</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;bCorrectNumberofInterferences&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Boolean</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bCorrectNumberofInterferences&nbsp;=&nbsp;expectedNumberofInterferences&nbsp;=&nbsp;actualNumberOfInterferences
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;Correct&nbsp;number&nbsp;of&nbsp;interferences:&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;bCorrectNumberofInterferences&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;True&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Else</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;False:&nbsp;&quot;</span>&nbsp;&amp;&nbsp;actualNumberOfInterferences&nbsp;&amp;&nbsp;<span style="color:#a31515;">&quot;&nbsp;vs.&nbsp;&quot;</span>&nbsp;&amp;&nbsp;expectedNumberofInterferences)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;<span style="color:blue;">False</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If
</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;bCorrectInterferences&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Boolean</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bCorrectInterferences&nbsp;=&nbsp;VerifyInterferencesAgainstExpectation(swInfrMgr.<b>GetInterferences</b>,&nbsp;expectedInterferenceVolumes,&nbsp;expectedNumberOfInterferenceComps)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;Correct&nbsp;interferences:&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;bCorrectInterferences&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;True&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Else</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;False&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;<span style="color:blue;">False</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If
</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swInfrMgr.<b>Done</b>()

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;bBackToStartingPositions&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Boolean</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bBackToStartingPositions&nbsp;=&nbsp;VerifyFinishingPositions()
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;Components&nbsp;back&nbsp;at&nbsp;starting&nbsp;positions:&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;bBackToStartingPositions&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;True&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Else</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;False&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;<span style="color:blue;">False</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If</span>
 
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Sub
</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Public</span>&nbsp;<span style="color:blue;">Function</span>&nbsp;OpenAssembly()&nbsp;<span style="color:blue;">As</span>&nbsp;AssemblyDoc
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swApp.<b>CloseAllDocuments</b>(<span style="color:blue;">True</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;docspec&nbsp;<span style="color:blue;">As</span>&nbsp;DocumentSpecification
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;assemblyFile&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">String</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;assemblyFile&nbsp;=&nbsp;<span style="color:#a31515;">&quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\api\AssemInterferenceDetection.sldasm&quot;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docspec&nbsp;=&nbsp;swApp.<b>GetOpenDocSpec</b>(assemblyFile)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;swModel&nbsp;<span style="color:blue;">As</span>&nbsp;ModelDoc2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swModel&nbsp;=&nbsp;swApp.<b>ActiveDoc</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swModel&nbsp;=&nbsp;swApp.<b>OpenDoc7</b>(docspec)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OpenAssembly&nbsp;=&nbsp;swModel
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Function
</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Public</span>&nbsp;<span style="color:blue;">Shared</span>&nbsp;<span style="color:blue;">Function</span>&nbsp;EqualWithinTolerance(<span style="color:blue;">ByVal</span>&nbsp;A&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Double</span>,&nbsp;<span style="color:blue;">ByVal</span>&nbsp;B&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Double</span>)&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Boolean</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Const</span>&nbsp;tolerance&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Double</span>&nbsp;=&nbsp;0.00001
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;difference&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Double</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;difference&nbsp;=&nbsp;<span style="color:#2b91af;">Math</span>.Abs(A&nbsp;-&nbsp;B)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EqualWithinTolerance&nbsp;=&nbsp;difference&nbsp;&lt;&nbsp;tolerance
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Function
</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Public</span>&nbsp;<span style="color:blue;">Sub</span>&nbsp;RecordStartingPositions(<span style="color:blue;">ByVal</span>&nbsp;swAssem&nbsp;<span style="color:blue;">As</span>&nbsp;AssemblyDoc)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colStartingPositions&nbsp;=&nbsp;<span style="color:blue;">New</span>&nbsp;<span style="color:#2b91af;">Collection</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;vComponents&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Object</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vComponents&nbsp;=&nbsp;swAssem.<b>GetComponents</b>(<span style="color:blue;">True</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;<span style="color:blue;">Not</span>&nbsp;IsNothing(vComponents)&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;vComp&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Object</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">For</span>&nbsp;<span style="color:blue;">Each</span>&nbsp;vComp&nbsp;<span style="color:blue;">In</span>&nbsp;vComponents
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;swComp&nbsp;<span style="color:blue;">As</span>&nbsp;Component2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swComp&nbsp;=&nbsp;vComp
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;position&nbsp;<span style="color:blue;">As</span>&nbsp;Class1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position&nbsp;=&nbsp;<span style="color:blue;">New</span>&nbsp;Class1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;position.RecordReferencePosition(swComp)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;colStartingPositions.Add(position)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Next</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Sub
</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Public</span>&nbsp;<span style="color:blue;">Function</span>&nbsp;VerifyFinishingPositions()&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Boolean</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;bResult&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Boolean</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;<span style="color:blue;">True</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;position&nbsp;<span style="color:blue;">As</span>&nbsp;Class1 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;Position&nbsp;of:&nbsp;&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">For</span>&nbsp;<span style="color:blue;">Each</span>&nbsp;position&nbsp;<span style="color:blue;">In</span>&nbsp;colStartingPositions
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;position.IsAtReferencePosition()&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;&quot;</span>&nbsp;&amp;&nbsp;position.Name&nbsp;&amp;&nbsp;<span style="color:#a31515;">&quot;&nbsp;has&nbsp;not&nbsp;moved&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Else</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;&quot;</span>&nbsp;&amp;&nbsp;position.Name&nbsp;&amp;&nbsp;<span style="color:#a31515;">&quot;&nbsp;has&nbsp;moved&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;<span style="color:blue;">False</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Next</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VerifyFinishingPositions&nbsp;=&nbsp;bResult
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Function
</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Public</span>&nbsp;<span style="color:blue;">Function</span>&nbsp;VerifyInterferencesAgainstExpectation(<span style="color:blue;">ByVal</span>&nbsp;vInterferences&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Object</span>,&nbsp;<span style="color:blue;">ByVal</span>&nbsp;expectedVolumes&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:#2b91af;">Collection</span>,&nbsp;<span style="color:blue;">ByVal</span>&nbsp;expectedCompCounts&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:#2b91af;">Collection</span>)&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Boolean</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;bResult&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Boolean</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;<span style="color:blue;">True</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;IsNothing(vInterferences)&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;IInterferenceDetectionMgr::GetInterferences&nbsp;returned:&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;expectedVolumes.Count&nbsp;=&nbsp;0&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;Nothing&nbsp;as&nbsp;expected&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Else</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;Nothing&nbsp;unexpectedly&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;<span style="color:blue;">False</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Else</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;numInterferences&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Integer</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;numInterferences&nbsp;=&nbsp;UBound(vInterferences)&nbsp;-&nbsp;LBound(vInterferences)&nbsp;+&nbsp;1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;numInterferences&nbsp;&lt;&gt;&nbsp;expectedVolumes.Count&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;IInterferenceDetectionMgr::GetInterferences&nbsp;returned&nbsp;unexpected&nbsp;number&nbsp;of&nbsp;interferences:&nbsp;&quot;</span>&nbsp;&amp;&nbsp;numInterferences&nbsp;&amp;&nbsp;<span style="color:#a31515;">&quot;&nbsp;vs.&nbsp;&quot;</span>&nbsp;&amp;&nbsp;expectedVolumes.Count)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;<span style="color:blue;">False</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;">'&nbsp;Cannot&nbsp;assume&nbsp;the&nbsp;same&nbsp;order</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;">'&nbsp;Try&nbsp;to&nbsp;find&nbsp;matches&nbsp;for&nbsp;each&nbsp;returned&nbsp;interference</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;i&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Integer</span> 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;Match&nbsp;found&nbsp;for&nbsp;calculated&nbsp;interference:&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">For</span>&nbsp;i&nbsp;=&nbsp;LBound(vInterferences)&nbsp;<span style="color:blue;">To</span>&nbsp;UBound(vInterferences)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;swInterference&nbsp;<span style="color:blue;">As</span>&nbsp;Interference
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swInterference&nbsp;=&nbsp;vInterferences(i)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;volume&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Double</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;volume&nbsp;=&nbsp;swInterference.<b>Volume</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;compCount&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Integer</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compCount&nbsp;=&nbsp;swInterference.<b>GetComponentCount</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;bFoundMatch&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Boolean</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bFoundMatch&nbsp;=&nbsp;<span style="color:blue;">False</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;j&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Integer</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">For</span>&nbsp;j&nbsp;=&nbsp;1&nbsp;<span style="color:blue;">To</span>&nbsp;expectedVolumes.Count
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;EqualWithinTolerance(expectedVolumes(j),&nbsp;volume)&nbsp;<span style="color:blue;">And</span>&nbsp;(expectedCompCounts(j)&nbsp;=&nbsp;compCount)&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bFoundMatch&nbsp;=&nbsp;<span style="color:blue;">True</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expectedVolumes.Remove(j)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expectedCompCounts.Remove(j)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Exit</span>&nbsp;<span style="color:blue;">For</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Next</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;bFoundMatch&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;&quot;</span>&nbsp;&amp;&nbsp;i&nbsp;&amp;&nbsp;<span style="color:#a31515;">&quot;:&nbsp;Volume&nbsp;=&nbsp;&quot;</span>&nbsp;&amp;&nbsp;Format(volume,&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>)&nbsp;&amp;&nbsp;<span style="color:#a31515;">&quot;&nbsp;&amp;&nbsp;Component&nbsp;count&nbsp;=&nbsp;&quot;</span>&nbsp;&amp;&nbsp;compCount)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Else</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;&nbsp;&nbsp;&quot;</span>&nbsp;&amp;&nbsp;i&nbsp;&amp;&nbsp;<span style="color:#a31515;">&quot;:&nbsp;Volume&nbsp;=&nbsp;&quot;</span>&nbsp;&amp;&nbsp;Format(volume,&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>)&nbsp;&amp;&nbsp;<span style="color:#a31515;">&quot;&nbsp;&amp;&nbsp;Component&nbsp;count&nbsp;=&nbsp;&quot;</span>&nbsp;&amp;&nbsp;compCount)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;<span style="color:blue;">False</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Next</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;k&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Integer</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;expectedVolumes.Count&nbsp;&gt;&nbsp;0&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">For</span>&nbsp;k&nbsp;=&nbsp;1&nbsp;<span style="color:blue;">To</span>&nbsp;expectedVolumes.Count
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(<span style="color:#a31515;">&quot;No&nbsp;match&nbsp;found&nbsp;for&nbsp;expected&nbsp;interference:&nbsp;Volume&nbsp;=&nbsp;&quot;</span>&nbsp;&amp;&nbsp;Format(expectedVolumes(k),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>)&nbsp;&amp;&nbsp;<span style="color:#a31515;">&quot;&nbsp;&amp;&nbsp;Component&nbsp;count&nbsp;=&nbsp;&quot;</span>&nbsp;&amp;&nbsp;expectedCompCounts(k))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Next</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;VerifyInterferencesAgainstExpectation&nbsp;=&nbsp;bResult
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Function
</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Public</span>&nbsp;<span style="color:blue;">Sub</span>&nbsp;SelectAllComponents(<span style="color:blue;">ByVal</span>&nbsp;swAssem&nbsp;<span style="color:blue;">As</span>&nbsp;AssemblyDoc)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;swModel&nbsp;<span style="color:blue;">As</span>&nbsp;ModelDoc2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swModel&nbsp;=&nbsp;swAssem
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swModel.<b>ClearSelection2</b>(<span style="color:blue;">True</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;vComponents&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Object</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vComponents&nbsp;=&nbsp;swAssem.<b>GetComponents</b>(<span style="color:blue;">True</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;<span style="color:blue;">Not</span>&nbsp;IsNothing(vComponents)&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;vComp&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Object</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">For</span>&nbsp;<span style="color:blue;">Each</span>&nbsp;vComp&nbsp;<span style="color:blue;">In</span>&nbsp;vComponents
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;swComp&nbsp;<span style="color:blue;">As</span>&nbsp;Component2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swComp&nbsp;=&nbsp;vComp
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swComp.<b>Select4</b>(<span style="color:blue;">True</span>,&nbsp;<span style="color:blue;">Nothing</span>,&nbsp;<span style="color:blue;">False</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Next</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Sub</span> 
 
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:gray;">'''</span><span style="color:green;">&nbsp;</span><span style="color:gray;">&lt;summary&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:gray;">'''</span><span style="color:green;">&nbsp;The&nbsp;SldWorks&nbsp;swApp&nbsp;variable&nbsp;is&nbsp;pre-assigned&nbsp;for&nbsp;you.</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:gray;">'''</span><span style="color:green;">&nbsp;</span><span style="color:gray;">&lt;/summary&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Public</span>&nbsp;swApp&nbsp;<span style="color:blue;">As</span>&nbsp;SldWorks 
 
<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Class</span></font></pre>
<div align="center">
	<pre style="font-family: Verdana; font-size: 8pt; color: #0000FF; background-image:none; background-repeat:repeat; background-attachment:scroll"><a href="#Top">Back to top</a></pre>
</div>
<pre style="font-family: Consolas; font-size: 13; color: black; background: white"><span style="background-position: 0 0"><font face="Courier New" color="#008000"><a name="Class"></a>'Class</font></span></pre>
<pre style="font-family: Consolas; font-size: 13; color: black; background: white"><font face="Courier New"><span style="color:blue;">Imports</span>&nbsp;SolidWorks.Interop.sldworks
<span style="color:blue;">Imports</span>&nbsp;SolidWorks.Interop.swconst
<span style="color:blue;">Imports</span>&nbsp;System
<span style="color:blue;">Imports</span>&nbsp;System.Diagnostics
<span style="color:blue;">Imports</span>&nbsp;System.Runtime.InteropServices
<span style="color:blue;">Imports</span>&nbsp;Macro1VBNET.vbproj.SolidWorksMacro
 
<span style="color:blue;">Public</span>&nbsp;<span style="color:blue;">Class</span>&nbsp;<span style="color:#2b91af;">Class1</span>
 
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Private</span>&nbsp;swComp&nbsp;<span style="color:blue;">As</span>&nbsp;Component2
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Private</span>&nbsp;swReferenceTransform&nbsp;<span style="color:blue;">As</span>&nbsp;MathTransform

&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Public</span>&nbsp;<span style="color:blue;">Sub</span>&nbsp;RecordReferencePosition(<span style="color:blue;">ByVal</span>&nbsp;swComponent&nbsp;<span style="color:blue;">As</span>&nbsp;Component2)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swComp&nbsp;=&nbsp;swComponent
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swReferenceTransform&nbsp;=&nbsp;swComp.<b>Transform2</b>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Sub
</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Public</span>&nbsp;<span style="color:blue;">Function</span>&nbsp;IsAtReferencePosition()&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Boolean</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;swCurrentTransform&nbsp;<span style="color:blue;">As</span>&nbsp;MathTransform
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swCurrentTransform&nbsp;=&nbsp;swComp.<b>Transform2</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;swProduct&nbsp;<span style="color:blue;">As</span>&nbsp;MathTransform
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swProduct&nbsp;=&nbsp;swReferenceTransform.<b>Multiply</b>(swCurrentTransform.<b>Inverse</b>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;vProduct&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Object</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vProduct&nbsp;=&nbsp;swProduct.<b>ArrayData</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:green;">'&nbsp;Require&nbsp;identity&nbsp;transform</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Dim</span>&nbsp;bResult&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">Boolean</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(0),&nbsp;1)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(1),&nbsp;0)&nbsp;<span style="color:blue;">And</span>&nbsp;bResult
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(2),&nbsp;0)&nbsp;<span style="color:blue;">And</span>&nbsp;bResult
 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(3),&nbsp;0)&nbsp;<span style="color:blue;">And</span>&nbsp;bResult
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(4),&nbsp;1)&nbsp;<span style="color:blue;">And</span>&nbsp;bResult
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(5),&nbsp;0)&nbsp;<span style="color:blue;">And</span>&nbsp;bResult
 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(6),&nbsp;0)&nbsp;<span style="color:blue;">And</span>&nbsp;bResult
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(7),&nbsp;0)&nbsp;<span style="color:blue;">And</span>&nbsp;bResult
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(8),&nbsp;1)&nbsp;<span style="color:blue;">And</span>&nbsp;bResult
 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(9),&nbsp;0)&nbsp;<span style="color:blue;">And</span>&nbsp;bResult
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(10),&nbsp;0)&nbsp;<span style="color:blue;">And</span>&nbsp;bResult
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(11),&nbsp;0)&nbsp;<span style="color:blue;">And</span>&nbsp;bResult
 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bResult&nbsp;=&nbsp;EqualWithinTolerance(vProduct(12),&nbsp;1)&nbsp;<span style="color:blue;">And</span>&nbsp;bResult
 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">If</span>&nbsp;<span style="color:blue;">Not</span>&nbsp;bResult&nbsp;<span style="color:blue;">Then</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(Name&nbsp;&amp;&nbsp;<span style="color:#a31515;">&quot;:&quot;</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(Format(vProduct(0),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>)&nbsp;&amp;&nbsp;vbTab&nbsp;&amp;&nbsp;Format(vProduct(1),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>)&nbsp;&amp;&nbsp;vbTab&nbsp;&amp;&nbsp;Format(vProduct(2),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(Format(vProduct(3),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>)&nbsp;&amp;&nbsp;vbTab&nbsp;&amp;&nbsp;Format(vProduct(4),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>)&nbsp;&amp;&nbsp;vbTab&nbsp;&amp;&nbsp;Format(vProduct(5),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(Format(vProduct(6),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>)&nbsp;&amp;&nbsp;vbTab&nbsp;&amp;&nbsp;Format(vProduct(7),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>)&nbsp;&amp;&nbsp;vbTab&nbsp;&amp;&nbsp;Format(vProduct(8),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(Format(vProduct(9),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>)&nbsp;&amp;&nbsp;vbTab&nbsp;&amp;&nbsp;Format(vProduct(10),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>)&nbsp;&amp;&nbsp;vbTab&nbsp;&amp;&nbsp;Format(vProduct(11),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#2b91af;">Debug</span>.Print(Format(vProduct(12),&nbsp;<span style="color:#a31515;">&quot;0.000000&quot;</span>))
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">If</span>
 
 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IsAtReferencePosition&nbsp;=&nbsp;bResult
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Function
</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Public</span>&nbsp;<span style="color:blue;">ReadOnly</span>&nbsp;<span style="color:blue;">Property</span>&nbsp;Name()&nbsp;<span style="color:blue;">As</span>&nbsp;<span style="color:blue;">String</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">Get</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name&nbsp;=&nbsp;swComp.<b>Name2</b>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Get</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Property</span>
 
<span style="color:blue;">End</span>&nbsp;<span style="color:blue;">Class</span></font>
</pre>

<p align="center"><a href="#Top">Back to top</a></p>

<p>&nbsp;</p>

</body>

</html>
