<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Corner Points of a Reference Plane Example (C#)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta NAME=MS-HKWD CONTENT="C# examples,reference planes">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1672>
<meta name=layout-width content=863>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Get Corner Points of a Reference Plane Example (C#)</h1>
<p>This example shows how to obtain the four corner points of a reference plane.</p>

<pre>//-----------------------------------------------------------------------------
// Preconditions:
// 1. Verify that the part to open exists.
// 2. Open the Immediate window.
//
// Postconditions:
// 1. Opens the part.
// 2. Creates 3DSketch1 containing four corner points of the reference plane.
// 3. Gets the coordinates of each corner point.
// 4. Examine the Immediate window.
//
// NOTE: Because the part is used elsewhere, do not save changes.
//----------------------------------------------------------------------------
using SolidWorks.Interop.sldworks;
using SolidWorks.Interop.swconst;
using System;
using System.Diagnostics;
namespace Macro1CSharp.csproj
{
    partial class SolidWorksMacro
    {
        ModelDoc2 swModel;
        bool boolstatus;
        Feature swFeature;
        RefPlane swRefPlane;
        ModelDocExtension swModelExt;
        SelectionMgr swSelMgr;
        Double[] vArrayData;
        Object[] cpObj;
        MathPoint[] vMathPoints = new MathPoint[4];
        int i;
        SketchManager sketchMgr;
        SketchPoint sketchPt;
        string filename;
        int errors;  
        int warnings; 
        public void Main()
        {
            filename = &quot;C:\\Users\\Public\\Documents\\SOLIDWORKS\\SOLIDWORKS 2018\\samples\\tutorial\\swutilities\\bracket_a.sldprt&quot;;
            swModel = (ModelDoc2)swApp.<b>OpenDoc6</b>(filename, (int)swDocumentTypes_e.swDocPART, (int)swOpenDocOptions_e.swOpenDocOptions_Silent, &quot;&quot;, ref errors, ref warnings);
            swModelExt = swModel.<b>Extension</b>;
            swSelMgr = (SelectionMgr)swModel.<b>SelectionManager</b>;
            sketchMgr = swModel.<b>SketchManager</b>;
            boolstatus = swModelExt.<b>SelectByID2</b>(&quot;Plane4&quot;, &quot;PLANE&quot;, 0, 0, 0, false, 0, null, (int)swSelectOption_e.swSelectOptionDefault);
            swFeature = (Feature)swSelMgr.<b>GetSelectedObject6</b>(1, -1);
            swRefPlane = (RefPlane)swFeature.<b>GetSpecificFeature2</b>();
            cpObj = (Object[])swRefPlane.<b>CornerPoints</b>;</pre>
<pre>            //Four (4) MathPoint objects are always returned 
            sketchMgr.<b>Insert3DSketch</b>(true);
            for (i = 0; i &lt;= cpObj.GetUpperBound(0); i++)
            {
                vMathPoints[i] = (MathPoint)cpObj[i];
                vArrayData = (Double[])(vMathPoints[i].<b>ArrayData</b>);
                Debug.Print(&quot; Point x = &quot; + vArrayData[0]);
                Debug.Print(&quot; Point y = &quot; + vArrayData[1]);
                Debug.Print(&quot; Point z = &quot; + vArrayData[2]);
                Debug.Print(&quot;&quot;);
                sketchPt = sketchMgr.<b>CreatePoint</b>(vArrayData[0], vArrayData[1], vArrayData[2]);
            }
            sketchMgr.<b>Insert3DSketch</b>(true);
        }
        public SldWorks swApp;
    }
}

</pre>

</body>

</html>
