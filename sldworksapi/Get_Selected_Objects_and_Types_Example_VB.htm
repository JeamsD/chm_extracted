<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html LANG=EN-US>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Selected Objects and Types Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=date content="10 11, 2002 4:22:24 PM">
<meta name=MS-HKWD content="VBA examples,objects">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2189>
<meta name=layout-width content=938>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body LANG=EN-US>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Get Selected Objects and Types Example (VBA)</h1>

<p class=apiDescriptionText>This example shows how to determine what is 
 currently selected.</p>

<p class=apiCode><font face="Verdana" style="font-size: 8pt"><b>NOTE</b>: <!--kadov_tag{{</spaces>}}-->
You can select many features and entities 
 in SOLIDWORKS. In most cases, <!--kadov_tag{{</spaces>}}-->it 
 is obvious&nbsp; what is selected, but&nbsp;<!--kadov_tag{{</spaces>}}-->sometimes 
 it is not clear or it is ambiguous.&nbsp;<!--kadov_tag{{</spaces>}}-->This example is a diagnostic tool&nbsp;<!--kadov_tag{{</spaces>}}-->to 
 determine what is currently selected. It shows&nbsp;<!--kadov_tag{{</spaces>}}-->several 
 techniques and methods to get a reference&nbsp;<!--kadov_tag{{</spaces>}}-->to 
 what is selected.</font></p>
<pre>'-----------------------------------------------
' Preconditions:
' 1. Open an assembly.
' 2. Select a feature or entity in the assembly.
' 3. Open the Immediate window.
'
' Postconditions: Examine the Immediate window.
'-----------------------------------------------
Option Explicit</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swSelMgr As SldWorks.SelectionMgr
    Dim swSelObj As Object
    Dim swFeat As SldWorks.Feature
    Dim swEnt As SldWorks.Entity
    Dim swBody As SldWorks.Body2
    Dim swSelComp As SldWorks.Component2
    Dim swSelModel As SldWorks.ModelDoc2
    Dim nSelType As Long
    Dim sFeatName As String
    Dim bRet As Boolean</pre>
<pre>    ' Disables Visual Basic's implicit error on QueryInterface
    On Error Resume Next</pre>
<pre>    Set swApp = CreateObject(&quot;SldWorks.Application&quot;)
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swSelMgr = swModel.<b>SelectionManager</b></pre>
<pre>    ' Could either have a feature or entity selected
    ' Do not try to get entity directly
    ' from feature because feature might be Nothing
    ' Instead, use ISelectionMgr
    Set swFeat = swSelMgr.<b>GetSelectedObject5</b>(1)
    Set swEnt = swSelMgr.<b>GetSelectedObject5</b>(1)
    Set swBody = swSelMgr.<b>GetSelectedObject5</b>(1)
    Set swSelObj = swSelMgr.<b>GetSelectedObject5</b>(1)
    Set swSelComp = swSelMgr.<b>GetSelectedObjectsComponent2</b>(1)
    Debug.Print &quot;Selected Type      = &quot; &amp; swSelMgr.<b>GetSelectedObjectType2</b>(1)
    If Not swFeat Is Nothing Then
        Debug.Print &quot;Feature            = &quot; + swFeat.<b>Name</b> + &quot; [&quot; + swFeat.<b>GetTypeName</b> + &quot;]&quot;
    End If</pre>
<pre>    If Not swBody Is Nothing Then
        Debug.Print &quot;  Body selected&quot;
    End If</pre>
<pre>    If swFeat Is Nothing And swEnt Is Nothing And swBody Is Nothing And Not swSelObj Is Nothing Then
        Debug.Print &quot;  Unknown object&quot;
    End If</pre>
<pre>    ' Could not get component from ISelectionMgr,
    ' so try and get component through IEntity
    If swSelComp Is Nothing Then
        Set swSelComp = swEnt.<b>GetComponent</b>
    End If</pre>
<pre>    If Not swSelComp Is Nothing Then
        Set swSelModel = swSelComp.<b>GetModelDoc</b>
        Debug.Print &quot;Component Name     = &quot; + swSelComp.<b>Name2</b>
        Debug.Print &quot;Model Path         = &quot; + swSelModel.<b>GetPathName</b>
    End If

End Sub
</pre>
<pre> </pre>

</body>

</html>
