<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Find Outside Edges of Face Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2789>
<meta name=layout-width content=628>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">

 <META NAME="MS-HKWD" CONTENT="VBA examples,faces">
 <META NAME="MS-HKWD" CONTENT="VBA examples,edges">
  <META NAME="MS-HKWD" CONTENT="VBA examples,curves">
   <META NAME="MS-HKWD" CONTENT="VBA examples,3D sketches">
</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Find Outside Edges of Face Example (VBA)</h1>

<p>This example shows how to find the outside edges of the selected face.</p>

<pre>'---------------------------------------------------
' Preconditions:
' 1. Open a part and select a face.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Finds the outside edges of the selected face
'    and creates a 3D sketch using the outside edges.
' 2. Examine the Immediate window, selected face,
'    FeatureManager design tree, and 3D sketch.
'---------------------------------------------------</pre>
<pre>Option Explicit</pre>
<pre>Sub CreateTessCurve(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swSketch As SldWorks.Sketch, swTrimCurve As SldWorks.Curve)
    Const nChordTol As Double = 0.001   ' Meters
    Const nLengthTol As Double = 0.001   ' Meters
    Dim nStartParam As Double
    Dim nEndParam As Double
    Dim bIsClosed As Boolean
    Dim bIsPeriodic As Boolean
    Dim vStartPt As Variant
    Dim vEndPt As Variant
    Dim vTessPts As Variant
    Dim swSketchSeg As SldWorks.SketchSegment
    Dim bRet As Boolean
    Dim i As Long</pre>
<pre>    ' Really not needed because curve is a trimmed curve,
    ' so could pass in trim points as parameters
    bRet = swTrimCurve.<b>GetEndParams</b>(nStartParam, nEndParam, bIsClosed, bIsPeriodic)
    vStartPt = swTrimCurve.<b>Evaluate</b>(nStartParam)
    vEndPt = swTrimCurve.<b>Evaluate</b>(nEndParam)</pre>
<pre>    vTessPts = swTrimCurve.<b>GetTessPts</b>(nChordTol, nLengthTol, (vStartPt), (vEndPt))</pre>
<pre>    ' Disable VBA range checking because tessellation points
    ' might not be a multiple of 6
    On Error Resume Next
    For i = 0 To UBound(vTessPts) Step 3
        Set swSketchSeg = swModel.<b>CreateLine2</b>(vTessPts(i + 0), vTessPts(i + 1), vTessPts(i + 2), vTessPts(i + 3), vTessPts(i + 4), vTessPts(i + 5))
    Next i</pre>
<pre>    On Error GoTo 0</pre>
<pre>End Sub</pre>
<pre>Sub CreateTessLoop(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swLoop As SldWorks.Loop2)
    Dim vEdgeArr As Variant
    Dim vEdge As Variant
    Dim swEdge As SldWorks.Edge
    Dim swCurve As SldWorks.Curve
    Dim swSketch As SldWorks.Sketch
    Dim bRet As Boolean</pre>
<pre>    swModel.<b>Insert3DSketch2</b> False
    swModel.<b>SetAddToDB</b> True
    swModel.<b>SetDisplayWhenAdded</b> False
    Set swSketch = swModel.<b>GetActiveSketch2</b>
    vEdgeArr = swLoop.<b>GetEdges</b>
    For Each vEdge In vEdgeArr
        Set swEdge = vEdge
        Set swCurve = swEdge.<b>GetCurve</b>
        CreateTessCurve swApp, swModel, swSketch, swCurve
    Next vEdge</pre>
<pre>    swModel.<b>SetDisplayWhenAdded</b> True
    swModel.<b>SetAddToDB</b> False
    swModel.<b>Insert3DSketch2</b> True</pre>
<pre>    bRet = swModel.<b>EditRebuild3</b></pre>
<pre>End Sub</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swPart As SldWorks.PartDoc
    Dim swSelMgr As SldWorks.SelectionMgr
    Dim swFace As SldWorks.Face2
    Dim swLoop As SldWorks.Loop2
    Dim i As Long
    Dim bRet As Boolean</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swPart = swModel
    Set swSelMgr = swModel.<b>SelectionManager</b>
    Set swFace = swSelMgr.<b>GetSelectedObject6</b>(1, -1)
    Debug.Print &quot;FaceArea  = &quot; &amp; swFace.<b>GetArea</b> * 1000000# &amp; &quot; mm^2&quot;
    Debug.Print &quot;  LoopCount    = &quot; &amp; swFace.<b>GetLoopCount</b>
    Debug.Print &quot;&quot;</pre>
<pre>    Set swLoop = swFace.<b>GetFirstLoop</b>
    Do While Not swLoop Is Nothing
        i = i + 1
        Debug.Print &quot;  Loop(&quot; &amp; i &amp; &quot;)&quot;
        Debug.Print &quot;    IsOuter    = &quot; &amp; swLoop.<b>IsOuter</b>
        Debug.Print &quot;    IsSingular = &quot; &amp; swLoop.<b>IsSingular</b>
        If swLoop.<b>IsOuter</b> Then
            CreateTessLoop swApp, swModel, swLoop
        End If
        Set swLoop = swLoop.<b>GetNext</b>
    Loop</pre>
<pre>End Sub</pre>

</body>

</html>
