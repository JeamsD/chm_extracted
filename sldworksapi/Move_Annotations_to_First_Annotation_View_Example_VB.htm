<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Move Annotations to Notes Area Annotation View Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1545>
<meta name=layout-width content=740>
<meta name=MS-HKWD content="VBA examples,annotation views">
<meta name=MS-HKWD content="VBA examples,annotations">


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Move Annotations to Notes Area Annotation View Example (VBA)</h1>

<p class=apiCode><font face="Verdana" style="font-size: 8pt">This example shows 
how to move all annotations to the <b>Notes Area</b> annotation view.</font></p>
<pre>'----------------------------------------------
' Preconditions:
' 1. Open <i>public_documents</i><b>\samples\tutorial\api\button.sldprt</b>.
' 2. Add a note to the <b>*Top</b> annotation view by double-clicking
'    <b>*Top</b> in the <b>Annotations</b> folder in the FeatureManager design
'    tree and clicking <b>Insert &gt; Annotations &gt; Note</b>. If prompted
'    to turn on feature dimensions display, click <b>No</b>.
' 3. Repeat step 2 to add a note to the <b>*Front</b> annotation view.
' 4. Double-click the <b>Unassigned Items</b> annotation view in the
'    <b>Annotations </b>folder in the FeatureManager design tree.
' 5. Open the Immediate window.
'
' Postconditions:
' 1. Examine the Immediate window.
' 2. Double-click each annotation view in the FeatureManager
'    design tree to verify that all annotations were moved
'    from <b>*Front</b> and <b>*Top</b> to <b>Notes Area</b> only. If prompted
'    to turn on feature dimensions display, click <b>No</b>.
'
<font SIZE="2">' NOTE<b>:</b> Because the part is used elsewhere,
' do not save changes when closing the document.</font>
'----------------------------------------------</pre>
<pre>Option Explicit</pre>
<pre>Dim swApp As SldWorks.SldWorks
Dim swModel As SldWorks.ModelDoc2
Dim swModelExt As SldWorks.ModelDocExtension
Dim swAnnViews As Variant
Dim annotations As Variant
Dim annToMove(1) As SldWorks.Annotation
Dim swAnnView As SldWorks.AnnotationView
Dim swAnn As SldWorks.Annotation
Dim swFeat As SldWorks.Feature
Dim swMathTransform As SldWorks.MathTransform
Dim i As Long
Dim j As Long
Dim k As Long
Dim l as Long
Dim planeArray() As Double
Dim nbrPlaneArray as Long
Dim status As Boolean
Dim transformArray() As Double</pre>
<pre>Sub main()</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swModelExt = swModel.<b>Extension</b>      </pre>
<pre>    'Get the annotation views, number of annotation views,
    'their names, and whether the annotation view is 
    'hidden (i.e., not activated)
    swAnnViews = swModelExt.<b>AnnotationViews
</b>    Debug.Print &quot;Number of annotation views: &quot; &amp; swModelExt.<b>AnnotationViewCount</b>
    Debug.Print &quot;  Annotation view name: &quot;
    For i = 0 To swModelExt.<b>AnnotationViewCount</b> - 1
        Set swAnnView = swAnnViews(i)
        Set swFeat = swAnnView
        Debug.Print &quot;     &quot; &amp; swFeat.<b>Name</b>
        status = swAnnView.<b>Hide
</b>        'status dependent on whether the annotation view is activated
        'Only Unassigned Items is activated
        Debug.Print &quot;        Hide: &quot; &amp; status
 	Debug.Print &quot;        Flat-pattern view: &quot; &amp; swAnnView.<b>FlatPatternView</b>
    Next      </pre>
<pre>    'Iterate through each annotation view and its annotations
    'Print each annotation name, its rotation matrix, whether it is 
    'shown in the annotation view, and whether it is assigned to a 
    '3D view
    'Add all annotations to an array to move them
    k = 0
    l = 0
    Debug.Print &quot;&quot;
    Debug.Print &quot;  Name and number of annotations in annotation view: &quot;
    For i = 0 To swModelExt.<b>AnnotationViewCount</b> - 1
        Set swAnnView = swAnnViews(i)
        swAnnView.<b>Activate</b>
        annotations = swAnnView.<b>GetAnnotations2</b>(False, False)
        Set swFeat = swAnnView
        Debug.Print &quot;&quot;
        Debug.Print &quot;        &quot; &amp; swFeat.<b>Name</b> &amp; &quot; = &quot; &amp; swAnnView.<b>AnnotationCount</b>
        If Not IsEmpty(annotations) Then
            For j = 0 To swAnnView.<b>AnnotationCount</b> - 1
                Set swAnn = annotations(j)
                planeArray = swAnn.<b>GetPlane</b>
                nbrPlaneArray = UBound(planeArray)
                Debug.Print &quot;          Rotation matrix of the annotation relative to the X-Y plane of the model: &quot;
                Do While l &lt; nbrPlaneArray
                    Debug.Print &quot;           &quot; &amp; planeArray(l) &amp; &quot; &quot; &amp; planeArray(l + 1) &amp; &quot; &quot; &amp; planeArray(l + 2)
                    l = l + 3
                Loop
 		Set swMathTransform = swAnn.<b>GetFlipPlaneTransform</b>
		transformArray = swMathTransform.<b>ArrayData</b>()
		If Not IsEmpty(transformArray) Then
			Debug.Print &quot;       Rotation matrix if annotation plane flipped:&quot;
			Debug.Print &quot;        &quot; &amp; transformArray(0) &amp; &quot; &quot; &amp; transformArray(1) &amp; &quot; &quot; &amp; transformArray(2)
			Debug.Print &quot;        &quot; &amp; transformArray(3) &amp; &quot; &quot; &amp; transformArray(4) &amp; &quot; &quot; &amp; transformArray(5)
			Debug.Print &quot;        &quot; &amp; transformArray(6) &amp; &quot; &quot; &amp; transformArray(7) &amp; &quot; &quot; &amp; transformArray(8)
			Debug.Print &quot;       Translation component if annotation plane flipped:&quot;
			Debug.Print &quot;        &quot; &amp; transformArray(9) &amp; &quot; &quot; &amp; transformArray(10) &amp; &quot; &quot; &amp; transformArray(11)
			Debug.Print
		End If
                l = 0 
                If k &gt;= 0 Then
                    Set annToMove(k) = swAnn
                    k = k + 1
                End If
                Debug.Print &quot;          Annotation names:&quot;
                Debug.Print &quot;            &quot; &amp; swAnn.<b>GetName</b>
                status = swAnnView.<b>IsShown</b>
                Debug.Print &quot;               Shown in this annotation view: &quot; &amp; status
                status = swAnnView.<b>UnassignedView</b>
                Debug.Print &quot;                  Assigned to a 3D View: &quot; &amp; status
            Next
        End If
    Next    </pre>
<pre>    'Move all annotations to the Notes Area annotation view
    Debug.Print &quot;&quot;
    Debug.Print &quot;Move all annotations to Notes Area annotation view:&quot;
    For i = 0 To swModelExt.<b>AnnotationViewCount</b> - 1
        Set swAnnView = swAnnViews(i)
        swAnnView.<b>Activate</b>
        Set swFeat = swAnnView
        If swFeat.<b>Name</b> = &quot;Notes Area&quot; Then
            status = swAnnView.<b>MoveAnnotations</b>(annToMove)
            Debug.Print &quot;  Annotations moved: &quot; &amp; status
            status = swAnnView.<b>Show
</b>            'status should be false because annotation was activated<b>
</b>            Debug.Print &quot;    Show: &quot; &amp; status
        End If
    Next</pre>
<pre>End Sub</pre>

</body>

</html>
