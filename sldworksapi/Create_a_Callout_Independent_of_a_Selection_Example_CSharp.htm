<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Create a Callout Independent of a Selection Example (C#)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="Callout (see also ICallout Interface),independent">
<meta name=MS-HKWD content="C# examples,callouts">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1935>
<meta name=layout-width content=997>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Create a Callout Independent of a Selection Example (C#)</h1>

<div style="font-family:Monospace; font-size: 10pt; background-color: white;">
	<div style="font-family:Monospace; font-size: 10pt; background-color: white;">
		<p>This example shows how to create a callout that is independent of a 
		selection.<p class="APICODE"><span style="color:Green">
		//---------------------------------------------------------------------------<br>
		// Preconditions:&nbsp;&nbsp;<br>
		//&nbsp;1. Open a model document.<br>
		//&nbsp;2. Click <b>Project &gt; Add Reference &gt;</b> <b>SolidWorks.interop.swpublished<br>
		</b>//&nbsp;&nbsp;&nbsp; on the .NET tab.<br>
		//&nbsp;3. Rename the namespace of this macro to match the name of your 
		C# project.<br>
		//<br>
		// Postconditions: <br>
		//&nbsp;1. Creates a callout with the specified properties.<br>
		//&nbsp;2. Inspect the Immediate window for its text format properties.<br>
		//--------------------------------------------------------------------------<br>
		</span><span style="color:Blue">using</span><span style="color:Black"> 
		System;<br>
		</span><span style="color:Blue">using</span><span style="color:Black"> 
		System.Collections.Generic;<br>
		</span><span style="color:Blue">using</span><span style="color:Black"> 
		System.Text;<br>
		</span><span style="color:Blue">using</span><span style="color:Black"> 
		SolidWorks.Interop.sldworks;<br>
		</span><span style="color:Blue">using</span><span style="color:Black"> 
		SolidWorks.Interop.swconst;<br>
		</span><span style="color:Blue">using</span><span style="color:Black"> 
		SolidWorks.Interop.swpublished;<br>
		</span><span style="color:Blue">using</span><span style="color:Black"> 
		System.Diagnostics;<br>
		</span><span style="color:Blue">namespace</span><span style="color:Black"> 
		CreateCallout_CSharp.csproj<br>
		{<br>
		&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">partial</span><span style="color:Black">
		</span><span style="color:Blue">class</span><span style="color:Black">
		</span><span style="color:#2b91af">SolidWorksMacro<br>
		</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;{<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">ModelDoc2</span><span style="color:Black"> 
		swModel;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">ModelDocExtension</span><span style="color:Black"> 
		swExt;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">SelectionMgr</span><span style="color:Black"> 
		swSelMgr;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">MathUtility</span><span style="color:Black"> 
		mathUtil;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">public</span><span style="color:Black">
		</span><span style="color:Blue">void</span><span style="color:Black"> 
		Main()<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swModel = (</span><span style="color:#2b91af">ModelDoc2</span><span style="color:Black">)swApp.ActiveDoc;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swExt = swModel.Extension;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swSelMgr = (</span><span style="color:#2b91af">SelectionMgr</span><span style="color:Black">)swModel.SelectionManager;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mathUtil = (</span><span style="color:#2b91af">MathUtility</span><span style="color:Black">)swApp.GetMathUtility();<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">calloutHandler</span><span style="color:Black"> 
		handle = </span><span style="color:Blue">new</span><span style="color:Black">
		</span><span style="color:#2b91af">calloutHandler</span><span style="color:Black">();<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">MathPoint</span><span style="color:Black"> 
		mp;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">double</span><span style="color:Black">[] 
		vPnt = </span><span style="color:Blue">new</span><span style="color:Black">
		</span><span style="color:Blue">double</span><span style="color:Black">[3];<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vPnt[0] = 0.0;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vPnt[1] = 0.0;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vPnt[2] = 0.0;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mp = (</span><span style="color:#2b91af">MathPoint</span><span style="color:Black">)mathUtil.CreatePoint(vPnt);<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Callout</span><span style="color:Black"> 
		myCallout;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCallout = swExt.<b>CreateCallout</b>(2, handle);<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCallout.<b>set_Value</b>(1, </span>
		<span style="color:#a31515">&quot;&quot;</span><span style="color:Black">);<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCallout.<b>set_IgnoreValue</b>(1, </span>
		<span style="color:Blue">true</span><span style="color:Black">);<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCallout.<b>set_Label2</b>(1, </span>
		<span style="color:#a31515">&quot;SldWorks API&quot;</span><span style="color:Black">);<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCallout.<b>SkipColon</b> = </span>
		<span style="color:Blue">true</span><span style="color:Black">;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCallout.<b>SetLeader</b>(</span><span style="color:Blue">true</span><span style="color:Black">,
		</span><span style="color:Blue">true</span><span style="color:Black">);<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCallout.<b>SetTargetPoint</b>(1, 0.001, 0.001, 0);<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCallout.<b>SetTargetPoint</b>(2, -0.001, 0.001, 0);<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCallout.<b>Position</b> = mp;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCallout.<b>set_ValueInactive</b>(0, </span>
		<span style="color:Blue">true</span><span style="color:Black">);<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCallout.<b>TextBox</b> = </span><span style="color:Blue">
		false</span><span style="color:Black">;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myCallout.<b>Display</b>(</span><span style="color:Blue">true</span><span style="color:Black">);</span><p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color: #2B91AF">TextFormat</span><span style="color:Black"> 
		</span>swTextFormat = myCallout.<b>TextFormat;<br>
	</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ProcessTextFormat(swApp, swModel, swTextFormat)<span style="color:Black">;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:Blue">public</span><span style="color:Black"> </span>
		<span style="color:Blue">void</span> ProcessTextFormat(<span style="color:#2b91af">SldWorks</span><span style="color:Black"> 
		</span>swApp, <span style="color:#2b91af">ModelDoc2</span><span style="color:Black"> 
		</span>swModel, <span style="color: #2B91AF">TextFormat</span><span style="color:Black"> 
		</span>swTextFormat)&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { <br>&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; BackWards&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>BackWards);</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; 
		Bold&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>Bold);</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; CharHeight&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>CharHeight);</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; CharHeightInPts&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>CharHeightInPts</b><b>)</b><b>;</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; CharSpacingFactor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>CharSpacingFactor</b><b>)</b><b>;</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; 
		Escapement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>Escapement</b><b>)</b><b>;</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; IsHeightSpecifiedInPts&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>IsHeightSpecifiedInPts());</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; 
		Italic&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>Italic</b><b>)</b><b>;</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; LineLength&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>LineLength</b><b>)</b><b>;</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; LineSpacing&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>LineSpacing</b><b>)</b><b>;</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; ObliqueAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>ObliqueAngle</b><b>)</b><b>;</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; 
		Strikeout&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>Strikeout</b><b>)</b><b>;</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; TypeFaceName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>TypeFaceName</b><b>)</b><b>;</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; 
		Underline&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>Underline</b><b>)</b><b>;</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; UpsideDown&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>UpsideDown</b><b>)</b><b>;</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; 
		Vertical&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>Vertical</b><b>)</b><b>;</b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&nbsp;&nbsp;&nbsp; WidthFactor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		= &quot;</font> + swTextFormat.<b>WidthFactor</b><b>)</b><b>;<br></b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span style="color:#2b91af">&nbsp;&nbsp;&nbsp; Debug</span>.Print(<font color="#800000">&quot;&quot;);</font><p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
		}<span style="color:Black"><br>
		<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">public</span><span style="color:Black">
		</span><span style="color:#2b91af">SldWorks</span><span style="color:Black"> 
		swApp;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;}<br>
		&nbsp;&nbsp;&nbsp;&nbsp;[System.Runtime.InteropServices.</span><span style="color:#2b91af">ComVisible</span><span style="color:Black">(</span><span style="color:Blue">true</span><span style="color:Black">)]<br>
		&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">public</span><span style="color:Black">
		</span><span style="color:Blue">class</span><span style="color:Black">
		</span><span style="color:#2b91af">calloutHandler</span><span style="color:Black"> 
		: </span><span style="color:#2b91af">SwCalloutHandler<br>
		</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;{<br>
		</span><span style="color:Blue">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#region</span><span style="color:Black"> 
		ISwCalloutHandler Members<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">bool</span><span style="color:Black">
		</span><span style="color:#2b91af">ISwCalloutHandler</span><span style="color:Black">.OnStringValueChanged(</span><span style="color:Blue">object</span><span style="color:Black"> 
		pManipulator, </span><span style="color:Blue">int</span><span style="color:Black"> 
		RowID, </span><span style="color:Blue">string</span><span style="color:Black"> 
		Text)<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;Text: 
		&quot;</span><span style="color:Black"> + Text);<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;Row: 
		&quot;</span><span style="color:Black"> + RowID.ToString());<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">return</span><span style="color:Black">
		</span><span style="color:Blue">true</span><span style="color:Black">;<br>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
		</span><span style="color:Blue">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#endregion<br>
		</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;}<br>
		}</span>
		</div>
	<p class="APICODE">&nbsp;</div>

</body>

</html>
