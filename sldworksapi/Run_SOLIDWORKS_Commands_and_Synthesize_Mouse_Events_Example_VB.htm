<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Run SOLIDWORKS Commands and Synthesize Mouse Events Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=6963>
<meta name=layout-width content=786>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">

 <META NAME="MS-HKWD" CONTENT="VBA examples,mouse">
 <META NAME="MS-HKWD" CONTENT="VBA examples,SOLIDWORKS commands">

</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1><a name=Top></a>Run SOLIDWORKS Commands and Synthesize Mouse Events 
 Example (VBA)</h1>

<p>This example shows how to run SOLIDWORKS commands and synthesize mouse 
 events. </p>

<pre>'-----------------------------------------------------------
' Preconditions:
' 1. Verify that the specified part document to open exists.
' 2. Right-click the project name in the Project Explorer and click
'    <b>Insert &gt; Class Module</b>.
' 3. Copy <a href="#Module">Module</a> to the main module.
' 4. Copy <a href="#Class">Class1</a> to the class module.
' 5. In the IDE, click <b>Tools &gt; References</b>, click
'    <span style="FONT-WEIGHT: bold">SOLIDWORKS </span><em>version</em> <span style="FONT-WEIGHT: bold">Commands type library</span>, and click <b>OK</b>.
' 6. Open the Immediate window.
'
' Postconditions:
' 1. Opens the specified part document.
' 2. Fits the model to the graphics area.
' 3. Moves the mouse.
' 4. Changes the view orientation to <b>*Front</b>.
' 5. Select an edge on the model.
' 6. Left-click anywhere outside the model in the graphics area.
' 7. Click <b>Reset</b> in the IDE to stop executing the macro.
' 8. Examine the Immediate window.
'-----------------------------------------------------------
<a name="Module"></a>'Module
Option Explicit</pre>
<pre>Dim swApp As SldWorks.SldWorks
Dim swModel As SldWorks.ModelDoc2
Dim swModelDocExt As SldWorks.ModelDocExtension
Dim swModelView As SldWorks.ModelView
Dim swMouse As SldWorks.mouse
Dim TheMouse As SldWorks.mouse
Dim obj As New Class1
Dim i As Long
Dim x As Double
Dim fileName As String
Dim errors As Long
Dim warnings As Long
Dim status As Boolean</pre>
<pre>Sub main()</pre>
<pre>    Set swApp = Application.SldWorks
    fileName = &quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\api\block20.sldprt&quot;
    Set swModel = swApp.<b>OpenDoc6</b>(fileName, swDocumentTypes_e.swDocPART, swOpenDocOptions_e.swOpenDocOptions_Silent, &quot;&quot;, errors, warnings)
    Set swModelDocExt = swModel.<b>Extension</b>
    Set swModelView = swModel.<b>GetFirstModelView</b>
    Set TheMouse = swModelView.<b>GetMouse</b>    </pre>
<pre>    obj.init TheMouse    </pre>
<pre>    x = 0    </pre>
<pre>    Debug.Print &quot;Fit model to graphics area&quot;
    swModelDocExt.<b>RunCommand</b> swCommands_ZoomToFit, &quot;&quot;
    
    'Move the mouse
    status = TheMouse.<b>Move</b>(50, 150, swMouse_Absolute + swMouse_MouseMove + swMouse_LeftDown)
    Debug.Print (&quot;First call to Move: &quot; &amp; status)</pre>
<pre>       Debug.Print &quot;Calls to Move within loop:&quot;
       For i = 1 To 5
           DoEvents
           status = TheMouse.<b>Move</b>(5, 5, swMouse_MouseMove)
           Debug.Print (&quot;  Call &quot; &amp; i &amp; &quot; to Move: &quot; &amp; status)
        Next</pre>
<pre>       status = TheMouse.<b>Move</b>(0, 0, swMouse_LeftUp)
       Debug.Print (&quot;Last call to Move: &quot; &amp; status)      

</pre>
<pre>           Debug.Print(&quot;Call to MoveXYZ: &quot; &amp; status)
           status = TheMouse.<b>MoveXYZ</b>(0.03720615681732, 0.0316583060694, 0.04991700841805, swMouse_LeftDown)
           Debug.Print (&quot;Calls to Move within next loop: &quot;)                </pre>
<pre>           For i = 1 To 5
               DoEvents
               status = TheMouse.<b>Move</b>(5, 5, swMouse_MouseMove)
               Debug.Print &quot;    Call &quot; &amp; i + 1; &quot; to Move: &quot; &amp; &quot; &amp; status
           Next

               status = TheMouse.<b>Move</b>(0, 0, swMouse_LeftUp)
               Debug.Print (&quot;Call to Move after loop: &quot; &amp; status)            </pre>
<pre>       Debug.Print &quot;Change view orientation to *Front&quot;
       swModelDocExt.<b>RunCommand</b> swCommands_Front, &quot;&quot;   </pre>
<pre> End Sub</pre>
<div align="center">
	<pre><font face="Verdana" style="font-size: 8pt"><a href="#Top">Back to top</a></font></pre>
</div>
<p class=apiCode><a name="Class"></a>'Class1<br>
<br>
Dim WithEvents ms As SldWorks.mouse<br>
<br>
Private Sub Class_Initialize()<br>
End Sub<br>
&nbsp;</p>
<p class=apiCode>Public Sub init(mouse As Object)<br>
&nbsp;&nbsp;&nbsp; Set ms = mouse<br>
End Sub</p>
<p class=apiCode><br>
<br>
Private Function ms_<b>MouseSelectNotify</b>(ByVal Ix As Long, ByVal Iy As Long, 
ByVal x As Double, ByVal y As Double, ByVal z As Double) As Long<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Selection made:&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot; Mouse location:&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp; Window space coordinates:&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp;&nbsp; &quot; &amp; Ix<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp;&nbsp; &quot; &amp; Iy<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp; World space coordinates:&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp;&nbsp; &quot; &amp; x<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp;&nbsp; &quot; &amp; y<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp;&nbsp;&nbsp;&nbsp; &quot; &amp; z<br>
End Function</p>
<p class=apiCode><br>
Private Function ms_<b>MouseLBtnDownNotify</b>(ByVal x As Long, ByVal y As Long, 
ByVal WParam As Long) As Long<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Left-mouse button pressed.&quot;<br>
End Function<br>
&nbsp;</p>

<p style="text-align: center;"
	align=center><a href="#Top">Back to top</a></p>

</body>

</html>
