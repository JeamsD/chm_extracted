<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Rotate Assembly Component on Axis Using IDragOperator::DragAsUI Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta NAME=MS-HAID CONTENT=EXRotateAssemblyComponent2>
<meta name=MS-HKWD content="Assemblies (see also IAssemblyDoc Interface),rotate">
<meta name=MS-HKWD content="VBA examples,components">
<meta name=MS-HKWD content="Rotate,components">
<meta name=MS-HKWD content="Components (see also IComponent2 Interface),rotate">
<meta name=MS-HKWD content=Rotate>
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2075>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Rotate Assembly Component on Axis Using IDragOperator::DragAsUI Example 
 (VBA)</h1>

<p>This example shows how to rotate an assembly component about an assembly 
 axis using IDragOperator::DragAsUI.</p>

<p class="APICODE">
'----------------------------------------------------------------------------<br>
' Preconditions:<br>
' 1. Assembly document is open.<br>
' 2. Component in the assembly document is selected.<br>
'<br>
' Postconditions: Transform matrix is set.<br>
'----------------------------------------------------------------------------</p>
<p class="APICODE">Option Explicit<br>
Const PI&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Double = 3.14159<br>
Const RadPerDeg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; As Double = PI / 
180#</p>
<p class="APICODE">'&nbsp;&nbsp; DragOperator::TransformType<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Translation&nbsp;&nbsp;&nbsp;&nbsp; 0<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Transform is translation-only.<br>
'<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Axial rotation&nbsp; 1<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Transform is rotation-only.<br>
'<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; General&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
2<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Transform can be translation, rotation, or 
both.<br>
'<br>
'&nbsp;&nbsp; DragOperator::DragMode<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Minimum Move&nbsp;&nbsp;&nbsp; 0<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Move smallest number of geometries.<br>
'<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maximum Move&nbsp;&nbsp;&nbsp; 1<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Move geometries rigidly if possible.<br>
'<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Relaxation&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2<br>
'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Solve geometries using relaxation.</p>
<p class="APICODE">Sub main()</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Dim swApp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.SldWorks<br>
&nbsp;&nbsp;&nbsp; Dim swModel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.ModelDoc2<br>
&nbsp;&nbsp;&nbsp; Dim swAssy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.AssemblyDoc<br>
&nbsp;&nbsp;&nbsp; Dim swDragOp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.DragOperator<br>
&nbsp;&nbsp;&nbsp; Dim swSelMgr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.SelectionMgr<br>
&nbsp;&nbsp;&nbsp; Dim swComp(1)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.Component2<br>
&nbsp;&nbsp;&nbsp; Dim vComp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Variant<br>
&nbsp;&nbsp;&nbsp; Dim swXform&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.MathTransform<br>
&nbsp;&nbsp;&nbsp; Dim swMathUtil&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.MathUtility<br>
&nbsp;&nbsp;&nbsp; Dim swOriginPt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.MathPoint<br>
&nbsp;&nbsp;&nbsp; Dim swX_Axis&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.MathVector<br>
&nbsp;&nbsp;&nbsp; Dim nPts(2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Double<br>
&nbsp;&nbsp;&nbsp; Dim vData&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Variant<br>
&nbsp;&nbsp;&nbsp; Dim i&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Long<br>
&nbsp;&nbsp;&nbsp; Dim bRet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Boolean</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swApp = CreateObject(&quot;SldWorks.<b>Application</b>&quot;)<br>
&nbsp;&nbsp;&nbsp; Set swModel = swApp.<b>ActiveDoc</b><br>
&nbsp;&nbsp;&nbsp; Set swAssy = swModel<br>
&nbsp;&nbsp;&nbsp; Set swDragOp = swAssy.<b>GetDragOperator</b><br>
&nbsp;&nbsp;&nbsp; Set swSelMgr = swModel.<b>SelectionManager</b><br>
&nbsp;&nbsp;&nbsp; Set swComp(0) = swSelMgr.<b>GetSelectedObjectsComponent</b>(1)<br>
&nbsp;&nbsp;&nbsp; Set swComp(1) = swSelMgr.<b>GetSelectedObjectsComponent</b>(2)<br>
&nbsp;&nbsp;&nbsp; Set swMathUtil = swApp.<b>GetMathUtility</b></p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; vComp = swComp</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; nPts(0) = 0#<br>
&nbsp;&nbsp;&nbsp; nPts(1) = 0#<br>
&nbsp;&nbsp;&nbsp; nPts(2) = 0#</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; vData = nPts</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swOriginPt = swMathUtil.<b>CreatePoint</b>(vData)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; nPts(0) = 1#<br>
&nbsp;&nbsp;&nbsp; nPts(1) = 0#<br>
&nbsp;&nbsp;&nbsp; nPts(2) = 0#<br>
&nbsp;&nbsp;&nbsp; vData = nPts</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swX_Axis = swMathUtil.<b>CreateVector</b>(vData)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' This is an incremental rotation,<br>
&nbsp;&nbsp;&nbsp; ' so angle is always the same.<br>
&nbsp;&nbsp;&nbsp; Set swXform = swMathUtil.<b>CreateTransformRotateAxis</b>(swOriginPt, 
swX_Axis, 1# * RadPerDeg)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; bRet = swDragOp.<b>AddComponent</b>(swComp(0), 
False)<br>
&nbsp;&nbsp;&nbsp; Debug.Assert bRet</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; swDragOp.<b>DynamicClearanceEnabled</b> = 
False</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Axial rotation<br>
&nbsp;&nbsp;&nbsp; swDragOp.<b>TransformType</b> = 1</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Solve by relaxation<br>
&nbsp;&nbsp;&nbsp; swDragOp.<b>DragMode</b> = 2</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; bRet = swDragOp.<b>BeginDrag</b><br>
&nbsp;&nbsp;&nbsp; Debug.Assert bRet</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; For i = 0 To 500<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bRet = swDragOp.<b>DragAsUI</b>(swXform)<br>
&nbsp;&nbsp;&nbsp; Next i</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; bRet = swDragOp.<b>EndDrag</b><br>
&nbsp;&nbsp;&nbsp; Debug.Assert bRet</p>
<p class="APICODE">End Sub</p>

</body>

</html>
