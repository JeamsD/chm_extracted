<html>

<head>
<title>Create Trimmed Curve Example (C#)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="C# examples,curves">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Create Trimmed Curve Example (C#)</h1>
<p>This example shows how to create a trimmed curve on a selected face.</p>

<div style="font-family:Monospace; font-size: 10pt; background-color: white;">
	<p class="APICODE"><span style="color:Green">
	//----------------------------------------------------------------------------<br>
	// Preconditions: <br>
	// 1. Open a part and select a face.<br>
	// 2. Open an Immediate window.<br>
	//<br>
	// Postconditions: <br>
	// 1. Creates a trimmed curve.<br>
	// 2. Inspect the Immediate window.<br>
	//----------------------------------------------------------------------------<br>
	</span><span style="color:Blue">using</span><span style="color:Black"> 
	Microsoft.VisualBasic;<br>
	</span><span style="color:Blue">using</span><span style="color:Black"> 
	System;<br>
	</span><span style="color:Blue">using</span><span style="color:Black"> 
	System.Collections;<br>
	</span><span style="color:Blue">using</span><span style="color:Black"> 
	System.Collections.Generic;<br>
	</span><span style="color:Blue">using</span><span style="color:Black"> 
	System.Data;<br>
	</span><span style="color:Blue">using</span><span style="color:Black"> 
	System.Diagnostics;<br>
	</span><span style="color:Blue">using</span><span style="color:Black"> 
	SolidWorks.Interop.sldworks;<br>
	</span><span style="color:Blue">using</span><span style="color:Black"> 
	SolidWorks.Interop.swconst;<br>
	</span><span style="color:Blue">using</span><span style="color:Black"> 
	System.Runtime.InteropServices;<br>
	</span><span style="color:Blue">namespace</span><span style="color:Black"> 
	CreateTrimmedCurve_CSharp.csproj<br>
	{<br>
	&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">partial</span><span style="color:Black">
	</span><span style="color:Blue">class</span><span style="color:Black">
	</span><span style="color:#2b91af">SolidWorksMacro<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;{<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">public</span><span style="color:Black">
	</span><span style="color:Blue">void</span><span style="color:Black"> Main()<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">ModelDoc2</span><span style="color:Black"> 
	swModel = </span><span style="color:Blue">default</span><span style="color:Black">(</span><span style="color:#2b91af">ModelDoc2</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">SelectionMgr</span><span style="color:Black"> 
	swSelMgr = </span><span style="color:Blue">default</span><span style="color:Black">(</span><span style="color:#2b91af">SelectionMgr</span><span style="color:Black">);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>
	<span style="color:#2b91af">SketchManager </span><span style="color:Black">
	swSketchMgr = </span><span style="color:Blue">default</span><span style="color:Black">(</span><span style="color:#2b91af">SketchManager</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Face2</span><span style="color:Black"> 
	swFace = </span><span style="color:Blue">default</span><span style="color:Black">(</span><span style="color:#2b91af">Face2</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Surface</span><span style="color:Black"> 
	swSurf = </span><span style="color:Blue">default</span><span style="color:Black">(</span><span style="color:#2b91af">Surface</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">double</span><span style="color:Black">[] 
	vFaceUV = </span><span style="color:Blue">null</span><span style="color:Black">;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">SurfaceParameterizationData</span><span style="color:Black"> 
	surfParam = </span><span style="color:Blue">default</span><span style="color:Black">(</span><span style="color:#2b91af">SurfaceParameterizationData</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Curve</span><span style="color:Black"> 
	swCurveU = </span><span style="color:Blue">default</span><span style="color:Black">(</span><span style="color:#2b91af">Curve</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">double</span><span style="color:Black">[] 
	vUIsoStartPt = </span><span style="color:Blue">null</span><span style="color:Black">;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">double</span><span style="color:Black">[] 
	vUIsoEndPt = </span><span style="color:Blue">null</span><span style="color:Black">;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">const</span><span style="color:Black">
	</span><span style="color:Blue">double</span><span style="color:Black"> 
	nChordTol = 0.001;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">const</span><span style="color:Black">
	</span><span style="color:Blue">double</span><span style="color:Black"> 
	nLengthTol = 0.001;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">double</span><span style="color:Black"> 
	nStartParam = 0;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">double</span><span style="color:Black"> 
	nEndParam = 0;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">bool</span><span style="color:Black"> 
	bIsClosed = </span><span style="color:Blue">false</span><span style="color:Black">;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">bool</span><span style="color:Black"> 
	bIsPeriodic = </span><span style="color:Blue">false</span><span style="color:Black">;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">double</span><span style="color:Black">[] 
	vStartPt = </span><span style="color:Blue">null</span><span style="color:Black">;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">double</span><span style="color:Black">[] 
	vEndPt = </span><span style="color:Blue">null</span><span style="color:Black">;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">double</span><span style="color:Black">[] 
	vTessPts = </span><span style="color:Blue">null</span><span style="color:Black">;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">SketchSegment</span><span style="color:Black"> 
	swSketchSeg = </span><span style="color:Blue">default</span><span style="color:Black">(</span><span style="color:#2b91af">SketchSegment</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000FF">int</span><span style="color:Black"> 
	i = 0;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">bool</span><span style="color:Black"> 
	bRet = </span><span style="color:Blue">false</span><span style="color:Black">;<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swModel = (</span><span style="color:#2b91af">ModelDoc2</span><span style="color:Black">)swApp.<b>ActiveDoc</b>;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swSelMgr = (</span><span style="color:#2b91af">SelectionMgr</span><span style="color:Black">)swModel.<b>SelectionManager</b>;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swFace = (</span><span style="color:#2b91af">Face2</span><span style="color:Black">)swSelMgr.<b>GetSelectedObject6</b>(1, 
	-1);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swSurf = (</span><span style="color:#2b91af">Surface</span><span style="color:Black">)swFace.<b>GetSurface</b>();<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vFaceUV = (</span><span style="color:Blue">double</span><span style="color:Black">[])swFace.<b>GetUVBounds</b>();<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;surfParam = swSurf.<b>Parameterization2</b>();<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vUIsoStartPt = (</span><span style="color:Blue">double</span><span style="color:Black">[])swSurf.<b>Evaluate</b>((vFaceUV[0] 
	+ vFaceUV[1]) / 2.0, vFaceUV[2], 0, 0);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vUIsoEndPt = (</span><span style="color:Blue">double</span><span style="color:Black">[])swSurf.<b>Evaluate</b>((vFaceUV[0] 
	+ vFaceUV[1]) / 2.0, vFaceUV[3], 0, 0);<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;File 
	= &quot;</span><span style="color:Black"> + swModel.<b>GetPathName</b>());<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;Face:&quot;</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;uRange&nbsp;&nbsp; 
	= [&quot;</span><span style="color:Black"> + vFaceUV[0] + </span>
	<span style="color:#a31515">&quot; , &quot;</span><span style="color:Black"> + 
	vFaceUV[1] + </span><span style="color:#a31515">&quot;]&quot;</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;vRange&nbsp;&nbsp; 
	= [&quot;</span><span style="color:Black"> + vFaceUV[2] + </span>
	<span style="color:#a31515">&quot; , &quot;</span><span style="color:Black"> + 
	vFaceUV[3] + </span><span style="color:#a31515">&quot;]&quot;</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;Surface:&quot;</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;uRange&nbsp;&nbsp; 
	= [&quot;</span><span style="color:Black"> + surfParam.<b>UMin</b> + </span>
	<span style="color:#a31515">&quot; , &quot;</span><span style="color:Black"> + 
	surfParam.<b>UMax</b> + </span><span style="color:#a31515">&quot;]&quot;</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;vRange&nbsp;&nbsp; 
	= [&quot;</span><span style="color:Black"> + surfParam.<b>VMin</b> + </span>
	<span style="color:#a31515">&quot; , &quot;</span><span style="color:Black"> + 
	surfParam.<b>VMax</b> + </span><span style="color:#a31515">&quot;]&quot;</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;U 
	Curve:&quot;</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;Start 
	Pt = (&quot;</span><span style="color:Black"> + vUIsoStartPt[0] * 1000 + </span>
	<span style="color:#a31515">&quot;, &quot;</span><span style="color:Black"> + 
	vUIsoStartPt[1] * 1000 + </span><span style="color:#a31515">&quot;, &quot;</span><span style="color:Black"> 
	+ vUIsoStartPt[2] * 1000 + </span><span style="color:#a31515">&quot;) mm&quot;</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;&nbsp; 
	Pt = (&quot;</span><span style="color:Black"> + vUIsoEndPt[0] * 1000 + </span>
	<span style="color:#a31515">&quot;, &quot;</span><span style="color:Black"> + 
	vUIsoEndPt[1] * 1000 + </span><span style="color:#a31515">&quot;, &quot;</span><span style="color:Black"> 
	+ vUIsoEndPt[2] * 1000 + </span><span style="color:#a31515">&quot;) mm&quot;</span><span style="color:Black">);<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">// Create untrimmed U curve<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">double</span><span style="color:Black"> 
	uvValue;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;uvValue = (vFaceUV[0] + vFaceUV[1]) / 2.0;<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swCurveU = swSurf.<b>MakeIsoCurve2</b>(</span><span style="color:Blue">false</span><span style="color:Black">,
	</span><span style="color:Blue">ref</span><span style="color:Black"> uvValue);<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Green">// Trim U curve to start and 
	end of U range<br>
	</span><span style="color:Black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swCurveU = swCurveU.<b>CreateTrimmedCurve2</b>(vUIsoStartPt[0], 
	vUIsoStartPt[1], vUIsoStartPt[2], vUIsoEndPt[0], vUIsoEndPt[1], 
	vUIsoEndPt[2]);<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;Trimmed 
	U curve:&quot;</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bRet = swCurveU.<b>GetEndParams</b>(</span><span style="color:Blue">out</span><span style="color:Black"> 
	nStartParam, </span><span style="color:Blue">out</span><span style="color:Black"> 
	nEndParam, </span><span style="color:Blue">out</span><span style="color:Black"> 
	bIsClosed, </span><span style="color:Blue">out</span><span style="color:Black"> 
	bIsPeriodic);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;Start 
	parameter is &quot;</span><span style="color:Black"> + nStartParam);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;End 
	parameter is &quot;</span><span style="color:Black"> + nEndParam);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;Is 
	closed? &quot;</span><span style="color:Black"> + bIsClosed);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#2b91af">Debug</span><span style="color:Black">.Print(</span><span style="color:#a31515">&quot;&nbsp;&nbsp;&nbsp;&nbsp;Is 
	periodic? &quot;</span><span style="color:Black"> + bIsPeriodic);<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vStartPt = (</span><span style="color:Blue">double</span><span style="color:Black">[])swCurveU.<b>Evaluate2</b>(nStartParam, 
	0);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vEndPt = (</span><span style="color:Blue">double</span><span style="color:Black">[])swCurveU.<b>Evaluate2</b>(nEndParam, 
	0);<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vTessPts = (</span><span style="color:Blue">double</span><span style="color:Black">[])swCurveU.<b>GetTessPts</b>(nChordTol, 
	nLengthTol, (vStartPt), (vEndPt));<br>
	<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>
	<span style="color: Black">swSketchMgr = (</span><span style="color:#2b91af">SketchManager</span><span style="color:Black">)swModel.<b>SketchManager</b>;<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swSketchMgr.<b>Insert3DSketch</b>(</span><span style="color:Blue">false</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swModel.<b>SetAddToDB</b>(</span><span style="color:Blue">true</span><span style="color:Black">);<br>
	<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">for</span><span style="color:Black"> 
	(i = 0; i &lt;= vTessPts.GetUpperBound(0) - 3; i += 3)<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swSketchSeg = (</span><span style="color:#2b91af">SketchSegment</span><span style="color:Black">)swModel.<b>CreateLine2</b>(vTessPts[i 
	+ 0], vTessPts[i + 1], vTessPts[i + 2], vTessPts[i + 3], vTessPts[i + 4], 
	vTessPts[i + 5]);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swModel.<b>SetAddToDB</b>(</span><span style="color:Blue">false</span><span style="color:Black">);<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swSketchMgr.<b>Insert3DSketch</b>(</span><span style="color:Blue">true</span><span style="color:Black">);<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bRet = swModel.<b>EditRebuild3</b>();<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
	<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:Blue">public</span><span style="color:Black">
	</span><span style="color:#2b91af">SldWorks</span><span style="color:Black"> 
	swApp;<br>
	<br>
	&nbsp;&nbsp;&nbsp;&nbsp;}<br>
	}</span>
</div>

</body>

</html>
