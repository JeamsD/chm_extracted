<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Rebuild All Configurations Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=960>
<meta name=layout-width content=786>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">

<META NAME="MS-HKWD" CONTENT="VBA examples,configurations">
</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Rebuild All Configurations Example (VBA)</h1>

<p>To rebuild all of the configurations in a part, assembly, or drawing 
 document, see: </p>

<ul style="list-style: disc;"
	type=disc>
	
	<li class=kadov-p><p><a href="Forcibly_Rebuild_All_Configurations_Example_VB.htm">Forcibly 
 Rebuild All Configurations Example (VBA)</a></p></li>
	
	<li class=kadov-p><p>
	<a href="Get_Active_Document_Dependents_Example_VB.htm">Get 
 Active Document Dependents Example (VBA)</a></p></li>
</ul>

<p>Also, because each drawing view on each sheet can contain a different 
 model and each in a different configuration, first you must find the parts 
 or assemblies associated with the drawing. <!--kadov_tag{{</spaces>}}-->You 
 can then rebuild them in the usual manner. Next, you must activate each 
 drawing sheet and rebuild that sheet.<!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->The 
 following example shows how to activate each sheet in a drawing document.</p>

<pre>'---------------------------------------------
' Preconditions:
' 1. Open a drawing document that has multiple
'    sheets.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Gets the names of each drawing sheet and
'    activates that sheet.
' 2. Examine the Immediate window.
'----------------------------------------------
Option Explicit</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swDraw As SldWorks.DrawingDoc
    Dim swSheet As SldWorks.Sheet
    Dim vSheetNameArr As Variant
    Dim vSheetName As Variant
    Dim bRet As Boolean
    Dim i As Long    
</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swDraw = swModel</pre>
<pre>    Set swSheet = swDraw.<b>GetCurrentSheet</b>
    Debug.Print &quot;FileName = &quot; &amp; swModel.<b>GetPathName</b>
    Debug.Print &quot;  Current sheet = &quot; &amp; swSheet.<b>GetName</b>
    Debug.Print &quot;&quot;</pre>
<pre>    vSheetNameArr = swDraw.<b>GetSheetNames</b>
    For Each vSheetName In vSheetNameArr
        Debug.Print &quot;  SheetName[&quot; &amp; i &amp; &quot;] = &quot; &amp; vSheetName
        bRet = swDraw.<b>ActivateSheet</b>(vSheetName): Debug.Assert bRet
    Next vSheetName    </pre>
<pre>End Sub </pre>

</body>

</html>
