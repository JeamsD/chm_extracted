<html>

<head>
<title>Get Chamfer Display Dimension Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples,display dimensions">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Get Chamfer Display Dimension Example (VBA)</h1>
<p>This example shows how to get chamfer display dimension properties. 
This example also shows how to set and get lower display dimension text.</p>

<pre>'-----------------------------------------------------------------------------
' Preconditions:
' 1. Open <i>public_documents</i><b>\samples\tutorial\api\plate_tolstatus.sldprt</b>.
' 2. Create a drawing from the part:
'    a. <b>File &gt; Make Drawing from Part</b>.
'    b. Drag and drop the isometric view onto the sheet.
' 3. Create a chamfer display dimension.
'    a. Select <b>Tools &gt; Dimensions &gt; Chamfer</b>.
'    b. Select a chamfer edge.
'    c. Select a leading edge.
'    d. Click outside the part to place the display dimension.
'    e. Modify display dimension text in the PropertyManager:
'           1. In Dimension Text, click before <b>&lt;DIM&gt;</b>.
'           2. Select the diameter symbol.
'           3. Click after <b>&lt;DIM&gt;</b>.
'           4. Select the +/- symbol.
'           5. Type <b>0.5</b>.
'           6. On the Other tab, select <b>Override Units</b>.
'           7. Click the green check mark to accept the
'              display dimension.
' 4. Open an Immediate Window.
' 5. Run the macro.
'
' Postconditions: Inspect the Immediate Window and
' the display dimension in the graphics area.
'
' <b>NOTE</b>: Because the part document is used elsewhere,
' do not save any changes when closing it.
'------------------------------------</pre>
<p class="APICODE">Option Explicit</p>
<p class="APICODE">Dim swApp As SldWorks.SldWorks<br>
Dim swModel As SldWorks.ModelDoc2<br>
Dim swSelMgr As SldWorks.SelectionMgr<br>
Dim swDispDim As SldWorks.DisplayDimension<br>
Dim bRet As Boolean</p>
<p class="APICODE"><br>
Sub main()</p>
<blockquote>
	<p class="APICODE">Set swApp = Application.SldWorks<br>Set swModel = swApp.<b>ActiveDoc</b></p>
	<p class="APICODE">Set swSelMgr = swModel.<b>SelectionManager</b></p>
	<p class="APICODE">bRet = swModel.Extension.<b>SelectByID2</b>(&quot;RD1@Drawing View1&quot;, 
&quot;DIMENSION&quot;, 0.4935677398765, 0.3280800260301, 0, False, 0, Nothing, 0)<br>Set swDispDim = swSelMgr.<b>GetSelectedObject6</b>(1, 0)<br>swModel.<b>ClearSelection2</b> True</p>
	<p class="APICODE">Debug.Print &quot;Dimension type as defined in swDimensionType_e: 
&quot; &amp; swDispDim.<b>Type2</b> '10=swChamferDimension<br>Debug.Print &quot;&quot;<br>Debug.Print &quot;Uses document units? &quot; &amp; swDispDim.<b>GetUseDocUnits</b> 'false if uses 
local override units</p>
	<p class="APICODE">If swDispDim.<b>GetUseDocUnits</b> = False Then<br>&nbsp;&nbsp;&nbsp; Dim LenUnit As Long<br>&nbsp;&nbsp;&nbsp; Dim AngUnit As Long<br>&nbsp;&nbsp;&nbsp; bRet = swDispDim.<b>GetChamferUnits</b>(LenUnit, AngUnit)<br>&nbsp;&nbsp;&nbsp; Debug.Print &quot;Uses local length unit as defined in 
swLengthUnits_e: &quot; &amp; LenUnit&nbsp; '0=swMM<br>&nbsp;&nbsp;&nbsp; Debug.Print &quot;Uses local angle unit as defined in 
swAngleUnits_e: &quot; &amp; AngUnit&nbsp;&nbsp; '0=swDegrees, 3=swRadians<br>End If<br>Debug.Print &quot;&quot;</p>
	<p class="APICODE">Dim indx As Long<br>indx = swDispDim.<b>ChamferPrecision</b>(0)<br>Debug.Print &quot;Precision of chamfer distance: &quot; &amp; indx &amp; &quot; decimal places&quot;<br>indx = swDispDim.<b>ChamferPrecision</b>(1)<br>Debug.Print &quot;Precision of chamfer angle: &quot; &amp; indx &amp; &quot; decimal places&quot;</p>
	<p class="APICODE">Dim tokenformats As Variant<br>Dim tokenvalues As Variant<br>Dim tokenformat As String<br>Dim n As Long</p>
	<p class="APICODE">Debug.Print &quot;&quot;<br>Debug.Print &quot;Text format items in &quot; &amp; swDispDim.<b>GetNameForSelection</b> &amp; &quot;:&quot;<br>Debug.Print &quot;&quot;<br>Dim count As Long</p>
	<p class="APICODE">count = 
swDispDim.<b>GetTextFormatItems</b>(swDimensionTextParts_e.swDimensionTextCalloutAbove, 
tokenformats, tokenvalues)<br>Debug.Print &quot;Number of callout above items: &quot; &amp; count</p>
	<p class="APICODE">If Not count = 0 Then<br>&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; tokenformats: &quot;<br>&nbsp;&nbsp;&nbsp; For n = LBound(tokenformats) To UBound(tokenformats)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; &quot; &amp; 
tokenformats(n)</p>
	<p class="APICODE">&nbsp;&nbsp;&nbsp; Next n<br>&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; tokenvalues: &quot;<br>&nbsp;&nbsp;&nbsp; For n = LBound(tokenvalues) To UBound(tokenvalues)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; &quot; &amp; 
tokenvalues(n)</p>
	<p class="APICODE">&nbsp;&nbsp;&nbsp; Next n<br>End If<br>Debug.Print &quot;&quot;<br>count = 
swDispDim.<b>GetTextFormatItems</b>(swDimensionTextParts_e.swDimensionTextPrefix, 
tokenformats, tokenvalues)<br>Debug.Print &quot;Number of prefix items: &quot; &amp; count<br>If Not count = 0 Then<br>&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; tokenformats: &quot;<br>&nbsp;&nbsp;&nbsp; For n = LBound(tokenformats) To UBound(tokenformats)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; &quot; &amp; 
tokenformats(n)</p>
	<p class="APICODE">&nbsp;&nbsp;&nbsp; Next n<br>&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; tokenvalues: &quot;<br>&nbsp;&nbsp;&nbsp; For n = LBound(tokenvalues) To UBound(tokenvalues)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; &quot; &amp; tokenvalues(n)</p>
	<p class="APICODE">&nbsp;&nbsp;&nbsp; Next n<br>End If<br>Debug.Print &quot;&quot;<br>count = 
swDispDim.<b>GetTextFormatItems</b>(swDimensionTextParts_e.swDimensionTextSuffix, 
tokenformats, tokenvalues)<br>Debug.Print &quot;Number of suffix items: &quot; &amp; count</p>
	<p class="APICODE">If Not count = 0 Then<br>&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; tokenformats: &quot;<br>&nbsp;&nbsp;&nbsp; For n = LBound(tokenformats) To UBound(tokenformats)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; &quot; &amp; 
tokenformats(n)</p>
	<p class="APICODE">&nbsp;&nbsp;&nbsp; Next n<br>&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; tokenvalues: &quot;<br>&nbsp;&nbsp;&nbsp; For n = LBound(tokenvalues) To UBound(tokenvalues)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; &quot; &amp; tokenvalues(n)</p>
	<p class="APICODE">&nbsp;&nbsp;&nbsp; Next n<br>End If<br>Debug.Print &quot;&quot;<br>count = 
swDispDim.<b>GetTextFormatItems</b>(swDimensionTextParts_e.swDimensionTextCalloutBelow, 
tokenformats, tokenvalues)<br>Debug.Print &quot;Number of callout below items: &quot; &amp; count</p>
	<p class="APICODE">If Not count = 0 Then<br>&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; tokenformats: &quot;<br>&nbsp;&nbsp;&nbsp; For n = LBound(tokenformats) To UBound(tokenformats)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; &quot; &amp; 
tokenformats(n)</p>
	<p class="APICODE">&nbsp;&nbsp;&nbsp; Next n<br>&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; tokenvalues: &quot;<br>&nbsp;&nbsp;&nbsp; For n = LBound(tokenvalues) To UBound(tokenvalues)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot; &amp; tokenvalues(n)</p>
	<p class="APICODE">&nbsp;&nbsp;&nbsp; Next n<br>End If</p>
	<p class="APICODE">' Create lower display dimension text and enclose<br>
	' in parentheses<br>
	swDispDim.<b>SetLowerText</b> (&quot;Example of lower text&quot;)<br>
	swDispDim.<b>ShowLowerParenthesis</b> = True<br>
	<br>
	Debug.Print (&quot;&quot;)<br>
	Debug.Print (&quot;Lower Dimension Text: &quot; &amp; swDispDim.<b>GetLowerText</b>)<br>
	Debug.Print (&quot; Show lower parenthesis: &quot; &amp; swDispDim.<b>ShowLowerParenthesis</b>)<br>
	Debug.Print (&quot; Show lower inspection: &quot; &amp; swDispDim.<b>LowerInspection</b>)<br>
	Debug.Print (&quot; Split dual dimensions: &quot; &amp; swDispDim.<b>Split</b>)</p>
</blockquote>
<p class="APICODE">End Sub</p>

</body>

</html>
