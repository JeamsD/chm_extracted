<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html LANG=EN-US>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Select and Rename Object Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=date content="03 18, 2002 12:04:48 PM">
<meta name=MS-HKWD content="VBA examples,objects">
<meta name=MS-HKWD content="Rename,objects">
<meta name=MS-HKWD content="Select,objects">
<meta name=MS-HKWD content=Rename>
<meta name=MS-HKWD content=Select>
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1890>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body LANG=EN-US>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Select and Rename Object Example (VBA)</h1>

<p class=apiDescriptionText>The example shows how to verify the name of 
 the edge and then change it, if it doesn't already have a name. </p>
<p class=apiDescriptionText><b>NOTE:</b> You could also select the edge programmatically 
 using IFace2::GetEdges or ICoEdge::GetEdge. </p>

<pre>'------------------------------------------------------------
' Precondtions:
' 1. Open a part.
' 2. Select an edge on the part.
'
' Postconditions:
' 1. Verifies that the user made a selection.
' 2. Gets the selected object and gets whether the selected
'    object is an edge.
' 3. If an edge, renames the edge if the edge doesn't already
'    have a name and the name is unique to the part.
' 4. Click <b>OK</b> to close the message box.
'------------------------------------------------------------
Option Explicit</pre>
<pre>Sub amin()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swPart As SldWorks.PartDoc
    Dim swSelMgr As SldWorks.SelectionMgr
    Dim swEntity As SldWorks.Entity
    Dim swSelObj As Object
    Dim edgeName As String
    Dim messageString As String
    Dim ret As Boolean</pre>
<pre>    Set swApp = CreateObject(&quot;SldWorks.Application&quot;)
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swPart = swModel
    Set swSelMgr = swModel.<b>SelectionManager</b>
    If (swSelMgr.<b>GetSelectedObjectCount</b> &lt;&gt; 0) Then
        Set swSelObj = swSelMgr.<b>GetSelectedObject6</b>(1, -1)
        Set swEntity = swSelObj
        If (swSelMgr.<b>GetSelectedObjectType</b>(1) = swSelEDGES) Then
            edgeName = swPart.<b>GetEntityName</b>(swEntity)
            If (edgeName = &quot;&quot;) Then
                ret = swPart.<b>SetEntityName</b>(swEntity, &quot;NewEdgeName&quot;)
                If ret Then
                    swApp.<b>SendMsgToUser</b> (&quot;Successfully set name of edge&quot;)
                Else
                    swApp.<b>SendMsgToUser</b> (&quot;Error setting name of edge&quot;)
                End If
            Else
                messageString = &quot;Edge already has name of &quot; + edgeName
                swApp.<b>SendMsgToUser</b> (messageString)
            End If
        Else
            swApp.<b>SendMsgToUser</b> (&quot;Select an edge and run the macro again&quot;)
        End If
    End If</pre>
<pre>End Sub</pre>
<pre> </pre>
<pre> </pre>

</body>

</html>
