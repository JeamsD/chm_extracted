<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Object's Persistent Reference ID Example (C++)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">

<meta name=MS-HKWD content="C++ examples">
<meta name=MS-HKWD content="C++ examples, ISafeArrayUtility">
<meta name=MS-HKWD content="C++ examples, IDispatch">
<meta name=MS-HKWD content="C++ examples, QueryInterface">
<meta name=MS-HKWD content="C++ examples, persistent reference IDs">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=4185>
<meta name=layout-width content=804>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1><a name=Top></a>Get Object's Persistent Reference ID Example (C++)</h1>

<p>This example shows how to:</p>
<ul>
	<li><font face="Verdana" style="font-size: 8pt">get the selected object's persistent reference 
 ID using IModelDocExtension::GetPersistReference3. </font></li>
	<li><font face="Verdana" style="font-size: 8pt">use the ISafeArrayUtility to parse the 
Variant SafeArray returned by IModelDocExtension::GetPersistReference3.</font></li>
	<li><font face="Verdana" style="font-size: 8pt">get the size of the persistent 
	reference ID for the selected object.</font></li>
</ul>
<pre style="font-family: Courier New; font-size: 13; color: black; background: white"><span style="color:green;">//-----------------------------------------</span>
<span style="color:green;">//&nbsp;Preconditions:&nbsp;</span>
<span style="color:green;">//&nbsp;1.&nbsp;Start&nbsp;Microsoft&nbsp;Visual&nbsp;Studio&nbsp;2010.</span>
<span style="color:green;">//&nbsp;&nbsp;&nbsp;&nbsp;a.&nbsp;Click&nbsp;<b>File&nbsp;&gt;&nbsp;New&nbsp;&gt;&nbsp;Project&nbsp;&gt;&nbsp;Visual&nbsp;C++&nbsp;&gt;&nbsp;Win32&nbsp;Console&nbsp;Application</b>.</span>
<span style="color:green;">//&nbsp;&nbsp;&nbsp;&nbsp;b.&nbsp;Type&nbsp;the&nbsp;name&nbsp;of&nbsp;your&nbsp;project&nbsp;in&nbsp;<b>Name</b>.</span>
<span style="color:green;">//&nbsp;&nbsp;&nbsp;&nbsp;c.&nbsp;Click&nbsp;<b>OK</b>.</span>
<span style="color:green;">//&nbsp;&nbsp;&nbsp;&nbsp;d.&nbsp;Click&nbsp;<b>Next</b>.</span>
<span style="color:green;">//&nbsp;&nbsp;&nbsp;&nbsp;e.&nbsp;Select&nbsp;<b>ATL</b>&nbsp;and&nbsp;click&nbsp;<b>Finish</b>.
//    f. Click <b>OK</b>.</span>
<span style="color:green;">//&nbsp;&nbsp;&nbsp;&nbsp;g.&nbsp;Click&nbsp;<b>Project&nbsp;&gt;&nbsp;Properties&nbsp;&gt;&nbsp;Configuration&nbsp;Properties&nbsp;&gt;&nbsp;</b></span><b>
</b><span style="color:green;">//<b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;C/C++&nbsp;</b>and&nbsp;type&nbsp;the path&nbsp;to&nbsp;<b>sldworks.tlb</b>&nbsp;and&nbsp;<b>swconst.tlb</b>,&nbsp;</span>
<span style="color:green;">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typically&nbsp;<b>C:\Program&nbsp;Files\SOLIDWORKS&nbsp;Corp\SOLIDWORKS</b>,
//       in&nbsp;<b>Additional&nbsp;Include&nbsp;Directories</b>.</span>
<span style="color:green;">//&nbsp;&nbsp;&nbsp;&nbsp;h.&nbsp;Click&nbsp;<b>OK</b>.
//&nbsp;2.&nbsp;Replace&nbsp;the&nbsp;code&nbsp;in&nbsp;the&nbsp;code&nbsp;window&nbsp;with&nbsp;<a href="#ThisCode">this&nbsp;code</a>.</span>
<span style="color:green;">//&nbsp;3.&nbsp;Start&nbsp;up&nbsp;SOLIDWORKS&nbsp;and&nbsp;open&nbsp;a&nbsp;model&nbsp;document.&nbsp;</span>
<span style="color:green;">//&nbsp;4.&nbsp;Select&nbsp;a&nbsp;vertex,&nbsp;line,&nbsp;face,&nbsp;or&nbsp;some other&nbsp;selectable&nbsp;
//    entity.</span>
<span style="color:green;">//&nbsp;5.&nbsp;Click&nbsp;<b>Debug&nbsp;&gt;&nbsp;Start&nbsp;Debugging</b>.&nbsp;</span>
<span style="color:green;">//&nbsp;6.&nbsp;Click&nbsp;<b>Yes</b>.</span> 
<span style="color:green;">//</span>
<span style="color:green;">//&nbsp;Postconditions:&nbsp;</span>
<span style="color:green;">//&nbsp;1.&nbsp;Gets&nbsp;each&nbsp;byte&nbsp;value in&nbsp;a&nbsp;Variant&nbsp;SafeArray&nbsp;of&nbsp;byte&nbsp;values
//    of the persistent reference ID.</span>
<span style="color:green;">//&nbsp;2.&nbsp;Displays&nbsp;a&nbsp;message&nbsp;box&nbsp;showing&nbsp;the&nbsp;size&nbsp;of&nbsp;of&nbsp;the&nbsp;persistent</span>
<span style="color:green;">//&nbsp;&nbsp;&nbsp;&nbsp;reference&nbsp;ID&nbsp;assigned&nbsp;to&nbsp;the&nbsp;selected&nbsp;object.</span>
<span style="color:green;">//&nbsp;3.&nbsp;Click&nbsp;<b>OK</b>&nbsp;to&nbsp;close&nbsp;the&nbsp;message&nbsp;box.</span>
<span style="color:green;">//-----------------------------------------</span>
<span style="color: #008000"><a name="ThisCode"></a>//This code</span>
 
<span style="color:blue;">#include</span>&nbsp;<span style="color:#a31515;">&quot;stdafx.h&quot;</span>
<span style="color:blue;">#include</span>&nbsp;<span style="color:#a31515;">&lt;string&gt;</span>
 
<span style="color:blue;">#import</span>&nbsp;<span style="color:#a31515;">&quot;sldworks.tlb&quot;</span>&nbsp;raw_interfaces_only,&nbsp;raw_native_types,&nbsp;no_namespace,&nbsp;named_guids&nbsp;<span style="color:green;">//SOLIDWORKS&nbsp;type&nbsp;library</span>
<span style="color:blue;">#import</span>&nbsp;<span style="color:#a31515;">&quot;swconst.tlb&quot;</span>&nbsp;no_namespace,&nbsp;raw_native_types,&nbsp;no_namespace,&nbsp;named_guids&nbsp;<span style="color:green;">//SOLIDWORKS&nbsp;constants&nbsp;type&nbsp;library</span>
 
<span style="color:blue;">template</span>&nbsp;&lt;<span style="color:blue;">typename</span>&nbsp;T&gt;
std::string&nbsp;number_to_string(T&nbsp;number)
{
		<span style="color:blue;">return</span>&nbsp;<span style="color:blue;">dynamic_cast</span>&lt;std::stsringstream&nbsp;*&gt;&nbsp;(&amp;(std::stringstream()&nbsp;&lt;&lt;&nbsp;number))-&gt;str();
}
 
<span style="color:blue;">int</span>&nbsp;_tmain(<span style="color:blue;">int</span>&nbsp;argc,&nbsp;TCHAR*&nbsp;argv[])
{
 
		<span style="color:green;">//Initialize&nbsp;COM</span>
		<span style="color:green;">//Do&nbsp;this&nbsp;before&nbsp;using&nbsp;ATL&nbsp;smart&nbsp;pointers&nbsp;so&nbsp;that</span>
		<span style="color:green;">//COM&nbsp;is&nbsp;available</span>
		CoInitialize(NULL);
 
		<span style="color:green;">//Use&nbsp;a&nbsp;block&nbsp;so&nbsp;that&nbsp;the&nbsp;smart&nbsp;pointers&nbsp;are&nbsp;destructed&nbsp;when</span>
		<span style="color:green;">//scope&nbsp;of&nbsp;this&nbsp;block&nbsp;is&nbsp;exited</span>
		{
			<span style="color:green;">//Use&nbsp;ATL&nbsp;smart&nbsp;pointers</span>
			CComPtr&lt;ISldWorks&gt;&nbsp;swApp;
			<span style="color:blue;">if</span>(swApp.CoCreateInstance(L<span style="color:#a31515;">&quot;SldWorks.Application&quot;</span>,&nbsp;NULL,&nbsp;CLSCTX_LOCAL_SERVER)&nbsp;!=&nbsp;S_OK){
					<span style="color:blue;">return</span>(0);
			}&nbsp;
 
			CComPtr&lt;IModelDoc2&gt;&nbsp;swDoc;
			swApp-&gt;<b>get_IActiveDoc2</b>(&amp;swDoc);&nbsp;
 
			CComPtr&lt;IModelDocExtension&gt;&nbsp;swDocExt;
			swDoc-&gt;<b>get_Extension</b>(&amp;swDocExt);&nbsp;
 
			CComPtr&lt;ISelectionMgr&gt;&nbsp;swSelMgr;
			swDoc-&gt;<b>get_ISelectionManager</b>(&amp;swSelMgr);&nbsp;
 
			CComPtr&lt;IDispatch&gt;&nbsp;disp;
			swSelMgr-&gt;<b>GetSelectedObject6</b>(1,&nbsp;-1,&nbsp;&amp;disp);&nbsp;
 
			<span style="color:green;">//Get&nbsp;the&nbsp;persistent&nbsp;reference&nbsp;ID&nbsp;for&nbsp;the&nbsp;selected&nbsp;object</span>
			_variant_t&nbsp;varPersist;
			::VariantInit(&amp;varPersist);
			swDocExt-&gt;<b>GetPersistReference3</b>(disp,&nbsp;&amp;varPersist);&nbsp;
 
			CComPtr&lt;IDispatch&gt;&nbsp;pDispatchSafeArray&nbsp;=&nbsp;NULL;
			CComPtr&lt;ISafeArrayUtility&gt;&nbsp;swSafeArray&nbsp;=&nbsp;NULL;
			HRESULT&nbsp;hres;
			hres&nbsp;=&nbsp;swApp-&gt;<b>GetSafeArrayUtility</b>(&amp;pDispatchSafeArray);
			hres&nbsp;=&nbsp;pDispatchSafeArray.QueryInterface&lt;ISafeArrayUtility&gt;(&amp;swSafeArray);
 
			<span style="color:blue;">long</span>&nbsp;sizePersistIDs;
			swDocExt-&gt;<b>GetPersistReferenceCount3</b>(disp,&nbsp;&amp;sizePersistIDs);
 
			<span style="color:blue;">for</span>(<span style="color:blue;">int</span>&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;sizePersistIDs;&nbsp;i++){
				byte&nbsp;byteValue;
				<span style="color:green;">//Get&nbsp;each&nbsp;byte&nbsp;value in&nbsp;the&nbsp;Variant&nbsp;SafeArray&nbsp;of&nbsp;byte&nbsp;values</span>
				swSafeArray-&gt;<b>GetByte</b>(varPersist,&nbsp;i,&nbsp;&amp;byteValue);
				<span style="color:green;">//TODO:&nbsp;Do&nbsp;something&nbsp;with&nbsp;each&nbsp;persistent&nbsp;reference&nbsp;ID</span>
			}
 
			_bstr_t&nbsp;s;
			s&nbsp;=&nbsp;(<span style="color:blue;">long</span>)sizePersistIDs;
			CComBSTR&nbsp;msg;
			msg&nbsp;=&nbsp;(OLESTR(<span style="color:#a31515;">&quot;Size&nbsp;of&nbsp;persistent&nbsp;reference&nbsp;ID:&nbsp;&quot;</span>));
			msg.AppendBSTR(s);
			<span style="color:blue;">long</span>&nbsp;res;
			<span style="color:green;">//Pop&nbsp;up&nbsp;a&nbsp;message&nbsp;box&nbsp;with&nbsp;the&nbsp;size&nbsp;of&nbsp;persistent</span>
			<span style="color:green;">//reference&nbsp;ID&nbsp;for&nbsp;the&nbsp;selected&nbsp;object</span>
			swApp-&gt;<b>SendMsgToUser2</b>(msg,&nbsp;0,&nbsp;0,&nbsp;&amp;res);
 
		}
	
		<span style="color:green;">//ATL&nbsp;smart&nbsp;pointers&nbsp;are&nbsp;destructed&nbsp;so&nbsp;that&nbsp;all&nbsp;COM&nbsp;objects</span>
		<span style="color:green;">//held&nbsp;on&nbsp;to&nbsp;are&nbsp;released</span>
		<span style="color:green;">//Shut&nbsp;down&nbsp;COM&nbsp;because&nbsp;you&nbsp;no&nbsp;longer&nbsp;need&nbsp;it</span>
		CoUninitialize();
 
		<span style="color:blue;">return</span>(0);
 
}</pre>

</body>

</html>
