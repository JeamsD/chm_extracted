<html>

<head>
<title>Remove Edge from Edge Flange Feature Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples,sheet metal">
<meta name=MS-HKWD content="VBA examples,edge flanges">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Remove Edge from Edge Flange Feature Example (VBA)</h1>
<p>This example shows how to remove an edge from an edge flange feature in a sheet 
metal part.</p>

<pre>'----------------------------------------------------------------------------
' Preconditions: 
' 1. Open <i>public_documents</i><b>\samples\tutorial\api\SM1-remove-edges.sldprt.
</b>' 2. Open the Immediate window.
'
' Postconditions: 
' 1. Removes an edge from <b>Edge-Flange1</b>.
' 2. Examine the Immediate window.
'
' NOTE: Because the model is used elsewhere, do not save changes.
' ---------------------------------------------------------------------------
Option Explicit</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp               As SldWorks.SldWorks
    Dim swDocument          As SldWorks.PartDoc
    Dim swSelectionManager  As SldWorks.SelectionMgr
    Dim swEdgeFlangeData    As SldWorks.EdgeFlangeFeatureData
    Dim swFeature           As SldWorks.Feature
    Dim lNumEdges           As Long
    Dim aEdgesToRemove()    As SldWorks.Edge
    Dim lIdx                As Long
    Dim bStatus             As Boolean
    Dim lNumEdgesToRemove   As Long
    Dim vEdgesToRemove      As Variant
    Dim vEdges              As Variant
    Dim nStatus             As SwConst.swEdgeFlangeError_e</pre>
<pre>    Set swApp = Application.SldWorks
    Set swDocument = swApp.<b>ActiveDoc</b>
    Set swSelectionManager = swDocument.<b>SelectionManager</b></pre>
<pre>    bStatus = swDocument.Extension.<b>SelectByID2</b>(&quot;Edge-Flange1&quot;, &quot;BODYFEATURE&quot;, 0, 0, 0, False, 0, Nothing, 0)
    Set swFeature = swSelectionManager.<b>GetSelectedObject6</b>(1, 0)</pre>
<pre>    swDocument.<b>ClearSelection2</b> True</pre>
<pre>    Set swEdgeFlangeData = swFeature.<b>GetDefinition
</b>    swEdgeFlangeData.<b>AccessSelections</b> swDocument, Nothing
    Debug.Print &quot;Number of edges: &quot; &amp; swEdgeFlangeData.<b>GetEdgeCount</b>   
    vEdges = swEdgeFlangeData.<b>Edges</b>    
    lNumEdges = UBound(vEdges) - LBound(vEdges) + 1    </pre>
<pre>    '
    ' Select number of edges to remove
    '
    Select Case (1)    
        Case 1
            ' Remove one edge
            lNumEdgesToRemove = 1           </pre>
<pre>        Case 2
            ' Remove all edges
            lNumEdgesToRemove = lNumEdges            </pre>
<pre>        Case 3
            ' Remove no edges
            lNumEdgesToRemove = 0        </pre>
<pre>    End Select
    </pre>
<pre>    vEdgesToRemove = Empty    </pre>
<pre>    If (lNumEdgesToRemove &gt;= 1) Then
        ReDim aEdgesToRemove(lNumEdgesToRemove - 1)
        For lIdx = 0 To (lNumEdgesToRemove - 1)
            Set aEdgesToRemove(lIdx) = vEdges(lIdx)
        Next lIdx
        vEdgesToRemove = aEdgesToRemove
    End If    </pre>
<pre>    nStatus = swEdgeFlangeData.<b>RemoveEdges</b>(vEdgesToRemove)
    Debug.Print &quot;Edge removal error code = &quot; &amp; swEdgeFlangeError2String(nStatus)
    </pre>
<pre>    bStatus = swFeature.<b>ModifyDefinition</b>(swEdgeFlangeData, swDocument, Nothing) 
    Debug.Print &quot;Status of modify definition = &quot; &amp; bStatus    </pre>
<pre>    swEdgeFlangeData.<b>AccessSelections</b> swDocument, Nothing    </pre>
<pre>    vEdges = Empty    
    vEdges = swEdgeFlangeData.<b>Edges</b>
    </pre>
<pre>    If (Not IsEmpty(vEdges)) Then
        lNumEdges = UBound(vEdges) - LBound(vEdges) + 1
        Debug.Print &quot;Number of edges in edge flange = &quot; &amp; lNumEdges
    Else
        Debug.Print &quot;Number of edges in edge flange = 0&quot;
    End If  </pre>
<pre>    swEdgeFlangeData.<b>ReleaseSelectionAccess</b>
    </pre>
<pre>End Sub
</pre>
<pre>Private Function swEdgeFlangeError2String(ByVal nStatus As SwConst.swEdgeFlangeError_e) As String</pre>
<pre>    Select Case (nStatus)
        Case 0
            swEdgeFlangeError2String = &quot;no error&quot;
        Case swEdgeFlangeError_e.swEdgeFlangeError_EdgeAlreadyExists
            swEdgeFlangeError2String = &quot;edge already exists&quot;
        Case swEdgeFlangeError_e.swEdgeFlangeError_EdgeNotSpecified
            swEdgeFlangeError2String = &quot;edge not specified&quot;
        Case swEdgeFlangeError_e.swEdgeFlangeError_NumberOfEdgesAndSketchesNotEqual
            swEdgeFlangeError2String = &quot;number mismatch&quot;
        Case swEdgeFlangeError_e.swEdgeFlangeError_SketchNotSpecified
            swEdgeFlangeError2String = &quot;sketch not specified&quot;
        Case Else
            swEdgeFlangeError2String = &quot;unknown error&quot;
    End Select
    </pre>
<pre>End Function</pre>

</body>

</html>
