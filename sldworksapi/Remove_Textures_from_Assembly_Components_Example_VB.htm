<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Remove Textures from Assembly Components Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,textures">
<meta name=MS-HKWD content="VBA examples,components">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1705>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Remove Textures from Assembly Components Example (VBA)</h1>

<p>This example shows how to remove all textures from all components in 
 an assembly.</p>

<pre>'-------------------------------------------------
' Preconditions:
' 1. Open an assembly with one or more components
' &nbsp;&nbsp;&nbsp;with textures applied to them at the component (part)
'    level.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Removes all textures applied to all components.
' 2. Examine the Immediate window.
' 3. Click the graphics area and examine the assembly.
'--------------------------------------------------
Option Explicit</pre>
<pre>Dim swApp As SldWorks.SldWorks
Dim Part As SldWorks.ModelDoc2
Dim boolstatus As Boolean</pre>
<pre>Function RemoveTexture(swDoc As SldWorks.ModelDoc2, configName As String) As Boolean</pre>
<pre>    Dim swDocExt As SldWorks.ModelDocExtension
    Dim swTexture As SldWorks.Texture</pre>
<pre>    Set swDocExt = swDoc.<b>Extension</b>
    Set swTexture = swDocExt.<b>GetTexture</b>(configName)
    If Not swTexture Is Nothing Then
        Debug.Print &quot;   Texture removed: &quot; &amp; swTexture.<b>MaterialName</b>
        RemoveTexture = swDocExt.<b>RemoveTexture2</b>(configName)
        swDoc.<b>SetSaveFlag</b>
    End If</pre>
<pre>End Function</pre>
<pre>Function TraverseComponents(parentComp As SldWorks.Component2)</pre>
<pre>    Dim vChildComponents As Variant
    Dim vObj As Variant
    Dim childComp As SldWorks.Component2
    Dim childDoc As SldWorks.ModelDoc2
    Dim childConfigName As String</pre>
<pre>    vChildComponents = parentComp.<b>GetChildren</b>
    For Each vObj In vChildComponents
        Set childComp = vObj
        Set childDoc = childComp.<b>GetModelDoc</b>
        childConfigName = childComp.<b>ReferencedConfiguration</b>
        Debug.Print &quot;Component name: &quot; &amp; childComp.<b>Name2</b>
        Debug.Print &quot;  Configuration name: &quot; &amp; childConfigName
        boolstatus = RemoveTexture(childDoc, childConfigName)
        Call TraverseComponents(childComp)
    Next vObj</pre>
<pre>End Function</pre>
<pre>Sub main()</pre>
<pre>    Set swApp = Application.SldWorks
    Set Part = swApp.ActiveDoc
    Dim rootDoc As SldWorks.ModelDoc2
    Dim rootConfig As SldWorks.Configuration
    Dim rootComp As SldWorks.Component2
    Dim configMgr As SldWorks.ConfigurationManager    </pre>
<pre>    Set rootDoc = swApp.<b>ActiveDoc</b>
    Set configMgr = Part.<b>ConfigurationManager</b>
    Set rootConfig = configMgr.<b>ActiveConfiguration</b>
    Set rootComp = rootConfig.<b>GetRootComponent3</b>(True)    </pre>
<pre>    Call TraverseComponents(rootComp)</pre>
<pre>End Sub</pre>

</body>

</html>
