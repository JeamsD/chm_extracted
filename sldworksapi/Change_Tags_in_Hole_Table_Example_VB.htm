<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Change Tags in Hole Table Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,hole tables">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1039>
<meta name=layout-width content=931>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Change Tags in Hole Table Example (VBA)</h1>

<p>This example shows how to change the tags in a hole table.</p>

<pre>'-----------------------------------------------------
' Preconditions:
' 1. Open a drawing document that contains
'    a hole table named <b>Hole Table1</b> that has
'    has four columns (TAG, X LOC, Y LOC, and SIZE)
'    and at least five rows.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Disables updating hole table tags.
' 2. Changes tag in column 1, row 2 to Test1.
' 3. Changes tag in column 1, row 5 to Test2.
' 4. Enables updating of hole table and model view
'    and shows new tags.
' 5. Examine the Immediate window and hole table.
'---------------------------------------------------
Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swSelMgr As SldWorks.SelectionMgr
    Dim swHoleTable As SldWorks.HoleTable
    Dim boolstatus As Boolean    </pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swSelMgr = swModel.<b>SelectionManager</b>
    boolstatus = swModel.<b>Extension</b>.<b>SelectByID2</b>(&quot;Hole Table1&quot;, &quot;HOLETABLE&quot;, 0, 0, 0, False, 0, Nothing, 0)
    Set swHoleTable = swSelMgr.<b>GetSelectedObject6</b>(1, -1)    </pre>
<pre>    swHoleTable.<b>EnableUpdate</b> = False ' Don't update hole table or model view    </pre>
<pre>    ' Change hole tags
    Debug.Print &quot;Original name of tag in column1, row 2:   &quot; &amp; swHoleTable.<b>HoleTag</b>(1)
    swHoleTable.HoleTag(1) = &quot;Test1&quot;
    Debug.Print &quot;New name of tag in column1, row 2:        &quot; &amp; swHoleTable.<b>HoleTag</b>(1)
    Debug.Print &quot;&quot;
    Debug.Print &quot;Original name of tag in column1, row 5:   &quot; &amp; swHoleTable.<b>HoleTag</b>(4)
    swHoleTable.HoleTag(4) = &quot;Test1&quot;  ' Fails because same name is used in row 2
    swHoleTable.HoleTag(4) = &quot;Test2&quot;
    Debug.Print &quot;New name of tag in column1, row 2:        &quot; &amp; swHoleTable.<b>HoleTag</b>(4)
    </pre>
<pre>    swHoleTable.<b>EnableUpdate</b> = True ' Update hole table and model view

End Sub</pre>

</body>

</html>
