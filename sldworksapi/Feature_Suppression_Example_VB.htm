<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html LANG=EN-US>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Suppress or Unsuppress Feature Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=date content="10 11, 2002 4:09:59 PM">
<meta name=MS-HKWD content="VBA examples,features">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1718>
<meta name=layout-width content=750>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body LANG=EN-US>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Suppress or Unsuppress Feature Example (VBA)</h1>

<p class=apiDescriptionText>This example shows how to suppress a feature in a part. </p>
<p class=apiDescriptionText>This example also shows how to perform a string 
comparison using Visual Basic. The first input 
 parameter, searchStr, allows you to pass in a feature name or a portion 
 of a feature name. </p>
<p class=apiDescriptionText>This macro cycles through all the features in the part and 
selects all features that contain the specified search string and suppresses 
those features. </p>
<pre>'------------------------------------------------------
' Preconditions: Verify that the part to open exists.
'
' Postconditions:
' 1. Opens the part.
' 2. Suppresses the specified feature.
' 3. Examine the FeatureManager design tree and
'    graphics area.
'
' NOTE: Because the part is used elsewhere, do not save
' changes.
'-------------------------------------------------------
Option Explicit
</pre>
<pre>Sub main()
 </pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swModelDocExt As SldWorks.ModelDocExtension
    Dim swPart As SldWorks.PartDoc
    Dim swFeature As SldWorks.Feature
    Dim featureName As String
    Dim action As String
    Dim fileName As String
    Dim searchStr As String
    Dim errors As Long
    Dim warnings As Long
    Dim msg As String
    Dim style As Long
    Dim title As String
    Dim status As Boolean    </pre>
<pre>    Set swApp = CreateObject(&quot;SldWorks.Application&quot;)    </pre>
<pre>    ' Attach to the active document
    fileName = &quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\api\bolt.sldprt&quot;
    Set swModel = swApp.<b>OpenDoc6</b>(fileName, swDocumentTypes_e.swDocPART, swOpenDocOptions_e.swOpenDocOptions_Silent, &quot;&quot;, errors, warnings)
    searchStr = &quot;chamf&quot;
    action = &quot;Suppress&quot;    'Change to &quot;Unsuppress&quot; to unsuppress supressed features</pre>
<pre>    Set swModelDocExt = swModel.<b>Extension</b>
    Set swPart = swModel    </pre>
<pre>    ' Exit if no model is active
    If swModel Is Nothing Then
        Exit Sub
    End If    </pre>
<pre>    ' Do not allow drawings or assemblies
    If (swModel.<b>GetType</b> &lt;&gt; swDocPART) Then
        ' Define message
        msg = &quot;Macro Only valid for parts&quot;
        ' OK button only
        style = VbMsgBoxStyle.vbOKOnly
        ' Define title
        title = &quot;Error&quot;
        ' Display error message
        Call MsgBox(msg, style, title)
        ' Exit this program
        Exit Sub
    End If    </pre>
<pre>    ' Get the first feature in part
    Set swFeature = swPart.<b>FirstFeature</b>    </pre>
<pre>    ' While a valid feature
    Do While Not swFeature Is Nothing
        ' Get the name of the feature
        Let featureName = swFeature.<b>Name</b>
        ' See if the feature name contains search string
        If InStr(1, featureName, searchStr, 1) Then
            ' Select the feature
            status = swModelDocExt.<b>SelectByID2</b>(featureName, &quot;BODYFEATURE&quot;, 0, 0, 0, False, 0, Nothing, 0)
            If (action = &quot;Suppress&quot;) Then
                    status = swModel.<b>EditSuppress2</b>() ' Suppress the feature
                ElseIf (action = &quot;Unsuppress&quot;) Then '
                    status = swModel.<b>EditUnsuppress2</b>() ' Unsuppress the feature
            End If
        End If
        Set swFeature = swFeature.<b>GetNextFeature</b>() ' Get the next feature
    Loop ' Continue looping until no more features     
</pre>
<pre>End Sub</pre>
<pre> </pre>
<pre> </pre>

</body>

</html>
