<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Create Holes Using Hole Wizard and Sketch Points Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=12655>
<meta name=layout-width content=723>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">

 <META NAME="MS-HKWD" CONTENT="VBA examples,holes">
</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Create Holes Using Hole Wizard and Sketch Points Example (VBA)</h1>

<p>This example shows how to create holes using the Hole Wizard and sketch 
 points.</p>

<p class="APICODE">
'---------------------------------------------------------------------------<br>
' Problem:<br>
' When adding a number of Hole Wizard hole features,<br>
' it is often helpful to use a sketch with a number of<br>
' sketch points. However, IFeatureManager::HoleWizard<br>
' requires selection points to be on a face and in the<br>
' space of the model.<br>
'<br>
' This example shows how to transform a sketch point<br>
' from the space of a sketch to the space of the model.<br>
'<br>
' Preconditions:<br>
' 1. Open a part or assembly document.<br>
' 2. Fully resolve the assembly.<br>
' 3. Select a sketch with at least one sketch point.<br>
'<br>
' Postconditions:<br>
' 1. Inserts counterbore hole features at each sketch point.<br>
' 2. Inspect the Immediate window.<br>
'<br>
' NOTES:<br>
' 1. Hole creation can fail due to geometry conditions.<br>
' 2. To access:<br>
'&nbsp;&nbsp;&nbsp; * IWizardHoleFeatureData2::Face<br>
'&nbsp;&nbsp;&nbsp; * IWizardHoleFeatureData2::Vertex<br>
'&nbsp;&nbsp;&nbsp; * IWizardHoleFeatureData2::GetEndConditionReference<br>
'&nbsp;&nbsp;&nbsp; the feature must be rolled back with a call to<br>
'&nbsp;&nbsp;&nbsp; IWizardHoleFeatureData2::AccessSelections<br>
'&nbsp;&nbsp;&nbsp; because these are geometric entities that<br>
'&nbsp;&nbsp;&nbsp; can be consumed by subsequent features.<br>
'---------------------------------------------------------------------------</p>
<p class="APICODE">Option Explicit</p>
<p class="APICODE">Function CreateHoleWizardFeature(swApp As SldWorks.SldWorks, 
swModel As SldWorks.ModelDoc2) As Boolean</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Dim swFeatMgr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.FeatureManager<br>
&nbsp;&nbsp;&nbsp; Dim swFeat&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.Feature<br>
&nbsp;&nbsp;&nbsp; Dim swWizHole&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.WizardHoleFeatureData2</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swFeatMgr = swModel.<b>FeatureManager</b><br>
&nbsp;&nbsp;&nbsp; Set swFeat = swFeatMgr.<b>HoleWizard</b> _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
( _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
swWzdCounterBore, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
swStandardISO, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
swStandardISOHexCapScrew, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&quot;M6&quot;, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
swEndThreadTypeBLIND, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
0.0066, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
0.02, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
0.014547, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
0.004, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
0#, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
1#, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
2.059488517353, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
0#, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
0#, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
0#, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
0#, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
0#, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
0#, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
0# _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; ' Hole creation can fail due to geometry conditions<br>
&nbsp;&nbsp;&nbsp; If swFeat Is Nothing Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CreateHoleWizardFeature = False<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exit Function<br>
&nbsp;&nbsp;&nbsp; End If</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swWizHole = swFeat.<b>GetDefinition</b></p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Feature = &quot; + swFeat.<b>Name</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>Type</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; CosmeticThreadType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>CosmeticThreadType</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; CounterBoreDepth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>CounterBoreDepth</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; CounterBoreDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>CounterBoreDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
<span style="font-weight: 700">&nbsp;&nbsp;&nbsp; '</span><span lang="EN">1 
radian = 180º/<font face="Symbol">p</font> = 57.295779513º or approximately 
57.3º</span><span style="COLOR: #222222" lang="EN"> </span><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; CounterDrillAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>CounterDrillAngle</b> * 57.3 &amp; &quot; deg&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; CounterDrillDepth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>CounterDrillDepth</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; CounterDrillDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>CounterDrillDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; CounterSinkAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>CounterSinkAngle</b> * 57.3 &amp; &quot; deg&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; CounterSinkDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>CounterSinkDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Depth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>Depth</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Diameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>Diameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; DrillAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>DrillAngle</b> * 57.3 &amp; &quot; deg&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; EndCondition&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>EndCondition</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; FarCounterSinkAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>FarCounterSinkAngle</b> * 57.3 &amp; &quot; deg&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; FarCounterSinkDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>FarCounterSinkDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; FastenerSize&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>FastenerSize</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; FastenerType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>FastenerType2</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; HeadClearance&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>HeadClearance</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; HeadClearanceType&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>HeadClearanceType</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; HoleDepth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>HoleDepth</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; HoleDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>HoleDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; MajorDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>MajorDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; MidCounterSinkAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>MidCounterSinkAngle</b> * 57.3 &amp; &quot; deg&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; MidCounterSinkDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>MidCounterSinkDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; MinorDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>MinorDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; NearCounterSinkAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>NearCounterSinkAngle</b> * 57.3 &amp; &quot; deg&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; NearCounterSinkDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>NearCounterSinkDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Standard&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>Standard2</b><br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; TapDrillDepth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>TapDrillDepth</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; TapDrillDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>TapDrillDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; ThreadAngle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>ThreadAngle</b> * 57.3 &amp; &quot; deg&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; ThreadDepth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>ThreadDepth</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; ThreadDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>ThreadDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; ThruHoleDepth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>ThruHoleDepth</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; ThruHoleDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>ThruHoleDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; ThruTapDrillDepth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>ThruTapDrillDepth</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; ThruTapDrillDiameter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; swWizHole.<b>ThruTapDrillDiameter</b> * 1000# &amp; &quot; mm&quot;<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; CreateHoleWizardFeature = True<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">End Function</p>
<p class="APICODE">Sub main()</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Dim swApp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.SldWorks<br>
&nbsp;&nbsp;&nbsp; Dim swMathUtil&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.MathUtility<br>
&nbsp;&nbsp;&nbsp; Dim swModel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.ModelDoc2<br>
&nbsp;&nbsp;&nbsp; Dim swSelMgr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.SelectionMgr<br>
&nbsp;&nbsp;&nbsp; Dim swFeat&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.Feature<br>
&nbsp;&nbsp;&nbsp; Dim swSketch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.Sketch<br>
&nbsp;&nbsp;&nbsp; Dim vSketchPtArr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Variant<br>
&nbsp;&nbsp;&nbsp; Dim vSketchPt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Variant<br>
&nbsp;&nbsp;&nbsp; Dim swSketchPt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.SketchPoint<br>
&nbsp;&nbsp;&nbsp; Dim swSketchXform&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.MathTransform<br>
&nbsp;&nbsp;&nbsp; Dim vPtArr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Variant<br>
&nbsp;&nbsp;&nbsp; Dim swPt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As SldWorks.MathPoint<br>
&nbsp;&nbsp;&nbsp; Dim bRet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
As Boolean<br>
&nbsp;&nbsp;&nbsp; Dim nPtData(2) As Double</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Set swApp = Application.<b>SldWorks</b><br>
&nbsp;&nbsp;&nbsp; Set swMathUtil = swApp.<b>GetMathUtility</b><br>
&nbsp;&nbsp;&nbsp; Set swModel = swApp.<b>ActiveDoc</b><br>
&nbsp;&nbsp;&nbsp; Set swSelMgr = swModel.<b>SelectionManager</b><br>
&nbsp;&nbsp;&nbsp; Set swFeat = swSelMgr.<b>GetSelectedObject6</b>(1, -1)<br>
&nbsp;&nbsp;&nbsp; Set swSketch = swFeat.<b>GetSpecificFeature2</b><br>
&nbsp;&nbsp;&nbsp; Set swSketchXform = swSketch.<b>ModelToSketchTransform</b><br>
&nbsp;&nbsp;&nbsp; Set swSketchXform = swSketchXform.<b>Inverse</b></p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; vSketchPtArr = swSketch.<b>GetSketchPoints</b></p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; For Each vSketchPt In vSketchPtArr<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set swSketchPt = 
vSketchPt<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nPtData(0) = swSketchPt.<b>X</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nPtData(1) = swSketchPt.<b>Y</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nPtData(2) = swSketchPt.<b>Z</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vPtArr = nPtData</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set swPt = 
swMathUtil.<b>CreatePoint</b>(vPtArr)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set swPt = swPt.<b>MultiplyTransform</b>(swSketchXform)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bRet = swModel.<b>Extension</b>.<b>SelectByID2</b>(&quot;&quot;, 
&quot;FACE&quot;, swPt.ArrayData(0), swPt.ArrayData(1), swPt.ArrayData(2), True, 0, 
Nothing, 0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bRet = 
CreateHoleWizardFeature(swApp, swModel)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Next</p>
<p class="APICODE">End Sub</p>

</body>

</html>
