<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Select Bodies Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,bodies">
<meta name=MS-HKWD content="VBA examples,surfaces">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=3402>
<meta name=layout-width content=786>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Select Bodies Example (VBA)</h1>

<p>This example shows how to select both solid and surface bodies in either 
 a part or an assembly.</p>
<pre>'----------------------------------------
' Preconditions:
' 1. Open a part or assembly.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Selects all solid and surface bodies.
' 2. Examine the Immediate window.
'----------------------------------------
Option Explicit</pre>
<pre>Sub SelectBodies(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, vBody As Variant, sPadStr As String)</pre>
<pre>    Dim swModExt As SldWorks.ModelDocExtension
    Dim swBody As SldWorks.Body2
    Dim sBodySelStr As String
    Dim sBodyTypeSelStr As String
    Dim i As Long
    Dim bRet As Boolean</pre>
<pre>    If IsEmpty(vBody) Then Exit Sub
    Set swModExt = swModel.<b>Extension</b></pre>
<pre>    For i = 0 To UBound(vBody)
        Set swBody = vBody(i)
        sBodySelStr = swBody.<b>GetSelectionId</b>
        Debug.Print &quot;  &quot; &amp; sPadStr &amp; sBodySelStr</pre>
<pre>        Select Case swBody.<b>GetType</b>
            Case swSolidBody
                sBodyTypeSelStr = &quot;SOLIDBODY&quot;
            Case swSheetBody
                sBodyTypeSelStr = &quot;SURFACEBODY&quot;
            Case Else
                Debug.Assert False
        End Select
        bRet = swModExt.<b>SelectByID2</b>(sBodySelStr, sBodyTypeSelStr, 0#, 0#, 0#, True, 0, Nothing, swSelectOptionDefault): Debug.Assert bRet
    Next i</pre>
<pre>End Sub</pre>
<pre>Sub ProcessComponent(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2, swComp As SldWorks.Component2, nLevel As Long)</pre>
<pre>    Dim vChildComp As Variant
    Dim swChildComp As SldWorks.Component2
    Dim sPadStr As String
    Dim vBody As Variant
    Dim i As Long</pre>
<pre>    For i = 0 To nLevel - 1
        sPadStr = sPadStr + &quot;  &quot;
    Next i</pre>
<pre>    Debug.Print sPadStr &amp; swComp.<b>Name2</b> &amp; &quot; &lt;&quot; &amp; swComp.<b>ReferencedConfiguration</b> &amp; &quot;&gt;&quot;</pre>
<pre>    ' Solid bodies
    vBody = swComp.<b>GetBodies2</b>(swSolidBody)
    SelectBodies swApp, swModel, vBody, sPadStr</pre>
<pre>    ' Surface bodies
    vBody = swComp.<b>GetBodies2</b>(swSheetBody)
    SelectBodies swApp, swModel, vBody, sPadStr</pre>
<pre>    vChildComp = swComp.GetChildren
    For i = 0 To UBound(vChildComp)
        Set swChildComp = vChildComp(i)
        ProcessComponent swApp, swModel, swChildComp, nLevel + 1
    Next i</pre>
<pre>End Sub</pre>
<pre>Sub ProcessAssembly(swApp As SldWorks.SldWorks, swModel As SldWorks.ModelDoc2)</pre>
<pre>    Dim swConfigMgr As SldWorks.ConfigurationManager
    Dim swConf As SldWorks.Configuration
    Dim swRootComp As SldWorks.Component2</pre>
<pre>    Set swConfigMgr = swModel.<b>ConfigurationManager</b>
    Set swConf = swConfigMgr.<b>ActiveConfiguration</b>
    Set swRootComp = swConf.<b>GetRootComponent3</b>(True)
    ProcessComponent swApp, swModel, swRootComp, 1</pre>
<pre>End Sub</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swPart As SldWorks.PartDoc
    Dim vBody As Variant
    Dim i As Long
    Dim bRet As Boolean</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b></pre>
<pre>    swModel.<b>ClearSelection2</b> True</pre>
<pre>    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b></pre>
<pre>    Select Case swModel.<b>GetType</b>
        Case swDocPART
            Set swPart = swModel
            ' Solid bodies
            vBody = swPart.<b>GetBodies2</b>(swSolidBody, True)
            SelectBodies swApp, swModel, vBody, &quot;&quot;
            ' Surface bodies
            vBody = swPart.<b>GetBodies2</b>(swSheetBody, True)
            SelectBodies swApp, swModel, vBody, &quot;&quot;
        Case swDocASSEMBLY
            ProcessAssembly swApp, swModel
        Case Else
            Exit Sub</pre>
<pre>    End Select</pre>
<pre>End Sub</pre>

</body>

</html>
