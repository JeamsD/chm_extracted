<html>

<head>
<title>Display Configuration Description in Bill of Materials Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples,bill of materials">
<meta name=MS-HKWD content="VBA examples,configurations">
<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Display Configuration Description in Bill of Materials Example (VBA)</h1>
<p>This example shows how to traverse an assembly and display the description of 
each configuration in the bill of materials.</p>
<pre>'--------------------------------------------------------------------------
' Preconditions:
' 1. Open <i>public_documents</i><b>\samples\tutorial\smartcomponents\pillow_block.sldasm.</b>
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Traverses the configurations.
' 2. Gets the name of each configuration and its description.
' 3. Sets and gets whether to display the description of each configuration
'    in the bill of materials.
' 4. Examine the Immediate window.
'
' NOTE: Because the assembly is used elsewhere, do not save changes.
'--------------------------------------------------------------------------
Option Explicit</pre>
<pre>Sub main()</pre>
<pre>    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim vConfigNameArr As Variant
    Dim vConfigName As Variant
    Dim swConfig As SldWorks.Configuration
    Dim swParentConfig As SldWorks.Configuration
    Dim swConfMgr As SldWorks.ConfigurationManager
    Dim vChildConfigArr As Variant
    Dim vChildConfig  As Variant
    Dim swChildConfig As SldWorks.Configuration</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swConfMgr = swModel.<b>ConfigurationManager</b>
    Debug.Print &quot;File = &quot; &amp; swModel.<b>GetPathName</b>
    Debug.Print &quot;&quot;
    ' Traverse configurations; always at least one configuration exists
    vConfigNameArr = swModel.<b>GetConfigurationNames</b>
    For Each vConfigName In vConfigNameArr
        Set swConfig = swModel.<b>GetConfigurationByName</b>(vConfigName)
        Debug.Print &quot;  Configuration name = &quot; &amp; swConfig.<b>Name</b>
        Debug.Print &quot;    Description = &quot; &amp; swConfig.<b>Description</b>
        swConfig.<b>UseDescriptionInBOM</b> = True
        Debug.Print &quot;    Display description in bill of materials? &quot; &amp; swConfig.<b>UseDescriptionInBOM</b></pre>
<pre>        ' Process parent
        Set swParentConfig = swConfig.<b>GetParent</b>
        If Not swParentConfig Is Nothing Then
            Debug.Print &quot;      Parent = &quot; &amp; swParentConfig.<b>Name</b>
        End If</pre>
<pre>        ' Process children
        vChildConfigArr = swConfig.<b>GetChildren</b>
        If Not IsEmpty(vChildConfigArr) Then
            For Each vChildConfig In vChildConfigArr
                Set swChildConfig = vChildConfig
                Debug.Print &quot;      Child = &quot; &amp; swChildConfig.<b>Name</b>
            Next
        End If
        Debug.Print &quot;&quot;
    Next</pre>
<pre>End Sub</pre>
<p>&nbsp;</p>

</body>

</html>
