<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Corresponding Note in Assembly Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2714>
<meta name=layout-width content=628>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">

<META NAME="MS-HKWD" CONTENT="VBA examples,notes">
<META NAME="MS-HKWD" CONTENT="VBA examples,assemblies">
<META NAME="MS-HKWD" CONTENT="VBA examples,annotations">
</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API Help</span></h1>

<h1>Get Corresponding Note in Assembly Example (VBA)</h1>

<p>This example shows how to determine if the selected note in an assembly 
 corresponds to the selected note in a part that is a component of the 
 assembly. </p>

<pre>'------------------------------------------------------------------
' Preconditions:
' 1. Copy <i>public_documents</i><b>\samples\tutorial\api\block.sldpr</b>t to <b>c:\temp.</b>
' 2. Open <b>c:\temp\block.sldprt</b> and add a note containing the text <b>Note1</b>.
' 3. Save the part.
' 4. Create an assembly of the part.
' 5. Save the assembly as <b>c:\temp\block.sldasm</b>.
'
' Postconditions:
' 1. At Stop, select the note and press F5.
' 2. Gets the Note object in the assembly.
' 3. Activates the part document.
' 4. At Stop, select the note and press F5.
' 5. Gets the Note object in the assembly.
' 6. Re-activates the assembly.
' 7. Gets whether the notes in the part and assembly are the same.
' 8. Click <b>OK</b> to close the message box.
'-----------------------------------------------------------------
Option Explicit</pre>
<pre>Dim swApp As SldWorks.SldWorks
Dim swAssembly As SldWorks.AssemblyDoc
Dim swPart As SldWorks.PartDoc
Dim swModel As SldWorks.ModelDoc2
Dim swCompModel As SldWorks.ModelDoc2
Dim swSelMgr As SldWorks.SelectionMgr
Dim swModelDocExt As SldWorks.ModelDocExtension
Dim swCompModelDocExt As SldWorks.ModelDocExtension
Dim swAnnotation As SldWorks.Annotation
Dim swAssemComp As SldWorks.Component2
Dim swAssemNoteCorresp As SldWorks.Note
Dim swAssyNote As SldWorks.Note
Dim swPartNote As SldWorks.Note
Dim boolstatus As Boolean
Dim nRetVal As Long</pre>
<pre>Sub main()</pre>
<pre>    Set swApp = Application.SldWorks
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swAssembly = swModel
    Set swSelMgr = swModel.<b>SelectionManager</b></pre>
<pre>    Stop
    ' Select the note in the assembly
    ' Press F5    </pre>
<pre>    ' Get the note
    Set swAssyNote = swSelMgr.<b>GetSelectedObject6</b>(1, 0)
    swModel.<b>ClearSelection2</b> True
    Set swAnnotation = swAssyNote.<b>GetAnnotation</b>
    boolstatus = swAnnotation.<b>Select3</b>(False, Nothing)</pre>
<pre>    ' Activate the part document
    Set swPart = swApp.<b>ActivateDoc2</b>(&quot;Block.SLDPRT&quot;, True, nRetVal)
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swModelDocExt = swModel.<b>Extension</b>
    Set swSelMgr = swModel.<b>SelectionManager</b></pre>
<pre>    swModel.<b>ClearSelection2</b> True</pre>
<pre>    Stop
    ' Select the note
    ' Press F5    </pre>
<pre>    ' Get the note
    Set swPartNote = swSelMgr.<b>GetSelectedObject6</b>(1, 0)
    swModel.<b>ClearSelection2</b> True
    Set swAnnotation = swPartNote.<b>GetAnnotation</b>
    boolstatus = swAnnotation.<b>Select3</b>(False, Nothing)</pre>
<pre>    ' Re-activate the assembly
    Set swAssembly = swApp.<b>ActivateDoc2</b>(&quot;Block.SLDASM&quot;, True, nRetVal)
    Set swModel = swApp.<b>ActiveDoc</b>
    Set swModelDocExt = swModel.<b>Extension</b>
    Set swSelMgr = swModel.<b>SelectionManager</b></pre>
<pre>    swModel.<b>ClearSelection2</b> True    </pre>
<pre>    ' Select the Block component in the assembly
    boolstatus = swModelDocExt.<b>SelectByID2</b>(&quot;Block-1@Block&quot;, &quot;COMPONENT&quot;, 0, 0, 0, False, 0, Nothing, 0)
    Set swAssemComp = swSelMgr.<b>GetSelectedObject6</b>(1, 0)
    Set swCompModel = swAssemComp.<b>GetModelDoc</b>
    Set swCompModelDocExt = swCompModel.<b>Extension</b></pre>
<pre>    swModel.<b>ClearSelection2</b> True</pre>
<pre>    ' Get whether the selected notes are the same note
    Set swAssemNoteCorresp = swCompModelDocExt.<b>GetCorresponding</b>(swPartNote)
    Dim strOutput As String</pre>
<pre>    ' Test feature returned by swCompMondelDocExt::GetCorresponding
    If swAssemNoteCorresp Is Nothing Then
        strOutput = &quot;Note not obtained.&quot;
    Else
        If TypeOf swAssemNoteCorresp Is SldWorks.<b>Note</b> Then
            Set swAnnotation = swAssemNoteCorresp.<b>GetAnnotation</b>
            boolstatus = swAnnotation.<b>Select3</b>(False, Nothing)
            swAssemNoteCorresp.<b>GetText</b></pre>
<pre>            'If swAssemNoteCorresp Is swAssyNote then
            'the pointers are different, but they point to the same note
            If swAssemNoteCorresp.<b>GetText</b> = &quot;Note1&quot; Then
                strOutput = &quot;Note obtained correctly.&quot;
            Else
                strOutput = &quot;swAssemNoteCorresp Is not swAssyNote.&quot;
            End If
        End If
    End If</pre>
<pre>    strOutput = strOutput + vbNewLine
    swModel.<b>ClearSelection2</b> True
    strOutput = strOutput + vbNewLine
    MsgBox strOutput</pre>
<pre>End Sub</pre>

</body>

</html>
