<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Get Distance Between Entities Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content="VBA examples,entities">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=3391>
<meta name=layout-width content=863>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Get Distance Between Entities Example (VBA)</h1>
<p>This example shows how to get the minimum and maximum distances between face 
and edge entities.</p>

<pre>'---------------------------------------------------------------------------
' Preconditions:
' 1. Open <i>public_documents</i><b>\samples\tutorial\multibody\multi_inter.sldprt</b>.
' 2. Open the Immediate window.
' 3. Put your cursor anywhere in the main module in the IDE and press F5.
'
' Postconditions:
' 1. Creates a sketch line that depicts the maximum distance between
'    the face and edge entities.
' 2. Put your cursor over <b>Sketch4</b> in the FeatureManager design tree and
'    examine the graphics area.
' 3. Examine the Immediate window.
'
' NOTE: Because the part is used elsewhere, do not save changes.
'-----------------------------------------------------------------------------
Option Explicit</pre>
<pre>Dim swApp As SldWorks.SldWorks
Dim swDoc As SldWorks.ModelDoc2
Dim swSM As SldWorks.SelectionMgr
Dim swFace As SldWorks.Face2
Dim swEdge As SldWorks.Edge
Dim swTop1 As SldWorks.Entity
Dim swTop2 As SldWorks.Entity
Dim bMin As Boolean
Dim retval As Long
Dim dist As Double
Dim varParam As Variant
Dim varPos1 As Variant
Dim varPos2 As Variant
Dim caseType As Integer
Dim boolstatus As Boolean</pre>
<pre>Sub main()
    varParam = Empty    </pre>
<pre>    Set swApp = Application.SldWorks
    Set swDoc = swApp.<b>ActiveDoc</b>
    Set swSM = swDoc.<b>SelectionManager</b>    </pre>
<pre>    For caseType = 1 To 2
        Select Case caseType
            Case 1
                FaceFaceMinDistance
            Case 2
                FaceEdgeMaxDistance
            Case Else
                Exit Sub
        End Select
    Next     </pre>
<pre>        Set swTop1 = Nothing
        Set swTop2 = Nothing
        Set swFace = Nothing
        Set swEdge = Nothing
        Set swSM = Nothing
        Set swDoc = Nothing
        Set swApp = Nothing
End Sub</pre>
<pre>Sub SetParameterForEdge()
    Dim startPt As Variant
    Dim startVertex As Variant
    Dim endPt As Variant
    Dim endVertex As Variant
    Dim startPara As Variant
    Dim endPara As Variant    </pre>
<pre>    Set swEdge = swSM.<b>GetSelectedObject6</b>(2, -1)
    Set startVertex = swEdge.<b>GetStartVertex</b>
    startPt = startVertex.<b>GetPoint</b>
    endPt = swEdge.<b>GetEndVertex</b>.<b>GetPoint</b>
    startPara = swEdge.<b>GetParameter</b>(startPt(0), startPt(1), startPt(2))
    endPara = swEdge.<b>GetParameter</b>(endPt(0), endPt(1), endPt(2))    </pre>
<pre>    Dim paramDl(1) As Double
    paramDl(0) = startPara(0)
    paramDl(1) = endPara(0)
    varParam = paramDl
End Sub</pre>
<pre>
Sub SetParameterForFace()
    Set swFace = swSM.<b>GetSelectedObject6</b>(2, -1)
    Dim swSurface As SldWorks.Surface
    Set swSurface = swFace.<b>GetSurface</b>
    Dim varBox As Variant
    varBox = swFace.<b>GetBox</b>
    Dim varLowParam As Variant, varHighParam As Variant
    varLowParam = swSurface.<b>ReverseEvaluate</b>(varBox(0), varBox(1), varBox(2))
    varHighParam = swSurface.<b>ReverseEvaluate</b>(varBox(3), varBox(4), varBox(5))    </pre>
<pre>    Dim paramD2(3) As Double
    paramD2(0) = varLowParam(0)
    paramD2(1) = varLowParam(1)
    paramD2(2) = varHighParam(0)
    paramD2(3) = varHighParam(1)
    varParam = paramD2
End Sub</pre>
<pre>
Sub CreateLine()
    Dim swSkM As SldWorks.SketchManager
    Dim skSegment As SldWorks.SketchSegment
    Set swSkM = swDoc.<b>SketchManager</b>
    swDoc.<b>Extension</b>.<b>SelectByID2</b> &quot;Front&quot;, &quot;PLANE&quot;, 0, 0, 0, False, 0, Nothing, 0
    swSkM.<b>InsertSketch</b> True
    Set skSegment = swSkM.<b>CreateLine</b>(varPos1(0), varPos1(1), varPos1(2), varPos2(0), varPos2(1), varPos2(2))
    swDoc.<b>ClearSelection2</b> True
    swSkM.<b>InsertSketch</b> True
End Sub</pre>
<pre>
Sub FaceFaceMinDistance()
    swDoc.<b>ClearSelection</b>
    boolstatus = swDoc.<b>Extension</b>.<b>SelectByID2</b>(&quot;&quot;, &quot;FACE&quot;, -0.07448317477082, -0.04390354307787, 0.08443247713632, False, 0, Nothing, 0)
    boolstatus = swDoc.<b>Extension</b>.<b>SelectByID2</b>(&quot;&quot;, &quot;FACE&quot;, -0.05640517674067, -0.005486808589922, 0.06500000000005, True, 0, Nothing, 0)
    SetParameterForFace
    If (swSM.<b>GetSelectedObjectCount</b> = 2) Then
        Set swTop1 = swSM.<b>GetSelectedObject6</b>(1, -1)
        Set swTop2 = swSM.<b>GetSelectedObject6</b>(2, -1)
        bMin = True
        retval = swTop1.<b>GetDistance</b>(swTop2, bMin, varParam, varPos1, varPos2, dist)
        Debug.Print (&quot;IEntity::GetDistance return value (0 = success; 1 = failure): &quot; &amp; retval)
        Debug.Print (&quot;Face1 coordinate: &quot; &amp; varPos1(0) &amp; &quot;,&quot; &amp; varPos1(1) &amp; &quot;,&quot; &amp; varPos1(2))
        Debug.Print (&quot;Face2 coordinate: &quot; &amp; varPos2(0) &amp; &quot;,&quot; &amp; varPos2(1) &amp; &quot;,&quot; &amp; varPos2(2))
        Debug.Print (&quot;Minimum distance between two faces = &quot; &amp; dist * 1000 &amp; &quot; mm&quot;)
        CreateLine
    End If
End Sub</pre>
<pre>
Sub FaceEdgeMaxDistance()
    swDoc.<b>ClearSelection</b>
    boolstatus = swDoc.<b>Extension</b>.<b>SelectByID2</b>(&quot;&quot;, &quot;FACE&quot;, -0.0712080569869, -0.04996892464504, 0.08163440548356, False, 0, Nothing, 0)
    boolstatus = swDoc.<b>Extension</b>.<b>SelectByID2</b>(&quot;&quot;, &quot;EDGE&quot;, -0.04898677039967, 4.196506486664E-04, 0.06476403488529, True, 0, Nothing, 0)
    SetParameterForEdge
    If (swSM.<b>GetSelectedObjectCount</b> = 2) Then
        Set swTop1 = swSM.<b>GetSelectedObject6</b>(1, -1)
        Set swTop2 = swSM.<b>GetSelectedObject6</b>(2, -1)
        bMin = False
        retval = swTop1.<b>GetDistance</b>(swTop2, bMin, varParam, varPos1, varPos2, dist)
        Debug.Print (&quot;IEntity::GetDistance return value (0 = success; 1 = failure): &quot; &amp; retval)
        Debug.Print (&quot;Face coordinate: &quot; &amp; varPos1(0) &amp; &quot;,&quot; &amp; varPos1(1) &amp; &quot;,&quot; &amp; varPos1(2))
        Debug.Print (&quot;Edge coordinate: &quot; &amp; varPos2(0) &amp; &quot;,&quot; &amp; varPos2(1) &amp; &quot;,&quot; &amp; varPos2(2))
        Debug.Print (&quot;Maximum distance between face and edge = &quot; &amp; dist * 1000 &amp; &quot; mm&quot;)
        CreateLine
    End If
End Sub

</pre>

</body>

</html>
