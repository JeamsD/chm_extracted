<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Work with Configurations Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta NAME=MS-HAID CONTENT=EXConfigurations>
<meta name=date content="10 30, 2002 1:57:46 PM">
<meta name=MS-HKWD content="VBA examples,configurations">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1416>
<meta name=layout-width content=789>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Work with Configurations Example (VBA)</h1>

<p>This example shows how to work with new and derived configurations. </p>

<pre>'--------------------------------------------------------------
' Preconditions:
' 1. Open<b> </b><i>public_documents</i><b>\samples\tutorial\api\2012-sm.sldprt</b>.
' 2. Open the Immediate window.
'
' Postconditions:
' 1. Creates two configurations, <b>Config1</b> and <b>Config1</b> <b>Derived</b>.
' 2. Gets whether each of these configurations are derived and the
'    number of children configurations for <b>Config1</b>.
' 3. Gets the number and names of the configurations in the part.
' 4. Examine the Immediate window.
'
' NOTE: Because the part is used elsewhere, do not save changes.
'---------------------------------------------------------------
Option Explicit</pre>
<pre>Dim swApp As SldWorks.SldWorks
Dim Model As ModelDoc2
Dim ConfigMgr As ConfigurationManager
Dim C1a As Configuration
Dim SelMgr As SelectionMgr
Dim CDerived As Configuration
Dim CParent As Configuration
Dim V As Variant
Dim i As Long

Sub main()</pre>
<pre>    Set swApp = Application.SldWorks
    Set Model = swApp.<b>ActiveDoc</b>
    Set SelMgr = Model.<b>SelectionManager</b>
    Set ConfigMgr = Model.<b>ConfigurationManager</b>    </pre>
<pre>    ' Create a new configuration named Config1
    ConfigMgr.<b>AddConfiguration2</b> &quot;Config1&quot;, &quot;Config1 comment&quot;, &quot;alternateName&quot;, 1, &quot;&quot;, &quot;no description&quot;, True

    ' Create a derived configuration called &quot;Config1 Derived&quot; whose parent configuration is &quot;Config1&quot;
    ConfigMgr.<b>AddConfiguration2</b> &quot;Config1 Derived&quot;, &quot;Config1 Derived Comment&quot;, &quot;Alternate Name&quot;, 1, &quot;Config1&quot;, &quot;no description&quot;, True</pre>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Add a rebuild and save mark to all 
configurations<br>
&nbsp;&nbsp;&nbsp; bRet = ConfigMgr.<b>AddRebuildSaveMark</b>(2, Nothing)<br>
<br>
&nbsp;&nbsp;&nbsp; ' Display all configuration nodes expanded in the top pane<br>
&nbsp;&nbsp;&nbsp; ConfigMgr.<b>SetExpanded</b> 0, True<br>
<br>
&nbsp;&nbsp;&nbsp; ' Show Config1 and make it the active configuration<br>
&nbsp;&nbsp;&nbsp; Model.<b>ShowConfiguration2</b> (&quot;Config1&quot;)<br>
<br>
&nbsp;&nbsp;&nbsp; ' Select the configuration to preview in the bottom pane<br>
&nbsp;&nbsp;&nbsp; boolstatus = Model.<b>Extension</b>.<b>SelectByID2</b>(&quot;Config1&quot;, 
&quot;CONFIGURATIONS&quot;, 0, 0, 0, False, 0, Nothing, 0)<br>
&nbsp;&nbsp;&nbsp; ConfigMgr.<b>ShowPreview</b> = True<br>
<br>
&nbsp;&nbsp;&nbsp; ConfigMgr.<b>ShowConfigurationDescriptions</b> = True<br>
&nbsp;&nbsp;&nbsp; ConfigMgr.<b>ShowConfigurationNames</b> = True</p>
<pre>    ' Get Config1
    Set C1a = Model.<b>GetActiveConfiguration</b></pre>
<pre>    ' Determine if the active configuration is a derived configuration
    Debug.Print C1a.<b>Name</b> &amp; &quot; configuration derived? &quot; &amp; C1a.<b>IsDerived</b>
    Dim VChildren As Variant
    
    ' Determine the number of children configurations
    Debug.Print &quot;  Number of children configurations: &quot; &amp; C1a.<b>GetChildrenCount
</b>
    ' Get all of the children configurations
    VChildren = C1a.<b>GetChildren</b>
    Set CDerived = VChildren(0)

    ' Determine if the active configuration is a derived configuration
    Debug.Print CDerived.<b>Name</b> &amp; &quot; configuration derived? &quot; &amp; CDerived.<b>IsDerived
</b>    
    ' Get the parent configuration of the derived configuration
    Set CParent = CDerived.<b>GetParent</b></pre>
<pre>    ' Determine the number of configurations in this document
    Debug.Print &quot;Number of configurations in part: &quot; &amp; swApp.<b>GetConfigurationCount</b>(&quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\api\2012-sm.sldprt&quot;)
 
    ' Get the names of these configurations
    V = swApp.<b>GetConfigurationNames</b>(&quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\api\2012-sm.sldprt&quot;)
    
    Debug.Print &quot;Names of configurations in part:&quot;
    For i = 0 To UBound(V)
        ' Print the names of these configurations
        Debug.Print &quot;  &quot; &amp; V(i)
    Next

End Sub</pre>

</body>

</html>
