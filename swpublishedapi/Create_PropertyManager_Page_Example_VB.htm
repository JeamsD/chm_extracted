<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Create PropertyManager Page Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta NAME=MS-HAID CONTENT=EXCreatePropertyManagerPage>
<meta name=MS-HKWD content="VBA examples,PropertyManager pages">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=6937>
<meta name=layout-width content=910>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Create PropertyManager Page Example (VBA)</h1>

<p style="font-weight: normal;"><a name="Top"></a>This example shows how to create a PropertyManager 
 page that contains the following controls:</p>
<ul>
	<li>
	<p style="font-weight: normal;">ActiveX</p></li>
	<li>
	<p style="font-weight: normal;">Bitmap</p></li>
	<li>
	<p style="font-weight: normal;">Bitmap button</p></li>
	<li>
	<p style="font-weight: normal;">Button</p></li>
	<li>
	<p style="font-weight: normal;">Combo box</p></li>
	<li>
	<p style="font-weight: normal;">Group box</p></li>
	<li>
	<p style="font-weight: normal;">Label</p></li>
	<li>
	<p style="font-weight: normal;">List box</p></li>
	<li>
	<p style="font-weight: normal;">Number box</p></li>
	<li>
	<p style="font-weight: normal;">Radio button</p></li>
	<li>
	<p style="font-weight: normal;">Selection box</p></li>
	<li>
	<p style="font-weight: normal;">Slider</p></li>
	<li>
	<p style="font-weight: normal;">Tab</p></li>
</ul>
<p style="font-weight: normal;">This 
 example also shows how to handle focus events for these controls. </p>
<p style="font-weight: normal;"><span style="font-weight: bold;">NOTE:</span> If the model is an assembly 
that contains multiple components, and you want to allow the user to 
 select edges, faces, or vertices, then you must specify swSelCOMPSDONTOVERRIDE 
for parameter SelType of IPropertyManagerPageSelectionbox::SetSelectionFilters. 
Otherwise, if the user attempts to select an edge, face, or vertex, then the 
entire component might get selected and not the edge, face, or vertex. This 
example demonstrates how to specify SelType.</p>

<p class=APICODE><font size="2">'--------------------------------------------------------------------------<br>
' Preconditions:<br>
' <!--kadov_tag{{<spaces>}}--><!--kadov_tag{{</spaces>}}-->1. 
 Copy <a href="#Modules"
		style="font-weight: bold;">Modules - main</a> to your project.<br>
' <!--kadov_tag{{<spaces>}}-->2. 
 Copy <a href="#ClassModules"
		style="font-weight: bold;">Class Modules - clsPropMgr</a> to a 
 class module in your project.<br>
' <!--kadov_tag{{<spaces>}}-->3. Click </font> <span style="font-weight: bold;">
<font size="2">Tools &gt; References, </span>select<span style="font-weight: bold;">
<br>
' <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->SOLIDWORKS</span></font><font size="2"> 
 <span style="font-style: italic;">version</span> <span style="font-weight: bold;">exposed 
 type libraries for add-in use</span></font>, and click <b>OK</b>.<span><font size="2"><br>
' 4. Ensure that the specified assembly document exists.<br>
' 5. Modify <i>ClassID</i> and <i>LicenseKey</i> parameters in <br>
'&nbsp;&nbsp;&nbsp; IPropertyManagerPageActiveX::SetClass to add your ActiveX 
control<br>
'&nbsp;&nbsp;&nbsp; to the PropertyManager page.<br>
' 6. Open an Immediate window.</font></span><font size="2"><br>
'<br>
' Postconditions:<br>
' <!--kadov_tag{{<spaces>}}--><!--kadov_tag{{</spaces>}}-->1. Creates a 
 PropertyManager page called <b>Comps</b>. <br>
' 2. Creates the specified controls. <br>
' 3. <!--kadov_tag{{</spaces>}}-->Inspect 
 the contents of <b>Comps</b> and the Immediate Window as <br>
'&nbsp; <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->you 
 use the specified controls. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--> <br>
'</font>&nbsp;4. Click the green check mark to close the PropertyManager page.<font size="2"><br>
'<br>
' <b>NOTE</b>: Because the assembly document is used 
elsewhere, <!--kadov_tag{{<spaces>}}-->do not save changes.<br>
'----------------------------------------------------------------------------</font></p>

<p class=APICODE><b><font size="2">
<a name="Modules"></a>'Modules - main</font></b></p>

<p class=APICODE><font size="2">Option Explicit</font></p>

<p class=APICODE>&nbsp;</p>

<p class=APICODE><font size="2">Public swApp As SldWorks.SldWorks</font></p>

<p class=APICODE><font size="2">Public Part As SldWorks.ModelDoc2</font></p>

<p class=APICODE><font size="2">Public pm As clsPropMgr</font></p>

<p class=APICODE>&nbsp;</p>

<p class=APICODE><font size="2">Sub main()</font></p>

<blockquote>
	<p class=APICODE><font size="2">Dim openDocErrors As Long</font></p>
	<p class=APICODE><font size="2">Dim OpenDocWarnings As Long</font></p>
	<p class=APICODE>&nbsp;</p>
	<p class=APICODE><font size="2">Set swApp = Application.SldWorks</font></p>
	<p class=APICODE><font size="2">Set Part = swApp.<span style="font-weight: bold;">OpenDoc6</span>(&quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 
	2018\samples\tutorial\advdrawings\bladed shaft.sldasm&quot;, 
 swDocASSEMBLY, swOpenDocOptions_Silent, &quot;&quot;, openDocErrors, OpenDocWarnings)</font></p>
	<blockquote>
		<p class=APICODE><font size="2">'Create a new instance of the PropertyManager class</font></p>
		<p class=APICODE><font size="2">Set pm = New clsPropMgr</font></p>
		<p class=APICODE><font size="2">pm.</font><span style="font-weight: bold;"><font size="2">Show</font></span></p>
	</blockquote>
</blockquote>

<p class=APICODE><font size="2">End Sub</font></p>
<p class=APICODE>&nbsp;</p>
<p align="center"><a href="#Top">Back to top</a></p>

<p class=APICODE>&nbsp;</p>

<p class="APICODE"><a name="ClassModules"></a>'<b>Class Modules - clsPropMgr</b></p>
<p class="APICODE">Option Explicit</p>
<p class="APICODE">' Handler for PropertyManager page controls<br>
Implements PropertyManagerPage2Handler9<br>
</p>
<p class="APICODE">' Control objects required for the PropertyManager page<br>
Dim pm_Page As PropertyManagerPage2<br>
Dim pm_Group As PropertyManagerPageGroup<br>
Dim pm_Selection As PropertyManagerPageSelectionbox<br>
Dim pm_Selection2 As PropertyManagerPageSelectionbox<br>
Dim pm_Label As PropertyManagerPageLabel<br>
Dim pm_Combo As PropertyManagerPageCombobox<br>
Dim pm_List As PropertyManagerPageListbox<br>
Dim pm_Number As PropertyManagerPageNumberbox<br>
Dim pm_Radio As PropertyManagerPageOption<br>
Dim pm_Slider As PropertyManagerPageSlider<br>
Dim pm_Tab As PropertyManagerPageTab<br>
Dim pm_Button As PropertyManagerPageButton<br>
Dim pm_BMPButton As PropertyManagerPageBitmapButton<br>
Dim pm_Bitmap As PropertyManagerPageBitmap<br>
Dim pm_ActiveX As PropertyManagerPageActiveX<br>
Dim ClickedCancel As Boolean<br>
Dim retVal As Long<br>
</p>
<p class="APICODE">' Each control in the page needs a unique ID<br>
Const GroupID As Long = 1<br>
Const LabelID As Long = 2<br>
Const SelectionID As Long = 3<br>
Const ComboID As Long = 4<br>
Const ListID As Long = 5<br>
Const Selection2ID As Long = 6<br>
Const NumberID As Long = 7<br>
Const RadioID As Long = 8<br>
Const SliderID As Long = 9<br>
Const TabID As Long = 10<br>
Const ButtonID As Long = 11<br>
Const BMPButtonID As Long = 12<br>
Const BitmapID As Long = 13<br>
Const ActiveXID As Long = 14</p>
<p class="APICODE">Sub Show()</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; pm_Page.<b>Show2</b> 0</p>
<p class="APICODE">End Sub<br>
</p>
<p class="APICODE">' The following runs when a new instance of the class is 
created</p>
<p class="APICODE">Private Sub Class_Initialize()<br>
</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Dim PageTitle As String<br>
&nbsp;&nbsp;&nbsp; Dim caption As String<br>
&nbsp;&nbsp;&nbsp; Dim tip As String<br>
&nbsp;&nbsp;&nbsp; Dim options As Long<br>
&nbsp;&nbsp;&nbsp; Dim longerrors As Long<br>
&nbsp;&nbsp;&nbsp; Dim controlType As Long<br>
&nbsp;&nbsp;&nbsp; Dim alignment As Long<br>
&nbsp;&nbsp;&nbsp; Dim listItems(3) As String</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; ' Set the variables for the page<br>
&nbsp;&nbsp;&nbsp; PageTitle = &quot;Comps&quot;<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; options = swPropertyManager_OkayButton _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + swPropertyManager_CancelButton _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + swPropertyManagerOptions_LockedPage 
_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + 
swPropertyManagerOptions_PushpinButton</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; ' Create the PropertyManager page<br>
&nbsp;&nbsp;&nbsp; Set pm_Page = swApp.<b>CreatePropertyManagerPage</b>(PageTitle, 
_<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options, Me, longerrors)<br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; ' Make sure that the page was created properly<br>
&nbsp;&nbsp;&nbsp; If longerrors = swPropertyManagerPage_Okay Then<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add controls to 
the page<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add a tab</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_Tab = 
pm_Page.<b>AddTab</b>(TabID, &quot;Application&quot;, &quot;&quot;, 0)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add a group box to the tab</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; caption = 
&quot;Controls&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options = 
swGroupBoxOptions_Visible + _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
swGroupBoxOptions_Expanded</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_Group = 
pm_Tab.<b>AddGroupBox</b>(GroupID, caption, options)<br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add two selection boxes</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; controlType = 
swControlType_Selectionbox</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; caption = &quot;&quot;&nbsp;
</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alignment = 
swControlAlign_Indent</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options = 
swControlOptions_Visible + _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
swControlOptions_Enabled</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tip = &quot;Select an 
edge, face, vertex, solid body, or a component&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_Selection = 
pm_Group.<b>AddControl2</b>(SelectionID, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
controlType, caption, alignment, options, tip)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_Selection2 
= pm_Group.<b>AddControl2</b>(Selection2ID, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
controlType, caption, alignment, options, tip)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Dim filters(6) As 
Long<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; filters(0) = swSelEDGES<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; filters(1) = swSelREFEDGES<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; filters(2) = swSelFACES<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; filters(3) = swSelVERTICES<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; filters(4) = swSelSOLIDBODIES<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; filters(5) = swSelCOMPONENTS<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; filters(6) = swSelCOMPSDONTOVERRIDE<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_Selection.<b>SingleEntityOnly</b> 
= False<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_Selection.<b>AllowMultipleSelectOfSameEntity</b> 
= True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_Selection.<b>Height</b> = 50<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_Selection.<b>SetSelectionFilters</b> 
filters<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_Selection2.<b>SingleEntityOnly</b> 
= False<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_Selection2.<b>AllowMultipleSelectOfSameEntity</b> 
= True<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_Selection2.<b>Height</b> = 50<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_Selection2.<b>SetSelectionFilters</b> 
filters</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add a combo box</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; controlType = 
swControlType_Combobox</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; caption = &quot;&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alignment = 
swControlAlign_Indent</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options = 
swControlOptions_Visible + _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
swControlOptions_Enabled</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tip = &quot;Select a 
value&quot;<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_Combo = 
pm_Group.<b>AddControl2</b>(ComboID, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
controlType, caption, alignment, options, tip)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Not pm_Combo Is 
Nothing Then<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
pm_Combo.<b>Height</b> = 50<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
listItems(0) = &quot;Value 1&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listItems(1) 
= &quot;Value 2&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listItems(2) 
= &quot;Value 3&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listItems(3) 
= &quot;Value 4&quot;<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
pm_Combo.<b>AddItems</b> (listItems)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_Combo.<b>CurrentSelection</b> 
= 0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add a list box</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; controlType = 
swControlType_Listbox</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; caption = &quot;&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alignment = 
swControlAlign_Indent</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options = 
swControlOptions_Visible + _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
swControlOptions_Enabled</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tip = 
&quot;Multi-select values in the list box&quot;<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_List = 
pm_Group.<b>AddControl2</b>(ListID, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
controlType, caption, alignment, options, tip)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_List.<b>Style</b> = 
swPropMgrPageListBoxStyle_MultipleItemSelect<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_List.<b>Height</b> = 50</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If Not pm_List Is Nothing Then<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
pm_List.<b>Height</b> = 50<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listItems(0) 
= &quot;Value 1&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listItems(1) 
= &quot;Value 2&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listItems(2) 
= &quot;Value 3&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; listItems(3) 
= &quot;Value 4&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_List.<b>AddItems</b> 
(listItems)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_List.<b>SetSelectedItem</b> 
1, True<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add a label<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_Label = pm_Group.<b>AddControl2</b>(LabelID, 
swControlType_Label, &quot;Label&quot;, swControlAlign_LeftEdge, options, &quot;&quot;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add a slider<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_Slider = pm_Group.<b>AddControl2</b>(SliderID, 
swControlType_Slider, &quot;Slider&quot;, swControlAlign_LeftEdge, options, &quot;Slide&quot;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add a radio 
button<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_Radio = pm_Group.<b>AddControl2</b>(RadioID, 
swControlType_Option, &quot;Radio button&quot;, swControlAlign_LeftEdge, options, 
&quot;Select&quot;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add a number box<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_Number = pm_Group.<b>AddControl2</b>(NumberID, 
swControlType_Numberbox, &quot;Number box&quot;, swControlAlign_LeftEdge, options, &quot;Spin&quot;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add a button<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_Button = pm_Group.<b>AddControl2</b>(ButtonID, 
swControlType_Button, &quot;Button&quot;, swControlAlign_LeftEdge, options, &quot;Click&quot;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add a bitmap 
button<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_BMPButton = pm_Group.<b>AddControl2</b>(BMPButtonID, 
swControlType_BitmapButton, &quot;Bitmap button&quot;, swControlAlign_LeftEdge, options, 
&quot;Click&quot;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_BMPButton.<b>SetStandardBitmaps</b> 
(swPropertyManagerPageBitmapButtons_e.swBitmapButtonImage_parallel) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add a bitmap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_Bitmap = pm_Group.<b>AddControl2</b>(BitmapID, 
swControlType_Bitmap, &quot;Bitmap&quot;, swControlAlign_LeftEdge, options, &quot;Bitmap&quot;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_Bitmap.<b>SetStandardBitmap</b> (swBitmapControlStandardTypes_e.swBitmapControl_Volume)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Add an ActiveX 
control<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set pm_ActiveX = pm_Group.<b>AddControl2</b>(ActiveXID, 
swControlType_ActiveX, &quot;ActiveX&quot;, swControlAlign_LeftEdge, options, &quot;ActiveX 
control tip&quot;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pm_ActiveX.<b>SetClass</b> &quot;<i>ClassID</i>&quot;, 
&quot;<i>LicenseKey</i>&quot;<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Else<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox &quot;An error 
occurred while attempting to create the PropertyManager Page&quot;, vbCritical<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; End If<br>
&nbsp;<br>
</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>AfterActivation</b>()</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>AfterClose</b>()</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ' Destroy the class<br>
&nbsp;&nbsp;&nbsp; Set pm = Nothing</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Function PropertyManagerPage2Handler9_<b>OnActiveXControlCreated</b>(ByVal 
Id As Long, ByVal Status As Boolean) As Long<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;ActiveX control created&quot;<br>
End Function</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnButtonPress</b>(ByVal 
Id As Long)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Button clicked&quot;<br>
End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnCheckboxCheck</b>(ByVal 
Id As Long, ByVal Checked As Boolean)</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnClose</b>(ByVal 
Reason As Long)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; If Reason = 
swPropertyManagerPageClose_Cancel Then</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' Cancel button 
clicked<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClickedCancel = True</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; ElseIf Reason = 
swPropertyManagerPageClose_Okay Then</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ' OK button 
clicked<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClickedCancel = False</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; End If</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnComboboxEditChanged</b>(ByVal 
Id As Long, ByVal Text As String)</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnComboboxSelectionChanged</b>(ByVal 
Id As Long, ByVal Item As Long)</p>
<p class="APICODE">End Sub<br>
&nbsp;<br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnGroupCheck</b>(ByVal 
Id As Long, ByVal Checked As Boolean)</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnGroupExpand</b>(ByVal 
Id As Long, ByVal Expanded As Boolean)</p>
<p class="APICODE">End Sub</p>
<p class="APICODE">&nbsp;<br>
Private Function PropertyManagerPage2Handler9_<b>OnHelp</b>() As Boolean</p>
<p class="APICODE">End Function</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Function PropertyManagerPage2Handler9_<b>OnKeystroke</b>(ByVal 
Wparam As Long, ByVal Message As Long, ByVal Lparam As Long, ByVal Id As Long) 
As Boolean</p>
<p class="APICODE">End Function</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnListboxSelectionChanged</b>(ByVal 
Id As Long, ByVal Item As Long)<br>
&nbsp;&nbsp;&nbsp; </p>
<p class="APICODE">End Sub<br>
</p>
<p class="APICODE">Private Function PropertyManagerPage2Handler9_<b>OnNextPage</b>() 
As Boolean</p>
<p class="APICODE">End Function</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnNumberboxChanged</b>(ByVal 
Id As Long, ByVal Value As Double)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Number box changed&quot;<br>
End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnOptionCheck</b>(ByVal 
Id As Long)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Option selected&quot;<br>
End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnPopupMenuItem</b>(ByVal 
Id As Long)</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnPopupMenuItemUpdate</b>(ByVal 
Id As Long, retVal As Long)</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Function PropertyManagerPage2Handler9_<b>OnPreview</b>() 
As Boolean</p>
<p class="APICODE">End Function</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Function PropertyManagerPage2Handler9_<b>OnPreviousPage</b>() 
As Boolean</p>
<p class="APICODE">End Function</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnRedo</b>()</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnSelectionboxCalloutCreated</b>(ByVal 
Id As Long)</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnSelectionboxCalloutDestroyed</b>(ByVal 
Id As Long)</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnSelectionboxFocusChanged</b>(ByVal 
Id As Long)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;The focus moved to selection 
box &quot; &amp; Id</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnSelectionboxListChanged</b>(ByVal 
Id As Long, ByVal Count As Long)<br>
&nbsp;&nbsp;&nbsp; pm_Page.<b>SetCursor</b> (swPropertyManagerPageCursors_Advance)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;The list in selection box &quot; &amp; 
Id &amp; &quot; changed&quot;</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnSliderPositionChanged</b>(ByVal 
Id As Long, ByVal Value As Double)<br>
&nbsp;&nbsp;&nbsp; Debug.Print &quot;Slider position changed&quot;<br>
End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnSliderTrackingCompleted</b>(ByVal 
Id As Long, ByVal Value As Double)</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Function PropertyManagerPage2Handler9_<b>OnSubmitSelection</b>(ByVal 
Id As Long, ByVal Selection As Object, ByVal SelType As Long, ItemText As 
String) As Boolean</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; PropertyManagerPage2Handler9_<b>OnSubmitSelection</b> 
= True</p>
<p class="APICODE">End Function</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Function PropertyManagerPage2Handler9_<b>OnTabClicked</b>(ByVal 
Id As Long) As Boolean</p>
<p class="APICODE">End Function</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnTextboxChanged</b>(ByVal 
Id As Long, ByVal Text As String)</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnUndo</b>()</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnWhatsNew</b>()</p>
<p class="APICODE">End Sub</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnLostFocus</b>(ByVal 
Id As Long)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Control box &quot; &amp; Id &amp; &quot; lost 
focus&quot;</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Private Sub PropertyManagerPage2Handler9_<b>OnGainedFocus</b>(ByVal 
Id As Long)</p>
<p class="APICODE">&nbsp;&nbsp; Dim varArray As Variant</p>
<p class="APICODE">&nbsp;&nbsp; Debug.Print &quot;Control box &quot; &amp; Id &amp; &quot; gained 
focus&quot;</p>
<p class="APICODE">&nbsp;&nbsp; varArray = pm_List.<b>GetSelectedItems</b></p>
<p class="APICODE">&nbsp;&nbsp; pm_Combo.<b>CurrentSelection</b> = varArray(0)</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Public Sub PropertyManagerPage2Handler9_<b>OnListBoxRMBUp</b>(ByVal 
Id As Long, ByVal posX As Long, ByVal posY As Long)</p>
<p class="APICODE">End Sub</p>
<p class="APICODE"><br>
</p>
<p class="APICODE">Public Function PropertyManagerPage2Handler9_<b>OnWindowFromHandleControlCreated</b>(ByVal 
Id As Long, ByVal Status As Boolean) As Long</p>
<p class="APICODE">End Function<br>
&nbsp;<br>
</p>
<p class="APICODE">Public Sub PropertyManagerPage2Handler9_O<b>nNumberboxTrackingCompleted</b>(ByVal 
Id As Long, ByVal Value As Double)</p>
<p class="APICODE">End Sub</p>
<p align="center"><a href="#Top">Back to top</a></p>

</body>

</html>
