<html>

<head>
<title>Insert and Use Plane with Manipulator Example (VBA)</title>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<link rel="stylesheet" type="text/css" href="ApiHelp.css">
</head>
<meta name=MS-HKWD content="VBA examples,planes">
<meta name=MS-HKWD content="VBA examples,manipulators">

<body>
<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>
<h1>Insert and Use Plane with Manipulator Example (VBA)</h1>
<p><a name="Top"></a>This example shows how to insert a plane that has a manipulator.</p>
<p>* <a href="#Module">Module</a></p>
<p>* <a href="#Class">Class module</a></p>
<p>&nbsp;</p>
<p class="APICODE">' <a name="Module"></a><b>Module</b></p>

<pre>'--------------------------------------------------------------
' Preconditions:
' 1. In the IDE:
'    a. Click <b>Tools &gt; References &gt; SOLIDWORKS &lt;</b><i>version</i><b>&gt;
'       exposed type libraries for add-in</b>.
'    b. Open the Immediate window.
' 2. Ensure that the specified part document exists.
'
' Postconditions:
' 1. Part document opens.
' 2. Plane with manipulator is displayed.
' 3. Distance, angles, height, and width of the plane are
'    printed to the Immediate window.
' 4. Click and hold the right-mouse button and drag the
'    plane up and down using the manipulator that calls the
'    the handler. The handle index is printed to 
'    the Immediate window at each drag.
' 5. Click and hold the right-mouse button and rotate the plane,
'    which calls the handler. The handle index
'    is printed to the Immediate window at each rotation.
'
' NOTE: Because the part document is used elsewhere, do not
' save any changes when closing it.
'---------------------------------------------------------------
</pre>
<pre>Option Explicit</pre>
<pre>Dim swApp As SldWorks.SldWorks
Dim swModelDoc As SldWorks.ModelDoc2
Dim swModelViewMgr As SldWorks.ModelViewManager
Dim swHdlr As Class1
Dim swManipulator As SldWorks.Manipulator
Dim swPlaneManipulator As SldWorks.PlaneManipulator
Dim fileName As String
Dim errors As Long
Dim warnings As Long
Dim PiVal As Double</pre>
<pre>Sub main()</pre>
<pre>    Set swHdlr = New Class1    </pre>
<pre>    Set swApp = Application.SldWorks    </pre>
<pre>    fileName = &quot;C:\Users\Public\Documents\SOLIDWORKS\SOLIDWORKS 2018\samples\tutorial\fillets\knob.sldprt&quot;
    Set swModelDoc = swApp.<b>OpenDoc6</b>(fileName, swDocPART, swOpenDocOptions_Silent, &quot;&quot;, errors, warnings)    </pre>
<pre>    ' Create a plane with a manipulator
    Set swModelViewMgr = swModelDoc.<b>ModelViewManager</b>
    Set swManipulator = swModelViewMgr.<b>CreateManipulator</b>(swManipulatorType_e.swPlaneManipulator, swHdlr)
    Set swPlaneManipulator = swManipulator.<b>GetSpecificManipulator</b>    </pre>
<pre>    ' Set PI
    PiVal = 4 * Atn(1)    </pre>
<pre>    ' Set the distance of the plane
    swPlaneManipulator.<b>Distance</b> = 0.04
    Debug.Print &quot;Distance = &quot; &amp; swPlaneManipulator.<b>Distance</b>    </pre>
<pre>    'Set the angles of the plane
    swPlaneManipulator.<b>XAngle</b> = 2 * PiVal / 180
    Debug.Print &quot;X = &quot; &amp; swPlaneManipulator.XAngle</pre>
<pre>    swPlaneManipulator.YAngle = 10 * PiVal / 180
    Debug.Print &quot;Y = &quot; &amp; swPlaneManipulator.<b>YAngle</b>    </pre>
<pre>    ' Set the height and width of the plane
    swPlaneManipulator.<b>Height</b> = 0.1
    Debug.Print (&quot;Height = &quot; &amp; swPlaneManipulator.<b>Height</b>)    </pre>
<pre>    swPlaneManipulator.<b>Width</b> = 0.075
    Debug.Print (&quot;Width = &quot; &amp; swPlaneManipulator.<b>Width</b>) 

<pre>&nbsp;&nbsp;&nbsp;&nbsp;</font>' Set the color of plane manipulator
&nbsp;&nbsp;&nbsp;&nbsp;swPlaneManipulator.<b>Color</b> = RGB(255, 0, 0)</pre>
<pre>    ' Update the plane's properties
    swPlaneManipulator.<b>Update</b>    </pre>
<pre>    ' Show plane manipulator
    swManipulator.<b>Show</b> swModelDoc</pre>
<pre>End Sub</pre>
<p align="center"><a href="#Top">Back to top</a></p>

<p class="APICODE">' <a name="Class"></a>Class module</p>
<pre>Option Explicit
Implements SwManipulatorHandler2</pre>
<pre>Private Sub SwManipulatorHandler2_<b>OnUpdateDrag</b>(ByVal pManipulator As Object, ByVal handleIndex As Long, ByVal newPosMathPt As Object)</pre>
<pre>    Debug.Print &quot;SwManipulatorHandler2_OnUpdateDrag&quot;
    Debug.Print &quot;  HandleIndex      = &quot; &amp; handleIndex
    Dim swRetManip As SldWorks.PlaneManipulator
    Set swRetManip = pManipulator
    </pre>
<pre>    If (handleIndex = 8) Then
        Dim retDist As Double
        retDist = swRetManip.<b>Distance</b>
    Else
        Dim angleX As Double
        Dim angleY As Double
        angleX = swRetManip.<b>XAngle</b>
        angleY = swRetManip.<b>YAngle</b>
    End If
    </pre>
<pre>End Sub</pre>
<pre>Private Function SwManipulatorHandler2_OnDelete(ByVal pManipulator As Object) As Boolean
End Function</pre>
<pre>Private Sub SwManipulatorHandler2_OnDirectionFlipped(ByVal pManipulator As Object)
End Sub</pre>
<pre>Private Function SwManipulatorHandler2_OnDoubleValueChanged(ByVal pManipulator As Object, ByVal Id As Long, Value As Double) As Boolean
End Function</pre>
<pre>Private Sub SwManipulatorHandler2_OnEndNoDrag(ByVal pManipulator As Object, ByVal handleIndex As Long)
End Sub</pre>
<pre>Private Sub SwManipulatorHandler2_OnHandleRmbSelected(ByVal pManipulator As Object, ByVal handleIndex As Long)
End Sub</pre>
<pre>Private Function SwManipulatorHandler2_OnHandleLmbSelected(ByVal pManipulator As Object) As Boolean
End Function</pre>
<pre>Private Sub SwManipulatorHandler2_OnHandleSelected(ByVal pManipulator As Object, ByVal handleIndex As Long)
End Sub</pre>
<pre>Private Sub SwManipulatorHandler2_OnItemSetFocus(ByVal pManipulator As Object, ByVal Id As Long)
End Sub</pre>
<pre>Private Function SwManipulatorHandler2_OnLmbSelected(ByVal pManipulator As Object) As Boolean
End Function</pre>
<pre>Private Function SwManipulatorHandler2_OnStringValueChanged(ByVal pManipulator As Object, ByVal Id As Long, Value As String) As Boolean
End Function</pre>
<pre>Private Sub SwManipulatorHandler2_OnEndDrag(ByVal pMani As Object, ByVal index As Long)
End Sub</pre>
<p align="center"><a href="#Top">Back to top</a></p>

<p>&nbsp;</p>

</body>

</html>
