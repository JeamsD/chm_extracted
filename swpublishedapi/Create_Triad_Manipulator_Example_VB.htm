<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Create Triad Manipulator Example (VBA)</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta NAME=MS-HAID CONTENT=EXCreateTriadManipulator>
<meta name=MS-HKWD content="VBA examples,triad manipulator">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=3913>
<meta name=layout-width content=844>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="./APIHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Create Triad Manipulator Example (VBA)</h1>

<p><a name="top"></a>This example shows how to create a triad manipulator.</p>

<p class=apiCode>'----------------------------------------------------------------------------<br>
' Preconditions: <br>
' 1. Click <b>Tools &gt; References</b> <b>&gt;</b> <b>SolidWorks 2015 exposed type libraries 
for <br>
'&nbsp;&nbsp;&nbsp; add-in use</b> (<b>swpublished.tlb</b>) and click <b>OK</b>.<br>
' 2. Right-click the project name in the Project Explorer and 
click<br>
'&nbsp;&nbsp;&nbsp; <b>Insert &gt; Class Module</b>.<br>
' 3. Click <b>Class1</b> in the Project Explorer.<br>
' 4. Type <b>swDragManipHdlr</b> in <b>(Name)</b> in the Properties 
window.<br>
' 5. Copy <a href="#Module">Module</a> to the main module.<br>
' 6. Copy <a href="#Class">Class 
 module</a> to the swDragManipHdlr class module.<br>
' 7. Open a model document and select a face.<br>
' 8. Open an Immediate window.<br>
'<br>
' Postconditions: <br>
' 1. Creates a triad manipulator whose origin is the point<br>
'&nbsp;&nbsp;&nbsp; selected on the face.<br>
' 2. Drag a triad manipulator handle and inspect the Immediate window.<br>
'----------------------------------------------------------------------------</p>

<h3><a name=Module></a>'Module</h3>

<p class=apiCode>Option Explicit</p>

<p class=apiCode>&nbsp;</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->Dim 
 swManip <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->As 
 SldWorks.Manipulator</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->Dim swTriad <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->As 
 SldWorks.TriadManipulator</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}--><!--kadov_tag{{</spaces>}}-->Dim 
 swDragHdlr <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->As 
 swDragManipHdlr</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->Dim swFace <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->As 
 SldWorks.Face2</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode>Sub main()</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swApp <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->As 
 SldWorks.SldWorks</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swMathUtil <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->As 
 SldWorks.MathUtility</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swModel <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->As 
 SldWorks.ModelDoc2</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swModViewMgr <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->As 
 SldWorks.ModelViewManager</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swSelMgr <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->As 
 SldWorks.SelectionMgr</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 vPickPt <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->As 
 Variant</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Dim 
 swPickPt <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->As 
 SldWorks.MathPoint</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Set 
 swDragHdlr = New swDragManipHdlr</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Set 
 swApp = Application.<span style="font-weight: bold;">SldWorks</span></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Set 
 swMathUtil = swApp.<span style="font-weight: bold;">GetMathUtility</span></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Set 
 swModel = swApp.<span style="font-weight: bold;">ActiveDoc</span></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Set 
 swSelMgr = swModel.<span style="font-weight: bold;">SelectionManager</span></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Set 
 swFace = swSelMgr.<span style="font-weight: bold;">GetSelectedObject6</span>(1, 
-1)</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->vPickPt 
 = swSelMgr.<span style="font-weight: bold;">GetSelectionPoint2</span>(1, -1)</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Set 
 swPickPt = swMathUtil.<span style="font-weight: bold;">CreatePoint</span>((vPickPt))</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Set 
 swModViewMgr = swModel.<span style="font-weight: bold;">ModelViewManager</span></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Set 
 swManip = swModViewMgr.<span style="font-weight: bold;">CreateManipulator</span>(swTriadManipulator, 
 swDragHdlr)</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->Set 
 swTriad = swManip.<span style="font-weight: bold;">GetSpecificManipulator</span></p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swTriad.<span 
 style="font-weight: bold;">Origin</span> = swPickPt</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swManip.<span 
 style="font-weight: bold;">Show</span> swModel</p>

<p class=apiCode><!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=apiCode>End Sub</p>
<p class=apiCode>&nbsp;</p>
<p class=apiCode align="center"><a href="#top">Back to top</a></p>

<h3><a name=Class></a>'Class module</h3>

<p class="APICODE">Option Explicit</p>
<p class="APICODE">Implements SwManipulatorHandler2</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">Private Function SwManipulatorHandler2_OnDelete(ByVal 
pManipulator As Object) As Boolean</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print 
&quot;Manipulator deleted&quot;</p>
<p class="APICODE">End Function</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">Private Sub SwManipulatorHandler2_OnDirectionFlipped(ByVal 
pManipulator As Object)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print 
&quot;Direction flipped&quot;</p>
<p class="APICODE">End Sub</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">Private Function 
SwManipulatorHandler2_OnDoubleValueChanged(ByVal pManipulator As Object, ByVal 
Id As Long, Value As Double) As Boolean</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print 
&quot;Double value changed &quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; Value</p>
<p class="APICODE">End Function</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">Private Sub SwManipulatorHandler2_OnEndNoDrag(ByVal 
pManipulator As Object, ByVal handleIndex As Long)<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print &quot;Mouse button released&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; HandleIndex&nbsp;&nbsp;as 
defined in swTriadManipulatorControlPoints_e&nbsp;&nbsp;&nbsp; 
= &quot; + handleIndex</p>
<p class="APICODE"><br>
End Sub</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">Private Sub SwManipulatorHandler2_OnEndDrag(ByVal 
pManipulator As Object, ByVal handleIndex As Long)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print 
&quot;Mouse button released after dragging a manipulator handle&quot;</p>
<p class="APICODE">End Sub</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">Private Sub SwManipulatorHandler2_OnHandleRmbSelected(ByVal 
pManipulator As Object, ByVal handleIndex As Long)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print 
&quot;Right-mouse button clicked&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; HandleIndex&nbsp;as 
defined in swTriadManipulatorControlPoints_e&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; + handleIndex</p>
<p class="APICODE">End Sub</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">Private Sub SwManipulatorHandler2_OnHandleSelected(ByVal 
pManipulator As Object, ByVal handleIndex As Long)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;Manipulator handle selected&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; HandleIndex&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; + handleIndex</p>
<p class="APICODE">End Sub</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">Private Sub SwManipulatorHandler2_OnItemSetFocus(ByVal 
pManipulator As Object, ByVal Id As Long)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print 
&quot;Focus set on item&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Item ID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; Id</p>
<p class="APICODE">End Sub</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">Private Function 
SwManipulatorHandler2_OnHandleLmbSelected(ByVal pManipulator As Object) As 
Boolean</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print 
&quot;Left-mouse button clicked&quot;</p>
<p class="APICODE">End Function</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">Private Function 
SwManipulatorHandler2_OnStringValueChanged(ByVal pManipulator As Object, ByVal 
Id As Long, Value As String) As Boolean</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print 
&quot;String value changed&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; Value</p>
<p class="APICODE">End Function</p>
<p class="APICODE">&nbsp;</p>
<p class="APICODE">Private Sub SwManipulatorHandler2_OnUpdateDrag(ByVal 
pManipulator As Object, ByVal handleIndex As Long, ByVal newPosMathPt As Object)</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print 
&quot;Manipulator handle moved while left- or right-mouse button depressed&quot;</p>
<p class="APICODE">&nbsp;&nbsp;&nbsp; Debug.Print &quot;&nbsp; HandleIndex&nbsp;as 
defined in swTriadManipulatorControlPoints_e&nbsp;&nbsp;&nbsp;&nbsp; 
= &quot; &amp; handleIndex</p>
<p class="APICODE">End Sub</p>

<p class="APICODE" align="center"><a href="#top">Back to top</a></p>

</body>

</html>
