<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Using the SOLIDWORKS COM Non-Attributed Add-in Wizard 
 to Create a C++/CLI Add-in</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=MS-HKWD content=Use>
<meta name=MS-HKWD content="Create,COM add-in">
<meta name=MS-HKWD content=Create>
<meta name=MS-HKWD content="Wizards">
<meta name=MS-HKWD content="Add-ins,Visual C++/CLI">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2173>
<meta name=layout-width content=782>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="../ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>





<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Using the SOLIDWORKS COM Non-Attributed Add-in Wizard 
 to Create a C++/CLI Add-in</h1>

<p><a name=Top></a>This topic describes how to use the <span style="font-weight: bold;">
SOLIDWORKS 
 COM Non-Attributed Add-in Wizard</span> to create Visual C++/CLI add-ins in 
Microsoft Visual Studio .NET 2005 or later. </p>

<ul style="list-style: disc;"
	type=disc>
	
	<li class=kadov-p><p><a href="#Wizard">Creating a Visual C++/CLI Add-in Using the 
	SOLIDWORKS 
COM Non-Attributed Add-in Wizard</a></p></li>
	
	<li class=kadov-p><p><a href="#Files">Examining Visual C++/CLI Add-In Files Created by the 
	SOLIDWORKS COM Non-Attributed 
 Add-in Wizard</a></p></li>
</ul>

<p><span style="font-weight: bold;">NOTES:</span> </p>

<ul style="list-style: disc;"
	type=disc>
	
	<li class=kadov-p>The <span style="font-weight: bold;">SOLIDWORKS COM 
	Non-Attributed Add-in Wizard</span> is included in the <a href="../GettingStarted/SolidWorks_API_Getting_Started_Overview.htm">
	SOLIDWORKS 
 API SDK</a>. </li>
	<li class=kadov-p>The Visual C++/CLI Add-in allows the use of MFC objects.</li>
	
</ul>

<h2><a name=Wizard></a>Creating a Visual C++/CLI Add-in 
 Using the SOLIDWORKS COM Non-Attributed Add-in Wizard </h2>

<ol style="list-style: decimal;"
	type=1>
	
	<li class=kadov-p><p>Click <span style="font-weight: bold;">Start &gt; Programs 
	&gt; Microsoft Visual Studio <i>version_number</i> &gt; Microsoft 
 Visual Studio <i>version_number</i></span>.<br>
	&nbsp;</p></li>
	
	<li class=kadov-p><p>Click the <span style="font-weight: bold;">New 
 Project</span> button.</p></li>
	
	<ol style="list-style: lower-alpha;"
		type=a>
		
		<li class=kadov-p><p>Select <span style="font-weight: bold;">Visual C++ 
		&gt; SOLIDWORKS 
 COM Non-Attributed Addin</span> from the templates list.&nbsp;<!--kadov_tag{{</spaces>}}--></p></li>
		
		<li class=kadov-p><p>Enter the name of your project in <span style="font-weight: bold;">Name</span>.</p></li>
		<li class=kadov-p>
		<p>Enter the directory of your project in <b>Location</b>.</p></li>
		
		<li class=kadov-p><p>Click <span style="font-weight: bold;">OK</span>.</p></li>
	</ol>
	
	<li class=kadov-p><p>Type the name of your add-in in <span style="font-weight: bold;">Short 
 name</span>. The other fields are automatically filled in using this name.</p></li>
	
	<li class=kadov-p><p>Click <span style="font-weight: bold;">Options</span>.</p></li>
	
	<ol style="list-style: lower-alpha;"
		type=a>
		
		<li class=kadov-p><p>Under <span style="font-weight: bold;">Threading</span>, 
 select the threading option for the project. </p></li>
		
		<li class=kadov-p><p>Under <span style="font-weight: bold;">Interface</span>, 
 select whether or not to add the <span style="font-weight: bold;">oleautomation</span> 
 attribute to your code by selecting <span style="font-weight: bold;">Automation 
 Compatible</span>.</p></li>
	</ol>
	
	<li class=kadov-p><p>Click <span style="font-weight: bold;">SwOptions</span>.</p></li>
	
	<ol style="list-style: lower-alpha;"
		type=a>
		
		<li class=kadov-p><p><span style="margin-left: 0px;">Under </span><span 
 style="margin-left: 0px; font-weight: bold;">AddinEvents</span><span style="margin-left: 0px;">, 
 select the events for which you want to listen: <!--kadov_tag{{<spaces>}}-->&nbsp;</span><!--kadov_tag{{</spaces>}}--></p></li>
	</ol>
	
	<ol style="list-style: disc;"
		type=disc>
		
		<ul style="list-style: disc;"
			type=disc>
			
			<li class=kadov-p><p><span style="font-weight: bold;">SOLIDWORKS 
 Events</span><span>.</span> Fired by the SOLIDWORKS application.</p></li>
			
			<li class=kadov-p><p><span style="font-weight: bold;">Part 
 Events</span><span>.</span> Fired by individual part documents.</p></li>
			
			<li class=kadov-p><p><span style="font-weight: bold;">Assembly 
 Events</span>. Fired by individual assembly documents.</p></li>
			
			<li class=kadov-p><p><span style="font-weight: bold;">Drawing 
 Events</span>.<span style="font-weight: bold;"> </span>Fired by individual 
 drawing documents.</p></li>
			
			<li class=kadov-p><p><span style="font-weight: bold;">Model 
 View Events</span>. Fired by individual model views in each document.</p></li>
		</ul>
	</ol>
</ol>

<p style="margin-left: 88px;">It is recommended that you leave the <span 
 style="font-weight: bold;">SOLIDWORKS Events</span> check box selected 
 because:</p>

<ol style="list-style: disc;"
	type=disc>
	
	<ul style="list-style: disc;"
		type=disc>
		
		<li class=kadov-p><p style="margin-left: 48px;">This check box 
 must be selected to listen to any of the other events.</p></li>
		
		<li class=kadov-p><p style="margin-left: 48px;">You can use this 
 event's code as sample code if you decide to include event handling in 
 the future. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p></li>
	</ul>
</ol>

<p style="margin-left: 88px;">Model views are created in individual documents. 
 To listen for a model view event, you must be listening to the basic document. 
 Thus, the <span style="font-weight: bold;">Model View Events</span> check 
 box is not available until you select at least one of these check boxes: 
 <span style="font-weight: bold;">Part Events</span>, <span style="font-weight: bold;">Assembly 
 Events</span>, or <span style="font-weight: bold;">Drawing Events</span>. 
 </p>

<ul style="list-style: decimal;"
	type=1>
	
	<ol start=2
		style="list-style: lower-alpha;"
		type=a>
		
		<li class=kadov-p><p style="margin-left: 8px;">Under <span style="font-weight: bold;">Addin 
 User Interface</span>, select <span style="font-weight: bold;">Create 
 Property Page</span> to include an add-in PropertyManager page. This page 
 is displayed in the SOLIDWORKS application and should contain controls 
 to extend the add-in's user interface. <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--></p></li>
	</ol>
</ul>

<ol start=6
	style="list-style: decimal;"
	type=1>
	
	<li class=kadov-p><p style="margin-left: 8px;">Click <span style="font-weight: bold;">Finish</span>.</p></li>
</ol>

<p>Wait for the <span style="font-weight: bold;">SOLIDWORKS COM Non-Attributed Addin Wizard</span><span style="font-weight: bold; color: #000080;"> </span>to 
 customize your add-in and set up the project.</p>
<p align="center"><span style="color: #00000000;"><a href="#Top"
													style="font-style: normal;">Back 
 to top</a></span></p>

<h2><a name=Files></a>Examining Visual C++/CLI Add-In Files Created by the 
SOLIDWORKS COM Non-Attributed 
 Add-in Wizard</h2>
<table border="1" width="92%">
	<tr>
		<th width="176">&nbsp;<p>C++ Add-in File</th>
		<th>&nbsp;<p>Description</th>
	</tr>
	<tr>
		<td width="176">&nbsp;<p>SwAddin<i>n</i>.rgs</td>
		<td>&nbsp;<p>This file contains the information that automatically 
		registers your <br>
		add-in with SOLIDWORKS when it is compiled. You can change Name<br>
		and Description to better indicate the purpose of your add-in.<br>
		<br>
		<b>NOTE:</b> SwAddin<i>n</i>.rgs is the generic name for this file. The 
		letter <i>n</i><br>
		is automatically inserted and incremented by the wizard to make the 
		project files unique.</td>
	</tr>
	<tr>
		<td width="176">&nbsp;<p>BitmapHandler.cpp and corresponding .h file</td>
		<td>&nbsp;<p>Images for COM add-ins (toolbars, bitmap buttons, and so 
		on) are bitmaps stored in the DLL as resources. To use any of these 
		images with SOLIDWORKS, you must retrieve the image and save it to a 
		file. You can then pass the path to the file as an argument to the 
		methods that use the image. The BitmapHandler object facilitates this 
		effort. <br>
		<br>
		To use the BitmapHandler object, call CreateFileFromResourceBitmap <br>
		and pass it the resource name of the image you want to retrieve. The 
		function creates the file in the system's temporary folder and returns 
		the full path. If you then pass this path to a method, SOLIDWORKS can 
		load the image.</td>
	</tr>
	<tr>
		<td width="176">&nbsp;<p>CSwAddin<i>n</i>Dialog.cpp and corresponding .h file</td>
		<td>&nbsp;<p>This file is included to demonstrate compatibility with MFC.</td>
	</tr>
	<tr>
		<td width="176">&nbsp;<p>DocView.cpp and corresponding .h file</td>
		<td>&nbsp;<p>This file contains the definition of the DocView object. If 
		an add-in <br>
		is listening for ModelView events, then there is a DocView instance for
		<br>
		each open ModelView.</td>
	</tr>
	<tr>
		<td width="176">&nbsp;<p>PMPageHandler.cpp and corresponding .h file</td>
		<td>&nbsp;<p>This file contains the class that implements the 
		IPropertyManagerPage2Handler<i>n</i> interface. An instance of this 
		object is passed to SOLIDWORKS when creating a PropertyManager page. 
		When a control on the page is manipulated, the corresponding function in 
		this object is called.</td>
	</tr>
	<tr>
		<td width="176">&nbsp;<p>stdafx.cpp and corresponding .h file</td>
		<td>&nbsp;<p>This file contains the #import statements for the 
		SOLIDWORKS type libraries and any other necessary SOLIDWORKS #include 
		statements. <br>
		<br>
		Because a PropertySheet member exists in the VC7 libraries, 
		IModelDoc2::PropertySheet was redefined to IModelDoc2::SwPropertySheet 
		in the #import statement for sldworks.tlb.</td>
	</tr>
	<tr>
		<td width="176">&nbsp;<p>SwAddin<i>n</i>.cpp and corresponding .h file</td>
		<td>&nbsp;<p>This is the main add-in file. It contains the 
		implementation of the <br>
		ISwAddin interface. <br>
		<br>
		ISwAddin::ConnectToSw and ISwAddin::DisconnectFromSw are the entry and 
		exit functions for this add-in. This file also contains the user 
		interface and SOLIDWORKS event callback functions.<br>
		<br>
		<b>NOTE:</b> SwAddin<i>n</i>.cpp is the generic name for this file. The 
		letter n<br>
		is automatically inserted and incremented by the wizard to make the 
		project files unique.</td>
	</tr>
	<tr>
		<td width="176">&nbsp;<p>SwAddin<i>n</i>.def</td>
		<td>&nbsp;<p>This file declares DLL function exports.</td>
	</tr>
	<tr>
		<td width="176">&nbsp;<p>SwAddin<i>n</i>.idl</td>
		<td>&nbsp;<p>This file is used to generate the type library for the 
		add-in.</td>
	</tr>
	<tr>
		<td width="176">&nbsp;<p>SwAddin<i>n</i>_module.cpp</td>
		<td>&nbsp;<p>Generated by Visual Studio, this file contains COM 
		definitions for the DLL.</td>
	</tr>
	<tr>
		<td width="176">&nbsp;<p>SwDocument.cpp and corresponding .h file</td>
		<td>&nbsp;<p>This file contains the CSwDocument class that handles 
		events thrown <br>
		by open model documents. There is an instance of this class for every
		<br>
		open model document.</td>
	</tr>
	<tr>
		<td width="176">&nbsp;<p>UserPropertyManagerPage.cpp and corresponding 
		.h file</td>
		<td>&nbsp;<p>This file contains the wrapper class for the SOLIDWORKS 
		IPropertyManagerPage2. A PropertyManager page allows you to extend the 
		user interface for your add-in with standard buttons, check boxes, and 
		so on. <br>
		<br>
		The function AddControls controls the layout of the PropertyManager <br>
		page. All controls must be added to group boxes on the page. Group boxes 
		are displayed in the order in which they are added. Controls in a group 
		box are displayed in the order in which they are added to the group box.</td>
	</tr>
</table>


<p style="color: #00000000;
			text-align: center;
			font-style: normal;"
	align=center><span style="color: #00000000;"><a href="#Top"
													style="font-style: normal;">Back 
 to top</a></span></p>
 

</body>

</html>
