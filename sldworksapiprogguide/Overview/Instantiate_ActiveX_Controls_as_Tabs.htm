<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Instantiate ActiveX Controls as Tabs</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=MS-HKWD content="ActiveX controls">
<meta name=MS-HKWD content="Tabs, FeatureManager design tree">
<meta name=MS-HKWD content="Tabs">
<meta name=MS-HKWD content="Tabs, model view">
<meta name=MS-HKWD content="Tabs, ActiveX controls">
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=472>
<meta name=layout-width content=736>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="../ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>Instantiate ActiveX Controls as Tabs</h1>

<p>Adding a custom tab to the FeatureManager design tree and model view 
 were previously only available to MFC-extension DLL add-ins and required 
 a strong knowledge of MFC, Windows messaging, and Windows SDK. Problems 
 were difficult to diagnose and fix. Additionally the SOLIDWORKS methods 
 for adding a tab to the FeatureManager design tree and model view were 
 highly MFC-specific and, as such, were not COM-compliant. </p>

<p>SOLIDWORKS now has the ability to instantiate any arbitrary ActiveX 
 control as a tab in the FeatureManager design tree and model view. The 
 new methods are fully COM-compliant and reduce the knowledge required 
 for adding a tab.</p>

<p>Using VBA, VB.NET, C#, or any development environment capable of creating 
 an ActiveX control, you can easily develop a SOLIDWORKS-specific ActiveX 
 control. </p>

<p>See:</p>

<ul style="list-style: disc;"
	type=disc>
	
	<li class=kadov-p><p><a href="sldworksAPI.chm::/SolidWorks.interop.sldworks~SolidWorks.interop.sldworks.IModelViewManager~CreateFeatureMgrControl2.html">IModelViewManager::CreateFeatureMgrControl2</a></p></li>
	
	<li class=kadov-p><p><a href="sldworksAPI.chm::/SolidWorks.interop.sldworks~SolidWorks.interop.sldworks.IModelViewManager~AddControl.html">IModelViewManager::AddControl</a></p></li>
</ul>

</body>

</html>
