<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>MFC DLL Add-ins to ATL COM DLL Add-ins Migration</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta NAME=MS-HKWD CONTENT=Add-ins>
<meta NAME=MS-HKWD CONTENT=Add-ins, ATL>
<meta NAME=MS-HKWD CONTENT=ATL>
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=597>
<meta name=layout-width content=651>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="../ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>MFC DLL Add-ins to ATL COM DLL Add-ins Migration</h1>

<p>You can use either of the following scenarios to migrate MFC DLL add-ins 
 to ATL COM DLL add-ins.</p>

<p><span style="font-weight: bold;">NOTE:</span> Creating a new ATL-based 
 COM add-in with Visual Studio .NET 2003 does not allow for MFC support. 
 See Scenario 2 for a work-around.</p>

<h2>Scenario 1</h2>
<p>Create a master ATL add-in that responds to all of the callbacks from 
 SOLIDWORKS. This ATL add-in then loads the original MFC add-in and passes 
 all callbacks directly to the existing exported callback routines in the 
 MFC add-in. </p>

<p>The MFC add-in then needs to remove its calls to create the menus and 
 toolbars as they are located in the ATL add-in. The ATL add-in becomes 
 a thin DLL that passes all calls from SOLIDWORKS to the MFC add-in.</p>

<h2><a name=Scenario3></a>Scenario 2</h2>

<p>There is an issue with the C++ wizard for Visual Studio .NET 2003. This 
 wizard creates 'attributed' C++. As a result, it is not possible to use 
 MFC in this form of ATL DLL. This is a current limitation of Microsoft 
 technology, as both ATL and MFC generate a dllmain() function.</p>

<p>To create a project that does work with MFC, you can create an ATL add-in 
 in Visual C++ 6.0.</p>

<ol style="list-style: decimal;"
	type=1>
	
	<li class=kadov-p><p>Create a new ATL project in Visual C++ 6.0.</p></li>
	
	<li class=kadov-p><p>Add a new simple ATL object to your VC 6 project 
 using the SOLIDWORKS Wizard. This gives you a starting point. </p></li>
	
	<li class=kadov-p><p>Open the project up in Visual Studio .NET 2003 
 and continue working. Move all of your code over to the new add-in, using 
 AFX_MANAGE_STATE(AfxGetStaticModuleState()) where appropriate. </p></li>
</ol>

</body>

</html>
