<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>SelectionManagerC++</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=1906>
<meta name=layout-width content=651>


<!--(Links)=========================================================-->

<link rel="StyleSheet" href="../ApiHelp.css">



</head>

<!--(Body)==========================================================-->


<body>

<h1><span style="font-weight: normal; font-size: 7.5pt;">SOLIDWORKS API 
 Help</span></h1>

<h1>SelectionManager.cpp Written in C++</h1>

<p class=CodePlain>// SelectionManager.cpp : Defines the entry point for 
 the console application</p>

<p class=CodePlain>// Gets the selected objects in the active model document</p>

<p class=CodePlain>&nbsp;</p>

<p class=CodePlain>#include &quot;stdafx.h&quot;</p>

<p class=CodePlain>&nbsp;</p>

<p class=CodePlain>// Add the path to the SOLIDWORKS type libraries to 
 the &quot;Additional Include Directories&quot;.</p>

<p class=CodePlain>#import &quot;sldworks.tlb&quot; raw_interfaces_only, 
 raw_native_types, no_namespace, named_guids <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->// 
 SOLIDWORKS type library</p>

<p class=CodePlain>&nbsp;</p>

<p class=CodePlain>#import &quot;swconst.tlb&quot; raw_interfaces_only, 
 raw_native_types, no_namespace, named_guids <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->// 
 SOLIDWORKS constants type library</p>

<p class=CodePlain>&nbsp;</p>

<p class=CodePlain>int _tmain(int argc, _TCHAR* argv[])</p>

<p class=CodePlain>{</p>

<p class=CodePlain
	style="margin-left: 43px;">// Initialize COM</p>

<p class=CodePlain
	style="margin-left: 43px;">// Do this before using ATL smart pointers 
 so COM is available</p>

<p class=CodePlain
	style="margin-left: 43px;">CoInitialize(NULL);</p>

<p class=CodePlain
	style="margin-left: 43px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 43px;">// Use a block so the smart pointers are 
 destructed when the scope of this block is left</p>

<p class=CodePlain
	style="margin-left: 43px;">{</p>

<p class=CodePlain
	style="margin-left: 83px;">// Use ATL smart pointers</p>

<p class=CodePlain
	style="margin-left: 83px;">CComPtr&lt;ISldWorks&gt; <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swApp;</p>

<p class=CodePlain
	style="margin-left: 83px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 83px;">if(swApp.CoCreateInstance(__uuidof(SldWorks), 
 NULL, CLSCTX_LOCAL_SERVER) != S_OK) {</p>

<p class=CodePlain
	style="margin-left: 123px;">return(0); <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}--></p>

<p class=CodePlain
	style="margin-left: 83px;">}</p>

<p class=CodePlain
	style="margin-left: 43px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 83px;">swApp-&gt;put_UserControl(VARIANT_TRUE);</p>

<p class=CodePlain
	style="margin-left: 83px;">swApp-&gt;put_Visible(VARIANT_TRUE);</p>

<p class=CodePlain
	style="margin-left: 83px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 83px;">CComPtr&lt;IModelDoc2&gt; <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->swModel;</p>

<p class=CodePlain
	style="margin-left: 83px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 83px;">swApp-&gt;get_IActiveDoc2(&amp;swModel);</p>

<p class=CodePlain
	style="margin-left: 83px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 83px;">if (! swModel) {</p>

<p class=CodePlain
	style="margin-left: 123px;">return(0);</p>

<p class=CodePlain
	style="margin-left: 83px;">}</p>

<p class=CodePlain
	style="margin-left: 83px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 83px;">CComBSTR <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->strModelTitle;</p>

<p class=CodePlain
	style="margin-left: 83px;">long <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->nDocumentType; 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->// swDocumentTypes_e</p>

<p class=CodePlain
	style="margin-left: 83px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 83px;">swModel-&gt;GetTitle(&amp;strModelTitle);</p>

<p class=CodePlain
	style="margin-left: 83px;">swModel-&gt;GetType(&amp;nDocumentType);</p>

<p class=CodePlain
	style="margin-left: 83px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 43px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 83px;">CComPtr&lt;ISelectionMgr&gt; <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swSelectionManager;</p>

<p class=CodePlain
	style="margin-left: 83px;">long <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->lNumSelections;</p>

<p class=CodePlain
	style="margin-left: 83px;">long <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->nSelectionType; 
 <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->// 
 swSelectType_e </p>

<p class=CodePlain
	style="margin-left: 83px;">CComPtr&lt;IDispatch&gt; <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swSelectedObject;</p>

<p class=CodePlain
	style="margin-left: 83px;">CComPtr&lt;IFace2&gt; <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swFace;</p>

<p class=CodePlain
	style="margin-left: 83px;">CComPtr&lt;IEdge&gt; <!--kadov_tag{{<spaces>}}-->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<!--kadov_tag{{</spaces>}}-->swEdge;</p>

<p class=CodePlain
	style="margin-left: 83px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 83px;">swModel-&gt;get_ISelectionManager(&amp;swSelectionManager);</p>

<p class=CodePlain
	style="margin-left: 83px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 83px;">swSelectionManager-&gt;GetSelectedObjectCount2(-1, 
 &amp;lNumSelections);</p>

<p class=CodePlain
	style="margin-left: 83px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 83px;">for (int i = 1; i &lt;= lNumSelections; 
 i++) {</p>

<p class=CodePlain
	style="margin-left: 83px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 123px;">swSelectionManager-&gt;GetSelectedObject6(i, 
 -1, &amp;swSelectedObject);</p>

<p class=CodePlain
	style="margin-left: 123px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 123px;">swSelectionManager-&gt;GetSelectedObjectType3(i, 
 -1, &amp;nSelectionType);</p>

<p class=CodePlain
	style="margin-left: 123px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 123px;">switch (nSelectionType) {</p>

<p class=CodePlain
	style="margin-left: 123px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 163px;">case swSelectType_e::swSelFACES:</p>

<p class=CodePlain
	style="margin-left: 203px;">swSelectedObject.QueryInterface(&amp;swFace);</p>

<p class=CodePlain
	style="margin-left: 203px;">break;</p>

<p class=CodePlain
	style="margin-left: 203px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 163px;">case swSelectType_e::swSelEDGES:</p>

<p class=CodePlain
	style="margin-left: 203px;">swSelectedObject.QueryInterface(&amp;swEdge);</p>

<p class=CodePlain
	style="margin-left: 203px;">break;</p>

<p class=CodePlain
	style="margin-left: 123px;">}</p>

<p class=CodePlain
	style="margin-left: 83px;">}</p>

<p class=CodePlain
	style="margin-left: 43px;">} </p>

<p class=CodePlain
	style="margin-left: 43px;">// ATL smart pointers are destructed so 
 all COM objects you held on to are released</p>

<p class=CodePlain
	style="margin-left: 43px;">// Now you can safely shut down COM as you 
 do not need it any longer</p>

<p class=CodePlain
	style="margin-left: 43px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 43px;">// Stop COM</p>

<p class=CodePlain
	style="margin-left: 43px;">CoUninitialize();</p>

<p class=CodePlain
	style="margin-left: 43px;">&nbsp;</p>

<p class=CodePlain
	style="margin-left: 43px;">return(0);</p>

<p class=CodePlain>}</p>

</body>

</html>
